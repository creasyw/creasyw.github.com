<?xml version='1.0' encoding='UTF-8'?><?xml-stylesheet href="http://www.blogger.com/styles/atom.css" type="text/css"?><feed xmlns='http://www.w3.org/2005/Atom' xmlns:openSearch='http://a9.com/-/spec/opensearchrss/1.0/' xmlns:georss='http://www.georss.org/georss' xmlns:gd='http://schemas.google.com/g/2005' xmlns:thr='http://purl.org/syndication/thread/1.0'><id>tag:blogger.com,1999:blog-2013717245689924924.archive</id><updated>2013-08-10T01:15:52.971-05:00</updated><title type='text'>Creasy's Blog</title><link rel='http://schemas.google.com/g/2005#feed' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/archive'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/archive'/><link rel='http://schemas.google.com/g/2005#post' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/archive'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><generator version='7.00' uri='http://www.blogger.com'>Blogger</generator><entry><id>tag:blogger.com,1999:blog-2013717245689924924.layout</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#template'/><title type='text'>模板: Creasy's Blog</title><content type='text'>&lt;?xml version="1.0" encoding="UTF-8" ?&gt;
&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html xmlns='http://www.w3.org/1999/xhtml' xmlns:b='http://www.google.com/2005/gml/b' xmlns:data='http://www.google.com/2005/gml/data' xmlns:expr='http://www.google.com/2005/gml/expr'&gt;
  &lt;head&gt;
    &lt;b:include data='blog' name='all-head-content'/&gt;
    &lt;title&gt;&lt;data:blog.pageTitle/&gt;&lt;/title&gt;
    &lt;b:skin&gt;&lt;![CDATA[/*

/* **************************
Name: Keep It Simple
Blogger by: http://blogandweb.com/
Distributed by: http://btemplates.com/
Designer: http://www.styleshout.com/
Date: Nov 08
***************************** 

*//* Definicion de variables
   ====================
   &lt;Variable name="textocolor" description="Text Color"
             type="color" default="#666666" value="#666666"&gt;
   &lt;Variable name="enlacecolor" description="Link Color"
             type="color" default="#AE855C" value="#AE855C"&gt;
   &lt;Variable name="colorenlaceencima" description="Hover Link Color"
             type="color" default="#AE855C" value="#AE855C"&gt;
   &lt;Variable name="colortituloblog" description="Blog Title Color"
             type="color" default="#93b876" value="#93b876"&gt;
   &lt;Variable name="descripcioncolor" description="Blog Description Color"
             type="color" default="#7ba45b" value="#7ba45b"&gt;
   &lt;Variable name="colortituloentrada" description="Post Title Color"
             type="color" default="#444444" value="#444444"&gt;
   &lt;Variable name="colormenu" description="Menu Color"
             type="color" default="#666666" value="#666666"&gt;
   &lt;Variable name="colortituloslateral" description="Sidebar Title Color"
             type="color" default="#444444" value="#444444"&gt;
   &lt;Variable name="colortextolateral" description="Sidebar Text Color"
             type="color" default="#7BA857" value="#7BA857"&gt;
*/

#outer-wrapper {
}

#navbar-iframe {
   height:0px;
   visibility:hidden;
   display:none
}

/*-- (Generales) --*/

/* http://meyerweb.com/eric/thoughts/2007/05/01/reset-reloaded/ */

html, body, div, span, applet, object, iframe, h1, h2, h3, h4, h5, h6, p, blockquote, pre,
a, abbr, acronym, address, big, cite, code, del, dfn, em, font, img, ins, kbd, q, s, samp,
small, strike, strong, sub, sup, tt, var,dl, dt, dd, ol, ul, li, fieldset, form, label, legend,
table, caption, tbody, tfoot, thead, tr, th, td {
	margin: 0;
	padding: 0;
	border: 0;
	outline: 0;
	font-weight: inherit;
	font-style: inherit;
	font-size: 100%;
	font-family: inherit;
	vertical-align: baseline;
}
/* remember to define focus styles! */
:focus {
	outline: 0;
}
body {


  font-size/* */:/**/small;
  font-size: /**/small;

	line-height: 1;
	color: black;
	background: white;
}
ol, ul {
	list-style: none;
}
/* tables still need 'cellspacing="0"' in the markup */
table {
	border-collapse: separate;
	border-spacing: 0;
}
caption, th, td {
	text-align: left;
	font-weight: normal;
}
blockquote:before, blockquote:after,
q:before, q:after {
	content: "";
}
blockquote, q {
	quotes: "" "";
}

/*
	960 Grid System ~ Core CSS.
	Learn more ~ http://960.gs/

	Licensed under GPL and MIT.
*/

/* =Containers
--------------------------------------------------------------------------------*/

.container_12,
.container_16
{
	margin-left: auto;
	margin-right: auto;
	width: 960px;
}

/* =Grid &gt;&gt; Global
--------------------------------------------------------------------------------*/

.grid_1,
.grid_2,
.grid_3,
.grid_4,
.grid_5,
.grid_6,
.grid_7,
.grid_8,
.grid_9,
.grid_10,
.grid_11,
.grid_12,
.grid_13,
.grid_14,
.grid_15,
.grid_16
{
	display: inline;
	float: left;
	margin-left: 10px;
	margin-right: 10px;
}

.container_12 .grid_3,
.container_16 .grid_4
{
	width: 220px;
}

.container_12 .grid_6,
.container_16 .grid_8
{
	width: 460px;
}

.container_12 .grid_9,
.container_16 .grid_12
{
	width: 700px;
}

.container_12 .grid_12,
.container_16 .grid_16
{
	width: 940px;
}

/* =Grid &gt;&gt; Children (Alpha ~ First, Omega ~ Last)
--------------------------------------------------------------------------------*/

.alpha
{
	margin-left: 0;
}

.omega
{
	margin-right: 0;
}

/* =Grid &gt;&gt; 12 Columns
--------------------------------------------------------------------------------*/

.container_12 .grid_1
{
	width: 60px;
}

.container_12 .grid_2
{
	width: 140px;
}

.container_12 .grid_4
{
	width: 300px;
}

.container_12 .grid_5
{
	width: 380px;
}

.container_12 .grid_7
{
	width: 540px;
}

.container_12 .grid_8
{
	width: 620px;
}

.container_12 .grid_10
{
	width: 780px;
}

.container_12 .grid_11
{
	width: 860px;
}

/* =Grid &gt;&gt; 16 Columns
--------------------------------------------------------------------------------*/

.container_16 .grid_1
{
	width: 40px;
}

.container_16 .grid_2
{
	width: 100px;
}

.container_16 .grid_3
{
	width: 160px;
}

.container_16 .grid_5
{
	width: 280px;
}

.container_16 .grid_6
{
	width: 340px;
}

.container_16 .grid_7
{
	width: 400px;
}

.container_16 .grid_9
{
	width: 520px;
}

.container_16 .grid_10
{
	width: 580px;
}

.container_16 .grid_11
{
	width: 640px;
}

.container_16 .grid_13
{
	width: 760px;
}

.container_16 .grid_14
{
	width: 820px;
}

.container_16 .grid_15
{
	width: 880px;
}

/* =Prefix Extra Space &gt;&gt; Global
--------------------------------------------------------------------------------*/

.container_12 .prefix_3,
.container_16 .prefix_4
{
	padding-left: 240px;
}

.container_12 .prefix_6,
.container_16 .prefix_8
{
	padding-left: 480px;
}

.container_12 .prefix_9,
.container_16 .prefix_12
{
	padding-left: 720px;
}

/* =Prefix Extra Space &gt;&gt; 12 Columns
--------------------------------------------------------------------------------*/

.container_12 .prefix_1
{
	padding-left: 80px;
}

.container_12 .prefix_2
{
	padding-left: 160px;
}

.container_12 .prefix_4
{
	padding-left: 320px;
}

.container_12 .prefix_5
{
	padding-left: 400px;
}

.container_12 .prefix_7
{
	padding-left: 560px;
}

.container_12 .prefix_8
{
	padding-left: 640px;
}

.container_12 .prefix_10
{
	padding-left: 800px;
}

.container_12 .prefix_11
{
	padding-left: 880px;
}

/* =Prefix Extra Space &gt;&gt; 16 Columns
--------------------------------------------------------------------------------*/

.container_16 .prefix_1
{
	padding-left: 60px;
}

.container_16 .prefix_2
{
	padding-left: 120px;
}

.container_16 .prefix_3
{
	padding-left: 180px;
}

.container_16 .prefix_5
{
	padding-left: 300px;
}

.container_16 .prefix_6
{
	padding-left: 360px;
}

.container_16 .prefix_7
{
	padding-left: 420px;
}

.container_16 .prefix_9
{
	padding-left: 540px;
}

.container_16 .prefix_10
{
	padding-left: 600px;
}

.container_16 .prefix_11
{
	padding-left: 660px;
}

.container_16 .prefix_13
{
	padding-left: 780px;
}

.container_16 .prefix_14
{
	padding-left: 840px;
}

.container_16 .prefix_15
{
	padding-left: 900px;
}

/* =Suffix Extra Space &gt;&gt; Global
--------------------------------------------------------------------------------*/

.container_12 .suffix_3,
.container_16 .suffix_4
{
	padding-right: 240px;
}

.container_12 .suffix_6,
.container_16 .suffix_8
{
	padding-right: 480px;
}

.container_12 .suffix_9,
.container_16 .suffix_12
{
	padding-right: 720px;
}

/* =Suffix Extra Space &gt;&gt; 12 Columns
--------------------------------------------------------------------------------*/

.container_12 .suffix_1
{
	padding-right: 80px;
}

.container_12 .suffix_2
{
	padding-right: 160px;
}

.container_12 .suffix_4
{
	padding-right: 320px;
}

.container_12 .suffix_5
{
	padding-right: 400px;
}

.container_12 .suffix_7
{
	padding-right: 560px;
}

.container_12 .suffix_8
{
	padding-right: 640px;
}

.container_12 .suffix_10
{
	padding-right: 800px;
}

.container_12 .suffix_11
{
	padding-right: 880px;
}

/* =Suffix Extra Space &gt;&gt; 16 Columns
--------------------------------------------------------------------------------*/

.container_16 .suffix_1
{
	padding-right: 60px;
}

.container_16 .suffix_2
{
	padding-right: 120px;
}

.container_16 .suffix_3
{
	padding-right: 180px;
}

.container_16 .suffix_5
{
	padding-right: 300px;
}

.container_16 .suffix_6
{
	padding-right: 360px;
}

.container_16 .suffix_7
{
	padding-right: 420px;
}

.container_16 .suffix_9
{
	padding-right: 540px;
}

.container_16 .suffix_10
{
	padding-right: 600px;
}

.container_16 .suffix_11
{
	padding-right: 660px;
}

.container_16 .suffix_13
{
	padding-right: 780px;
}

.container_16 .suffix_14
{
	padding-right: 840px;
}

.container_16 .suffix_15
{
	padding-right: 900px;
}

/* =Clear Floated Elements
--------------------------------------------------------------------------------*/

/* http://sonspring.com/journal/clearing-floats */

html body * span.clear,
html body * div.clear,
html body * li.clear,
html body * dd.clear
{
	background: none;
	border: 0;
	clear: both;
	display: block;
	float: none;
	font-size: 0;
	list-style: none;
	margin: 0;
	padding: 0;
	overflow: hidden;
	visibility: hidden;
	width: 0;
	height: 0;
}

/* http://www.positioniseverything.net/easyclearing.html */

.clearfix:after
{
	clear: both;
	content: '.';
	display: block;
	visibility: hidden;
	height: 0;
}

.clearfix
{
	display: inline-block;
}

* html .clearfix
{
	height: 1%;
}

.clearfix
{
	display: block;
}

body {
	font: 12px/165% 'Lucida Grande', Verdana, Helvetica, sans-serif;
	color: $textocolor; 	
	margin: 0; padding: 0 0 50px 0; 
	background: #F6F5F5 url(http://3.bp.blogspot.com/_73i0fjAB_Hw/SRfzZQlcsyI/AAAAAAAAAkQ/_UqXNlWgNNA/s1600/bg.gif) repeat-x; 
	text-align: center;
}
/* Links */
a:link, a:visited { 
	text-decoration: none;
	color: $enlacecolor;	
}
a:hover {
	border-bottom: 1px dotted $colorenlaceencima;	
}
a.more-link {
	padding-bottom: 2px;
	font-weight: bold;	
	border-bottom: 1px dotted #AE855C;	
}
a:hover.more-link {
	text-decoration: none;
}
/* Headers */
h1, h2, h3, h4 {
	font: bold 1em/1.5em Georgia, 'Times New Roman', Times, serif;
	color: #444;
	padding: 10px 15px 7px 15px;	 
}
h1 { font-size: 3.7em; font-weight: normal; letter-spacing: -2px; }
h2 { font-size: 1.8em; font-weight: normal; color: #663333; }
h3 { font-size: 2em; font-weight: normal; letter-spacing: -0.5px; padding-top: 15px}
h4 { font-size: 1.3em; }

/* Lists */
ul, ol {
	margin: 10px 20px;
	padding: 0 20px;
}
ul { list-style: disc; }
ol { list-style: decimal; }

dt {
  font-weight: bold;
  color: #7BA857;
}
dd {
  padding-left: 25px; 
}

p, dl { padding: 10px 15px; }

/* Images */
img {
	background: #FAFAFA;
   border: 1px solid #DCDCDC;
	padding: 8px;
}
img.float-right {
  	margin: 5px 0px 10px 10px;  
}
img.float-left {
  	margin: 5px 10px 10px 0px;
}

code {
  	margin: 3px 0;
  	padding: 15px;
  	text-align: left;
  	display: block;
  	overflow: auto;  
  	font: 500 1em/1.5em 'Lucida Console', 'Courier New', Monospace ;
  	/* white-space: pre; */
  	border: 1px solid #F0F0F0;
	background: #f8f8f8;  
}
acronym {
  cursor: help;
  border-bottom: 1px dotted #895F30;
}
blockquote {
	margin: 10px;
 	padding: 10px 10px 10px 32px;  
   border: 1px solid #F0F0F0;
	background: #f8f8f8 url(http://1.bp.blogspot.com/_73i0fjAB_Hw/SRfzaHNLLJI/AAAAAAAAAlA/g301w9bnsp4/s1600/quote.gif) no-repeat 12px 12px;
	font-weight: normal;
	font-size: 15px;
	line-height: 1.5em;
	font-style: italic;
	font-family: Georgia, 'Times New Roman', Times, Serif;	
	color: #555;	
}

/* start - table */
table {
	border-collapse: collapse;
	margin: 10px;		
}
tr { background: #fff; }
tr.altrow { background: #F9F9F9;	}
th, td {
	text-align: left;			
	border-width: 1px;
  	border-style: solid;
}
th {
	color: #7BA857;
	background: #EFFAE6;
	padding: .8em 1em;	
  	border-color: #DFF4D5 #D3EFC3 #A7DF8A #D3EFC3;	
}
td {
	border-color: #EFEFEF;	
	padding: .7em 1em;	
}	
/* end - table */

/* form elements */
form {
	margin: 10px; 
	padding: 15px 25px 25px 20px; 
	border: 1px solid #F0F0F0;
	background: #f8f8f8;
}
form p {
	border-bottom: 1px solid #E6E6E6;
	padding: 12px 0 5px 0;	margin: 0;	
	color: #7BA857;
}
label {
	font-weight: bold;
	color: #7BA857;
}
input, select, textarea {
	margin: 5px 0;
	padding: 5px;
	color: #6A6969;
	border-width: 1px;
	border-style: solid;
  	border-color: #d4d4d4 #ebebeb #ebebeb #d4d4d4; 	
	font: 11px 'Lucida Grande', Verdana, Helvetica, sans-serif;
}
input:focus, select:focus, textarea:focus {
	color: #7BA857;
	background: #EFFAE6;
}
#name, #email, #message, #website {
	width: 380px;
}
input.button { 
	font: bold 12px Arial, Sans-serif; 
	height: 30px;
	margin: 0;
	padding: 2px 3px; 
	color: #fff;
	background: #9CCF5F;
	
	border-width: 1px;
  	border-style: solid;
  	border-color: #B6DE8F #8DB836 #8DB836 #B6DE8F;
}

.clear {clear:both;}  
  
#blog-pager-newer-link {float: left;} 

#blog-pager-older-link {float: right;} 

#blog-pager {text-align: center; }

/*-- (Cabecera) --*/

#header-wrapper {
	width: 100%;
	background: #fff url(http://3.bp.blogspot.com/_73i0fjAB_Hw/SRfzZQlcsyI/AAAAAAAAAkQ/_UqXNlWgNNA/s1600/bg.gif) repeat-x ;	
	margin: 0; padding: 0;
}

#header-inner1 {
	position: relative;
	margin: 0 auto;
	background: url(http://3.bp.blogspot.com/_73i0fjAB_Hw/SRfzZvvL5rI/AAAAAAAAAkY/tt8r7hrWB_M/s1600/border.gif) repeat-x left bottom; 	
	height: 275px;	
margin-left:auto;
margin-right:auto;
width:960px;
}

#header-wrapper h1 {
	position: absolute; 
	margin: 0; padding: 0 5px 0 0;
	font: normal 75px Georgia, 'Times New Roman', Times, serif;
	letter-spacing: -6px;
	color: $colortituloblog;
	text-decoration: none;
		
	/* change the values of top and left to adjust the position of the logo*/
	top: 90px; left: 20px;	
}
#header-wrapper h1 a {
	color: $colortituloblog;
}
#header-wrapper h1 a:hover {
border: none;
}

#header-wrapper p.description {
	position: absolute;
	margin: 0; padding: 0;
	font-family: Georgia, 'Times New Roman', Times, Serif;
	font-weight: normal;
	font-size: 17px;
	line-height: 1.6em;
	font-style: italic;
	letter-spacing: -.5px;
	color: $descripcioncolor;
	width: 400px;
	
	/* change the values of top and left to adjust the position */
	top: 175px; left: 110px;
}

/*-- (Menu) --*/

#header-wrapper #header-image {
	position: absolute;
	background: url(http://4.bp.blogspot.com/_73i0fjAB_Hw/SRfzZy6XUCI/AAAAAAAAAko/cAf3WfXfY74/s1600/header-image.gif) no-repeat;
	width: 371px;
	height: 263px;	
	right: 10px; top: 0;	
}

/* header quick search */
#header-wrapper form#quick-search {
	position: absolute;
	top: 10px; right: 0;
	padding: 0; margin: 0;
	border: none;
	width: 270px; height: 33px;
	background: #F5F4F3 url(http://1.bp.blogspot.com/_73i0fjAB_Hw/SRfzZ8MQvyI/AAAAAAAAAkw/ri_71vvmwVI/s1600/header-search.gif) no-repeat;	
	z-index: 999999;
}
#header-wrapper form#quick-search p {
	margin: 0; padding: 0;		
}
#header-wrapper form#quick-search input {
	border: none;
	background: transparent;
	color: #bababa;
	float: left;
	margin: 0; padding: 5px;
}
#header-wrapper form#quick-search .tbox {
	margin: 6px 0 0 5px; 
	width: 216px;	
	display: inline;		
}
#header-wrapper #search form#quick-search .btn{
	width: 25px; height: 25px;		
}
#header-wrapper form#quick-search label {
	display: none;
}

/*  navigation  */
#header-wrapper #nav {
	position: absolute;
	margin: 0; padding: 0;		
	width: 880px;	
	left: 0;	top: 5px;		
}
#header-wrapper #nav ul {
	float: left;	
	list-style: none;	
	margin: 5px 0 0 0;
	height: 45px;
	padding: 0 0 0 15px;					
}
#header-wrapper #nav ul li {
	float: left;
	margin: 0; padding: 0 0 0 10px;		
}
#header-wrapper #nav ul li a {
	float: left;
	margin: 0;
	padding: 0 15px 0 5px;
	color: $colormenu;
	font: bold 14px/40px 'Trebuchet MS', 'Helvetica Neue', Arial, Sans-Serif;
	text-transform: uppercase;	
}
#header-wrapper #nav ul li a:hover, 
#header-wrapper #nav ul li a:active {
	border: none;
	color: #111;
	background: transparent;
}
#header-wrapper #nav ul li#current {
	background: transparent url(http://2.bp.blogspot.com/_73i0fjAB_Hw/SRfzaCHUjVI/AAAAAAAAAk4/T5u2aqHsdmc/s1600/left-tab.gif) no-repeat;	
}
#header-wrapper #nav ul li#current a {	
	color: #444;
	background: transparent url(http://4.bp.blogspot.com/_73i0fjAB_Hw/SRfzaG1yTeI/AAAAAAAAAlI/bWnLvgb25VI/s1600/right-tab.gif) no-repeat right top;	
}

/*-- (Contenedor) --*/

#content-wrapper {
	background: #fff;
	width: 100%;
	padding: 5px 0;		
	border-bottom: 1px solid #E8E8E8;	
	text-align: left;
}

#content-wrapper2 {
	margin: 0 auto;	
	background: #fff url(http://img83.imageshack.us/img83/4158/contentbgdk0.gif) repeat-y center top;	
	padding-bottom: 35px;
	padding-top: 5px;		
	overflow: auto;
}

/*-- (Principal) --*/

#main-wrapper {
}

#main-wrapper a {
}

#main-wrapper a:hover {
}

.post {
}
.post-title {
	font: normal 3.7em Georgia, 'Times New Roman', Times, Serif;
	color: $colortituloentrada;
	letter-spacing: -2.2px;	
	margin-left: 5px;	
	margin-right: 15px;
	padding-left: 5px;
	padding-bottom: 3px;
	border-bottom: 1px solid #ebebeb;
}
.post-title a {
	color: $colortituloentrada;
	border: none;
}
.post-header-line-1 {
 font-size: .95em; padding-top: 3px; color: #B0B0B0;
padding:0px 15px;
}
.post-header-line-1 a, .post-header-line-1 a:visited {
color: #000; border: none;
}
.post-body {
padding:0px 15px;
}

.post-footer, p.comment-footer {
	padding: 5px; margin: 20px 15px 15px 10px;	
	border: 1px solid #EBEBEB;
	background: #f8f8f8;	
}

.post-footer a { background: transparent; }
.post-footer a:hover { border: none; }
.post-footer a.comment-link { margin: 0 10px 0 5px;	}
.post-footer .date-header{ margin: 0 10px 0 5px;	}

/*-- (Lateral) --*/

* html body #sidebar-wrapper {
margin:0;
}

#sidebar-wrapper ul{
	text-align: left;
	margin: 10px 8px 8px 8px; padding: 0;
	border-top: 2px solid #ebebeb; 
}

#sidebar-wrapper li{
	list-style: none;
	background: url(http://2.bp.blogspot.com/_73i0fjAB_Hw/SRfzZmqmmYI/AAAAAAAAAkg/bs5_LwjF-_0/s1600/dots.gif) repeat-x left bottom; 
	padding: 7px 5px;
	margin: 0;
}

#sidebar-wrapper ul li a, 
#sidebar-wrapper ul li a:visited {
	font-family: Georgia, 'Times New Roman', Times, Serif;
	background-image: none;	
	background-color: transparent;
	border: none;
	color: $colortextolateral;
	padding-left: 0;	
}

#sidebar-wrapper ul li a:hover { color: #000;	}

#sidebar-wrapper ul ul { margin: 0 0 0 5px; padding: 0; }
#sidebar-wrapper ul ul li { background: none; }

* html body #sidebar-wrapper li{
	height: 1%;
}

#sidebar-wrapper h2 {
	color: $colortituloslateral;
	font: normal 2em Georgia, 'Times New Roman', Times, Serif;
	letter-spacing: -0.5px;
	padding: 5px 10px;
	margin: 12px 0 5px 0;
}

/*-- (Pie de pagina) --*/

#footer-wrapper {
	clear: both;
	margin: 0 auto;
	text-align: left;
margin-left:auto;
margin-right:auto;
width:960px;
}

#footer-wrapper h2 {
	color: #444;
	font: normal 1.8em Georgia, 'Times New Roman', Times, Serif;
	text-transform: none;
	letter-spacing: -0.5px;	
}

#footer-wrapper h2, 
#footer-wrapper p {
	padding-left: 0;
}

#footer-wrapper a {
	color: #333;
	background: transparent;
}

#footer-wrapper .grid_8 {
width:460px;
}

#footer-wrapper ul {
	border-top: 1px solid #E6E6E6;
	list-style: none;
	padding: 0;	
	margin-left: 0;	
}
#footer-wrapper ul li {
	border-bottom: 1px solid #E6E6E6;
	display: block;
	line-height: 2em; 

	padding: 4px 0;
	margin-left: 0;
	padding-left: 0;
}
#footer-wrapper ul li a {
	width: 98%;
	font-weight: bold;
	color: #888;
	border: none;
}
#footer-wrapper ul li a span {
	font-style: italic;
	font-weight: normal;
	font-family: Georgia, 'Times New Roman', Times, Serif;
}
#footer-wrapper ul li a:hover,
#footer-wrapper ul li a:hover span {
	color: #333;	
}

#footer-content {
	float: left;	
	width: 100%;	
	padding: 0 0 35px 0;				
	margin: 10px 0 0 5px;			
}

#footer1, #footer 2 {
width:460px;
}

#links {
	clear: both;
	border-top: 1px solid #dadada;
	width: 940px;
	margin: 0 auto;	
	font-family: 'Trebuchet MS', 'Helvetica Neue', Arial, sans-serif;
}
#links .bottom-left {
	float: left;
	padding-left: 5px;		
}
#links .bottom-right {
	text-align: right;
	padding-right: 0;
}


/*-- (Comentarios) --*/

#comments h4 {
	font: normal 2.5em Georgia, 'Times New Roman', Times, Serif;
	color: #444;
	letter-spacing: -2.2px;	
	margin-left: 5px;	
	margin-right: 15px;
margin-bottom:10px;
	padding-left: 5px;
	padding-bottom: 3px;
	border-bottom: 1px solid #ebebeb;
}

#comments dl {
padding:0 15px;
} #comments p {
padding:0;
}

.comment-author {
font-size:110%
}

.comment-body {
padding:5px 0;
}

.comment-timestamp {

}

p.comment-footer {
	text-align:center;
}

dd.comment-footer, dd.comment-body {
margin:0; 
}

dd.comment-footer {
margin-bottom:10px;
font-size:90%;
padding:0;
}

body#layout #content-wrapper { 
  margin: 0px;
 }
body#layout #footer-wrapper p.links, body#layout #menu, body#layout #search {
display:none;
}
]]&gt;&lt;/b:skin&gt;
&lt;/head&gt;

  &lt;body&gt;
  &lt;b:section class='navbar' id='navbar' maxwidgets='1' showaddelement='no'&gt;
    &lt;b:widget id='Navbar1' locked='true' title='Navbar' type='Navbar'&gt;
      &lt;b:includable id='main'&gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
    function setAttributeOnload(object, attribute, val) {
      if(window.addEventListener) {
        window.addEventListener(&amp;#39;load&amp;#39;,
          function(){ object[attribute] = val; }, false);
      } else {
        window.attachEvent(&amp;#39;onload&amp;#39;, function(){ object[attribute] = val; });
      }
    }
  &amp;lt;/script&amp;gt;
&amp;lt;div id=&amp;quot;navbar-iframe-container&amp;quot;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;https://apis.google.com/js/plusone.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;
&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
        gapi.load(&amp;quot;iframes-styles-bubble&amp;quot;, function() {
          if (window.iframes &amp;amp;&amp;amp; iframes.open) {
            iframes.open(
                &amp;#39;//www.blogger.com/navbar.g?targetBlogID\0752013717245689924924\46blogName\75Creasy\47s+Blog\46publishMode\75PUBLISH_MODE_BLOGSPOT\46navbarType\75BLUE\46layoutType\75LAYOUTS\46searchRoot\75http://creasywuqiong.blogspot.com/search\46blogLocale\75en_US\46v\0752\46homepageUrl\75http://creasywuqiong.blogspot.com/\46vt\0753985744612561765730&amp;#39;,
                {
                  container: &amp;quot;navbar-iframe-container&amp;quot;,
                  id: &amp;quot;navbar-iframe&amp;quot;
                },
                {
                });
          }
        });
      &amp;lt;/script&amp;gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot;&amp;gt;
(function() {
var script = document.createElement(&amp;#39;script&amp;#39;);
script.type = &amp;#39;text/javascript&amp;#39;;
script.src = &amp;#39;//pagead2.googlesyndication.com/pagead/js/google_top_exp.js&amp;#39;;
var head = document.getElementsByTagName(&amp;#39;head&amp;#39;)[0];
if (head) {
head.appendChild(script);
}})();
&amp;lt;/script&amp;gt;
&lt;/b:includable&gt;
    &lt;/b:widget&gt;
  &lt;/b:section&gt;


  &lt;div id='outer-wrapper'&gt;&lt;div id='wrap2'&gt;

    &lt;!-- links para navegadores de texto --&gt;
    &lt;span id='skiplinks' style='display:none;'&gt;
      &lt;a href='#main'&gt;ir a principal &lt;/a&gt; |
      &lt;a href='#sidebar'&gt;Ir a lateral&lt;/a&gt;
    &lt;/span&gt;

&lt;!-- (Cabecera) --&gt;
    &lt;div id='header-wrapper'&gt;&lt;div id='header-inner1'&gt;
      &lt;b:section class='header' id='header' maxwidgets='1' showaddelement='no'&gt;
        &lt;b:widget id='Header1' locked='true' title='Creasy&amp;apos;s Blog (Header)' type='Header'&gt;
          &lt;b:includable id='main'&gt;

  &lt;b:if cond='data:useImage'&gt;
    &lt;b:if cond='data:imagePlacement == &amp;quot;BEHIND&amp;quot;'&gt;
      &lt;!--
      Show image as background to text. You can't really calculate the width
      reliably in JS because margins are not taken into account by any of
      clientWidth, offsetWidth or scrollWidth, so we don't force a minimum
      width if the user is using shrink to fit.
      This results in a margin-width's worth of pixels being cropped. If the
      user is not using shrink to fit then we expand the header.
      --&gt;
      &lt;b:if cond='data:mobile'&gt;
          &lt;div id='header-inner'&gt;
            &lt;div class='titlewrapper' style='background: transparent'&gt;
              &lt;h1 class='title' style='background: transparent; border-width: 0px'&gt;
                &lt;b:include name='title'/&gt;
              &lt;/h1&gt;
            &lt;/div&gt;
            &lt;b:include name='description'/&gt;
          &lt;/div&gt;
        &lt;b:else/&gt;
          &lt;div expr:style='&amp;quot;background-image: url(\&amp;quot;&amp;quot; + data:sourceUrl + &amp;quot;\&amp;quot;); &amp;quot;                        + &amp;quot;background-position: &amp;quot;                        + data:backgroundPositionStyleStr + &amp;quot;; &amp;quot;                        + data:widthStyleStr                        + &amp;quot;min-height: &amp;quot; + data:height                        + &amp;quot;_height: &amp;quot; + data:height                        + &amp;quot;background-repeat: no-repeat; &amp;quot;' id='header-inner'&gt;
            &lt;div class='titlewrapper' style='background: transparent'&gt;
              &lt;h1 class='title' style='background: transparent; border-width: 0px'&gt;
                &lt;b:include name='title'/&gt;
              &lt;/h1&gt;
            &lt;/div&gt;
            &lt;b:include name='description'/&gt;
          &lt;/div&gt;
        &lt;/b:if&gt;
    &lt;b:else/&gt;
      &lt;!--Show the image only--&gt;
      &lt;div id='header-inner'&gt;
        &lt;a expr:href='data:blog.homepageUrl' style='display: block'&gt;
          &lt;img expr:alt='data:title' expr:height='data:height' expr:id='data:widget.instanceId + &amp;quot;_headerimg&amp;quot;' expr:src='data:sourceUrl' expr:width='data:width' style='display: block'/&gt;
        &lt;/a&gt;
        &lt;!--Show the description--&gt;
        &lt;b:if cond='data:imagePlacement == &amp;quot;BEFORE_DESCRIPTION&amp;quot;'&gt;
          &lt;b:include name='description'/&gt;
        &lt;/b:if&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;
  &lt;b:else/&gt;
    &lt;!--No header image --&gt;
    &lt;div id='header-inner'&gt;
      &lt;div class='titlewrapper'&gt;
        &lt;h1 class='title'&gt;
          &lt;b:include name='title'/&gt;
        &lt;/h1&gt;
      &lt;/div&gt;
      &lt;b:include name='description'/&gt;
    &lt;/div&gt;
  &lt;/b:if&gt;
&lt;/b:includable&gt;
          &lt;b:includable id='description'&gt;
  &lt;div class='descriptionwrapper'&gt;
    &lt;p class='description'&gt;&lt;span&gt;&lt;data:description/&gt;&lt;/span&gt;&lt;/p&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
          &lt;b:includable id='title'&gt;
  &lt;b:if cond='data:blog.url == data:blog.homepageUrl'&gt;
    &lt;data:title/&gt;
  &lt;b:else/&gt;
    &lt;a expr:href='data:blog.homepageUrl'&gt;&lt;data:title/&gt;&lt;/a&gt;
  &lt;/b:if&gt;
&lt;/b:includable&gt;
        &lt;/b:widget&gt;
      &lt;/b:section&gt;

&lt;div id='nav'&gt;
&lt;ul&gt;
	&lt;li class='current'&gt;&lt;a expr:href='data:blog.homepageUrl'&gt;Home&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a expr:href='data:blog.homepageUrl + &amp;quot;feeds/posts/default&amp;quot;'&gt;Posts RSS&lt;/a&gt;&lt;/li&gt;
	&lt;li&gt;&lt;a expr:href='data:blog.homepageUrl + &amp;quot;feeds/comments/default&amp;quot;'&gt;Comments RSS&lt;/a&gt;&lt;/li&gt;
	
&lt;/ul&gt;		
&lt;/div&gt;

&lt;div id='header-image'/&gt;

&lt;form expr:action='data:blog.homepageUrl + &amp;quot;search/&amp;quot;' id='quick-search' method='get'&gt;
&lt;p&gt;
&lt;label for='qsearch'&gt;Search:&lt;/label&gt;
&lt;input class='tbox' id='qsearch' name='q' title='Start typing and hit ENTER' type='text' value='Search...'/&gt;
&lt;input alt='Search' class='btn' name='q' src='http://1.bp.blogspot.com/_73i0fjAB_Hw/SRfzaaxW-mI/AAAAAAAAAlQ/_jNitkiS3Ds/s1600/search.gif' title='Search' type='image'/&gt;
&lt;/p&gt;
&lt;/form&gt;

    &lt;/div&gt;&lt;/div&gt;

&lt;!-- (Contenedor) --&gt;	
    &lt;div id='content-wrapper'&gt;&lt;div class='container_16' id='content-wrapper2'&gt;

&lt;!-- (Principal) --&gt;
      &lt;div class='grid_8' id='main-wrapper'&gt;
        &lt;b:section class='main grid_8' id='main' showaddelement='no'&gt;
          &lt;b:widget id='Blog1' locked='true' title='Blog Posts' type='Blog'&gt;
            &lt;b:includable id='main' var='top'&gt;
  &lt;b:if cond='data:mobile == &amp;quot;false&amp;quot;'&gt;

    &lt;!-- posts --&gt;
    &lt;div class='blog-posts hfeed'&gt;

      &lt;b:include data='top' name='status-message'/&gt;

      &lt;data:defaultAdStart/&gt;
      &lt;b:loop values='data:posts' var='post'&gt;
        &lt;b:if cond='data:post.isDateStart'&gt;
          &lt;b:if cond='data:post.isFirstPost == &amp;quot;false&amp;quot;'&gt;
            &amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;
          &lt;/b:if&gt;
        &lt;/b:if&gt;
        &lt;b:if cond='data:post.isDateStart'&gt;
          &amp;lt;div class=&amp;quot;date-outer&amp;quot;&amp;gt;
        &lt;/b:if&gt;
        &lt;b:if cond='data:post.dateHeader'&gt;
          &lt;h2 class='date-header'&gt;&lt;span&gt;&lt;data:post.dateHeader/&gt;&lt;/span&gt;&lt;/h2&gt;
        &lt;/b:if&gt;
        &lt;b:if cond='data:post.isDateStart'&gt;
          &amp;lt;div class=&amp;quot;date-posts&amp;quot;&amp;gt;
        &lt;/b:if&gt;
        &lt;div class='post-outer'&gt;
        &lt;b:include data='post' name='post'/&gt;
        &lt;b:if cond='data:blog.pageType == &amp;quot;static_page&amp;quot;'&gt;
          &lt;b:include data='post' name='comment_picker'/&gt;
        &lt;/b:if&gt;
        &lt;b:if cond='data:blog.pageType == &amp;quot;item&amp;quot;'&gt;
          &lt;b:include data='post' name='comment_picker'/&gt;
        &lt;/b:if&gt;
        &lt;/div&gt;
        &lt;b:if cond='data:post.includeAd'&gt;
          &lt;b:if cond='data:post.isFirstPost'&gt;
            &lt;data:defaultAdEnd/&gt;
          &lt;b:else/&gt;
            &lt;data:adEnd/&gt;
          &lt;/b:if&gt;
          &lt;div class='inline-ad'&gt;
            &lt;data:adCode/&gt;
          &lt;/div&gt;
          &lt;data:adStart/&gt;
        &lt;/b:if&gt;
      &lt;/b:loop&gt;
      &lt;b:if cond='data:numPosts != 0'&gt;
        &amp;lt;/div&amp;gt;&amp;lt;/div&amp;gt;
      &lt;/b:if&gt;
      &lt;data:adEnd/&gt;
    &lt;/div&gt;

    &lt;!-- navigation --&gt;
    &lt;b:include name='nextprev'/&gt;

    &lt;!-- feed links --&gt;
    &lt;b:include name='feedLinks'/&gt;

    &lt;b:if cond='data:top.showStars'&gt;
      &lt;script src='//www.google.com/jsapi' type='text/javascript'/&gt;
      &lt;script type='text/javascript'&gt;
        google.load(&amp;quot;annotations&amp;quot;, &amp;quot;1&amp;quot;, {&amp;quot;locale&amp;quot;: &amp;quot;&lt;data:top.languageCode/&gt;&amp;quot;});
        function initialize() {
          google.annotations.setApplicationId(&lt;data:top.blogspotReviews/&gt;);
          google.annotations.createAll();
          google.annotations.fetch();
        }
        google.setOnLoadCallback(initialize);
      &lt;/script&gt;
    &lt;/b:if&gt;

  &lt;b:else/&gt;
    &lt;b:include name='mobile-main'/&gt;
  &lt;/b:if&gt;

  &lt;b:if cond='data:top.showDummy'&gt;
    &lt;data:top.dummyBootstrap/&gt;
  &lt;/b:if&gt;

&lt;/b:includable&gt;
            &lt;b:includable id='backlinkDeleteIcon' var='backlink'&gt;
  &lt;span expr:class='&amp;quot;item-control &amp;quot; + data:backlink.adminClass'&gt;
    &lt;a expr:href='data:backlink.deleteUrl' expr:title='data:top.deleteBacklinkMsg'&gt;
      &lt;img src='//www.blogger.com/img/icon_delete13.gif'/&gt;
    &lt;/a&gt;
  &lt;/span&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='backlinks' var='post'&gt;
  &lt;a name='links'/&gt;&lt;h4&gt;&lt;data:post.backlinksLabel/&gt;&lt;/h4&gt;
  &lt;b:if cond='data:post.numBacklinks != 0'&gt;
    &lt;dl class='comments-block' id='comments-block'&gt;
      &lt;b:loop values='data:post.backlinks' var='backlink'&gt;
        &lt;div class='collapsed-backlink backlink-control'&gt;
          &lt;dt class='comment-title'&gt;
            &lt;span class='backlink-toggle-zippy'&gt;&amp;#160;&lt;/span&gt;
            &lt;a expr:href='data:backlink.url' rel='nofollow'&gt;&lt;data:backlink.title/&gt;&lt;/a&gt;
            &lt;b:include data='backlink' name='backlinkDeleteIcon'/&gt;
          &lt;/dt&gt;
          &lt;dd class='comment-body collapseable'&gt;
            &lt;data:backlink.snippet/&gt;
          &lt;/dd&gt;
          &lt;dd class='comment-footer collapseable'&gt;
            &lt;span class='comment-author'&gt;&lt;data:post.authorLabel/&gt; &lt;data:backlink.author/&gt;&lt;/span&gt;
            &lt;span class='comment-timestamp'&gt;&lt;data:post.timestampLabel/&gt; &lt;data:backlink.timestamp/&gt;&lt;/span&gt;
          &lt;/dd&gt;
        &lt;/div&gt;
      &lt;/b:loop&gt;
    &lt;/dl&gt;
  &lt;/b:if&gt;
  &lt;p class='comment-footer'&gt;
    &lt;a class='comment-link' expr:href='data:post.createLinkUrl' expr:id='data:widget.instanceId + &amp;quot;_backlinks-create-link&amp;quot;' target='_blank'&gt;&lt;data:post.createLinkLabel/&gt;&lt;/a&gt;
  &lt;/p&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='comment-form' var='post'&gt;
  &lt;div class='comment-form'&gt;
    &lt;a name='comment-form'/&gt;
    &lt;b:if cond='data:mobile'&gt;
      &lt;h4 id='comment-post-message'&gt;
        &lt;a expr:id='data:widget.instanceId + &amp;quot;_comment-editor-toggle-link&amp;quot;' href='javascript:void(0)'&gt;&lt;data:postCommentMsg/&gt;&lt;/a&gt;&lt;/h4&gt;
      &lt;p&gt;&lt;data:blogCommentMessage/&gt;&lt;/p&gt;
      &lt;data:blogTeamBlogMessage/&gt;
      &lt;a expr:href='data:post.commentFormIframeSrc' id='comment-editor-src'/&gt;
      &lt;iframe allowtransparency='true' class='blogger-iframe-colorize blogger-comment-from-post' frameborder='0' height='410' id='comment-editor' name='comment-editor' src='' style='display: none' width='100%'/&gt;
    &lt;b:else/&gt;
      &lt;h4 id='comment-post-message'&gt;&lt;data:postCommentMsg/&gt;&lt;/h4&gt;
      &lt;p&gt;&lt;data:blogCommentMessage/&gt;&lt;/p&gt;
      &lt;data:blogTeamBlogMessage/&gt;
      &lt;a expr:href='data:post.commentFormIframeSrc' id='comment-editor-src'/&gt;
      &lt;iframe allowtransparency='true' class='blogger-iframe-colorize blogger-comment-from-post' frameborder='0' height='410' id='comment-editor' name='comment-editor' src='' width='100%'/&gt;
    &lt;/b:if&gt;
    &lt;data:post.friendConnectJs/&gt;
    &lt;data:post.cmtfpIframe/&gt;
    &lt;script type='text/javascript'&gt;
      BLOG_CMT_createIframe(&amp;#39;&lt;data:post.appRpcRelayPath/&gt;&amp;#39;, &amp;#39;&lt;data:post.communityId/&gt;&amp;#39;);
    &lt;/script&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='commentDeleteIcon' var='comment'&gt;
  &lt;span expr:class='&amp;quot;item-control &amp;quot; + data:comment.adminClass'&gt;
    &lt;b:if cond='data:showCmtPopup'&gt;
      &lt;div class='goog-toggle-button'&gt;
        &lt;div class='goog-inline-block comment-action-icon'/&gt;
      &lt;/div&gt;
    &lt;b:else/&gt;
      &lt;a class='comment-delete' expr:href='data:comment.deleteUrl' expr:title='data:top.deleteCommentMsg'&gt;
        &lt;img src='//www.blogger.com/img/icon_delete13.gif'/&gt;
      &lt;/a&gt;
    &lt;/b:if&gt;
  &lt;/span&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='comment_count_picker' var='post'&gt;
  &lt;b:if cond='data:post.commentSource == 1'&gt;
    &lt;span class='cmt_count_iframe_holder' expr:data-count='data:post.numComments' expr:data-onclick='data:post.addCommentOnclick' expr:data-post-url='data:post.url' expr:data-url='data:post.canonicalUrl'&gt;
    &lt;/span&gt;
  &lt;b:else/&gt;
    &lt;a class='comment-link' expr:href='data:post.addCommentUrl' expr:onclick='data:post.addCommentOnclick'&gt;
      &lt;data:post.commentLabelFull/&gt;:
    &lt;/a&gt;
  &lt;/b:if&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='comment_picker' var='post'&gt;
  &lt;b:if cond='data:post.commentSource == 1'&gt;
    &lt;b:include data='post' name='iframe_comments'/&gt;
  &lt;b:else/&gt;
    &lt;b:if cond='data:post.showThreadedComments'&gt;
      &lt;b:include data='post' name='threaded_comments'/&gt;
    &lt;b:else/&gt;
      &lt;b:include data='post' name='comments'/&gt;
    &lt;/b:if&gt;
  &lt;/b:if&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='comments' var='post'&gt;
  &lt;div class='comments' id='comments'&gt;
    &lt;a name='comments'/&gt;
    &lt;b:if cond='data:post.allowComments'&gt;
      &lt;h4&gt;&lt;data:post.commentLabelFull/&gt;:&lt;/h4&gt;

      &lt;b:if cond='data:post.commentPagingRequired'&gt;
        &lt;span class='paging-control-container'&gt;
          &lt;b:if cond='data:post.hasOlderLinks'&gt;
            &lt;a expr:class='data:post.oldLinkClass' expr:href='data:post.oldestLinkUrl'&gt;&lt;data:post.oldestLinkText/&gt;&lt;/a&gt;
              &amp;#160;
            &lt;a expr:class='data:post.oldLinkClass' expr:href='data:post.olderLinkUrl'&gt;&lt;data:post.olderLinkText/&gt;&lt;/a&gt;
              &amp;#160;
          &lt;/b:if&gt;

          &lt;data:post.commentRangeText/&gt;

          &lt;b:if cond='data:post.hasNewerLinks'&gt;
            &amp;#160;
            &lt;a expr:class='data:post.newLinkClass' expr:href='data:post.newerLinkUrl'&gt;&lt;data:post.newerLinkText/&gt;&lt;/a&gt;
            &amp;#160;
            &lt;a expr:class='data:post.newLinkClass' expr:href='data:post.newestLinkUrl'&gt;&lt;data:post.newestLinkText/&gt;&lt;/a&gt;
          &lt;/b:if&gt;
        &lt;/span&gt;
      &lt;/b:if&gt;

      &lt;div expr:id='data:widget.instanceId + &amp;quot;_comments-block-wrapper&amp;quot;'&gt;
        &lt;dl expr:class='data:post.avatarIndentClass' id='comments-block'&gt;
          &lt;b:loop values='data:post.comments' var='comment'&gt;
            &lt;dt expr:class='&amp;quot;comment-author &amp;quot; + data:comment.authorClass' expr:id='data:comment.anchorName'&gt;
              &lt;b:if cond='data:comment.favicon'&gt;
                &lt;img expr:src='data:comment.favicon' height='16px' style='margin-bottom:-2px;' width='16px'/&gt;
              &lt;/b:if&gt;
              &lt;a expr:name='data:comment.anchorName'/&gt;
              &lt;b:if cond='data:blog.enabledCommentProfileImages'&gt;
                &lt;data:comment.authorAvatarImage/&gt;
              &lt;/b:if&gt;
              &lt;b:if cond='data:comment.authorUrl'&gt;
                &lt;a expr:href='data:comment.authorUrl' rel='nofollow'&gt;&lt;data:comment.author/&gt;&lt;/a&gt;
              &lt;b:else/&gt;
                &lt;data:comment.author/&gt;
              &lt;/b:if&gt;
              &lt;data:commentPostedByMsg/&gt;
            &lt;/dt&gt;
            &lt;dd class='comment-body' expr:id='data:widget.instanceId + data:comment.cmtBodyIdPostfix'&gt;
              &lt;b:if cond='data:comment.isDeleted'&gt;
                &lt;span class='deleted-comment'&gt;&lt;data:comment.body/&gt;&lt;/span&gt;
              &lt;b:else/&gt;
                &lt;p&gt;
                  &lt;data:comment.body/&gt;
                &lt;/p&gt;
              &lt;/b:if&gt;
            &lt;/dd&gt;
            &lt;dd class='comment-footer'&gt;
              &lt;span class='comment-timestamp'&gt;
                &lt;a expr:href='data:comment.url' title='comment permalink'&gt;
                  &lt;data:comment.timestamp/&gt;
                &lt;/a&gt;
                &lt;b:include data='comment' name='commentDeleteIcon'/&gt;
              &lt;/span&gt;
            &lt;/dd&gt;
          &lt;/b:loop&gt;
        &lt;/dl&gt;
      &lt;/div&gt;

      &lt;b:if cond='data:post.commentPagingRequired'&gt;
        &lt;span class='paging-control-container'&gt;
          &lt;a expr:class='data:post.oldLinkClass' expr:href='data:post.oldestLinkUrl'&gt;
            &lt;data:post.oldestLinkText/&gt;
          &lt;/a&gt;
          &lt;a expr:class='data:post.oldLinkClass' expr:href='data:post.olderLinkUrl'&gt;
            &lt;data:post.olderLinkText/&gt;
          &lt;/a&gt;
          &amp;#160;
          &lt;data:post.commentRangeText/&gt;
          &amp;#160;
          &lt;a expr:class='data:post.newLinkClass' expr:href='data:post.newerLinkUrl'&gt;
            &lt;data:post.newerLinkText/&gt;
          &lt;/a&gt;
          &lt;a expr:class='data:post.newLinkClass' expr:href='data:post.newestLinkUrl'&gt;
            &lt;data:post.newestLinkText/&gt;
          &lt;/a&gt;
        &lt;/span&gt;
      &lt;/b:if&gt;

      &lt;p class='comment-footer'&gt;
        &lt;b:if cond='data:post.embedCommentForm'&gt;
          &lt;b:if cond='data:post.allowNewComments'&gt;
            &lt;b:include data='post' name='comment-form'/&gt;
          &lt;b:else/&gt;
            &lt;data:post.noNewCommentsText/&gt;
          &lt;/b:if&gt;
        &lt;b:else/&gt;
          &lt;b:if cond='data:post.allowComments'&gt;
            &lt;a expr:href='data:post.addCommentUrl' expr:onclick='data:post.addCommentOnclick'&gt;&lt;data:postCommentMsg/&gt;&lt;/a&gt;
          &lt;/b:if&gt;
        &lt;/b:if&gt;

      &lt;/p&gt;
    &lt;/b:if&gt;
    &lt;b:if cond='data:showCmtPopup'&gt;
      &lt;div id='comment-popup'&gt;
        &lt;iframe allowtransparency='true' frameborder='0' id='comment-actions' name='comment-actions' scrolling='no'&gt;
        &lt;/iframe&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;

    &lt;div id='backlinks-container'&gt;
    &lt;div expr:id='data:widget.instanceId + &amp;quot;_backlinks-container&amp;quot;'&gt;
       &lt;b:if cond='data:post.showBacklinks'&gt;
         &lt;b:include data='post' name='backlinks'/&gt;
       &lt;/b:if&gt;
    &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='feedLinks'&gt;
  &lt;b:if cond='data:blog.pageType != &amp;quot;item&amp;quot;'&gt; &lt;!-- Blog feed links --&gt;
    &lt;b:if cond='data:feedLinks'&gt;
      &lt;div class='blog-feeds'&gt;
        &lt;b:include data='feedLinks' name='feedLinksBody'/&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;

    &lt;b:else/&gt; &lt;!--Post feed links --&gt;
    &lt;div class='post-feeds'&gt;
      &lt;b:loop values='data:posts' var='post'&gt;
        &lt;b:if cond='data:post.allowComments'&gt;
          &lt;b:if cond='data:post.feedLinks'&gt;
            &lt;b:include data='post.feedLinks' name='feedLinksBody'/&gt;
          &lt;/b:if&gt;
        &lt;/b:if&gt;
      &lt;/b:loop&gt;
    &lt;/div&gt;
  &lt;/b:if&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='feedLinksBody' var='links'&gt;
  &lt;div class='feed-links'&gt;
  &lt;data:feedLinksMsg/&gt;
  &lt;b:loop values='data:links' var='f'&gt;
     &lt;a class='feed-link' expr:href='data:f.url' expr:type='data:f.mimeType' target='_blank'&gt;&lt;data:f.name/&gt; (&lt;data:f.feedType/&gt;)&lt;/a&gt;
  &lt;/b:loop&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='iframe_comments' var='post'&gt;

  &lt;b:if cond='data:post.allowIframeComments'&gt;
    &lt;script expr:src='data:post.iframeCommentSrc' type='text/javascript'/&gt;
    &lt;div class='cmt_iframe_holder' expr:data-href='data:post.canonicalUrl' expr:data-viewtype='data:post.viewType'/&gt;

    &lt;b:if cond='data:post.embedCommentForm == &amp;quot;false&amp;quot;'&gt;
      &lt;a expr:href='data:post.addCommentUrl' expr:onclick='data:post.addCommentOnclick'&gt;&lt;data:postCommentMsg/&gt;&lt;/a&gt;
    &lt;/b:if&gt;
  &lt;/b:if&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='mobile-index-post' var='post'&gt;
  &lt;div class='mobile-date-outer date-outer'&gt;
    &lt;b:if cond='data:post.dateHeader'&gt;
      &lt;div class='date-header'&gt;
        &lt;span&gt;&lt;data:post.dateHeader/&gt;&lt;/span&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;

    &lt;div class='mobile-post-outer'&gt;
      &lt;a expr:href='data:post.url'&gt;
        &lt;h3 class='mobile-index-title entry-title' itemprop='name'&gt;
          &lt;data:post.title/&gt;
        &lt;/h3&gt;

        &lt;div class='mobile-index-arrow'&gt;&amp;amp;rsaquo;&lt;/div&gt;

        &lt;div class='mobile-index-contents'&gt;
          &lt;b:if cond='data:post.thumbnailUrl'&gt;
            &lt;div class='mobile-index-thumbnail'&gt;
              &lt;div class='Image'&gt;
                &lt;img expr:src='data:post.thumbnailUrl'/&gt;
              &lt;/div&gt;
            &lt;/div&gt;
          &lt;/b:if&gt;

          &lt;div class='post-body'&gt;
            &lt;b:if cond='data:post.snippet'&gt;&lt;data:post.snippet/&gt;&lt;/b:if&gt;
          &lt;/div&gt;
        &lt;/div&gt;

        &lt;div style='clear: both;'/&gt;
      &lt;/a&gt;

      &lt;div class='mobile-index-comment'&gt;
        &lt;b:if cond='data:blog.pageType != &amp;quot;static_page&amp;quot;'&gt;
          &lt;b:if cond='data:post.allowComments'&gt;
            &lt;b:if cond='data:post.numComments != 0'&gt;
              &lt;b:include data='post' name='comment_count_picker'/&gt;
            &lt;/b:if&gt;
          &lt;/b:if&gt;
        &lt;/b:if&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='mobile-main' var='top'&gt;
    &lt;!-- posts --&gt;
    &lt;div class='blog-posts hfeed'&gt;

      &lt;b:include data='top' name='status-message'/&gt;

      &lt;b:if cond='data:blog.pageType == &amp;quot;index&amp;quot;'&gt;
        &lt;b:loop values='data:posts' var='post'&gt;
          &lt;b:include data='post' name='mobile-index-post'/&gt;
        &lt;/b:loop&gt;
      &lt;b:else/&gt;
        &lt;b:loop values='data:posts' var='post'&gt;
          &lt;b:include data='post' name='mobile-post'/&gt;
        &lt;/b:loop&gt;
      &lt;/b:if&gt;
    &lt;/div&gt;

   &lt;b:include name='mobile-nextprev'/&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='mobile-nextprev'&gt;
  &lt;div class='blog-pager' id='blog-pager'&gt;
    &lt;b:if cond='data:newerPageUrl'&gt;
      &lt;div class='mobile-link-button' id='blog-pager-newer-link'&gt;
      &lt;a class='blog-pager-newer-link' expr:href='data:newerPageUrl' expr:id='data:widget.instanceId + &amp;quot;_blog-pager-newer-link&amp;quot;' expr:title='data:newerPageTitle'&gt;&amp;amp;lsaquo;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;

    &lt;b:if cond='data:olderPageUrl'&gt;
      &lt;div class='mobile-link-button' id='blog-pager-older-link'&gt;
      &lt;a class='blog-pager-older-link' expr:href='data:olderPageUrl' expr:id='data:widget.instanceId + &amp;quot;_blog-pager-older-link&amp;quot;' expr:title='data:olderPageTitle'&gt;&amp;amp;rsaquo;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;

    &lt;div class='mobile-link-button' id='blog-pager-home-link'&gt;
    &lt;a class='home-link' expr:href='data:blog.homepageUrl'&gt;&lt;data:homeMsg/&gt;&lt;/a&gt;
    &lt;/div&gt;

    &lt;div class='mobile-desktop-link'&gt;
      &lt;a class='home-link' expr:href='data:desktopLinkUrl'&gt;&lt;data:desktopLinkMsg/&gt;&lt;/a&gt;
    &lt;/div&gt;

  &lt;/div&gt;
  &lt;div class='clear'/&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='mobile-post' var='post'&gt;
  &lt;div class='date-outer'&gt;
    &lt;b:if cond='data:post.dateHeader'&gt;
      &lt;h2 class='date-header'&gt;&lt;span&gt;&lt;data:post.dateHeader/&gt;&lt;/span&gt;&lt;/h2&gt;
    &lt;/b:if&gt;
    &lt;div class='date-posts'&gt;
      &lt;div class='post-outer'&gt;

        &lt;div class='post hentry uncustomized-post-template' itemscope='itemscope' itemtype='http://schema.org/BlogPosting'&gt;
          &lt;b:if cond='data:post.thumbnailUrl'&gt;
            &lt;meta expr:content='data:post.thumbnailUrl' itemprop='image_url'/&gt;
          &lt;/b:if&gt;
          &lt;meta expr:content='data:blog.blogId' itemprop='blogId'/&gt;
          &lt;meta expr:content='data:post.id' itemprop='postId'/&gt;

          &lt;a expr:name='data:post.id'/&gt;
          &lt;b:if cond='data:post.title'&gt;
            &lt;h3 class='post-title entry-title' itemprop='name'&gt;
              &lt;b:if cond='data:post.link'&gt;
                &lt;a expr:href='data:post.link'&gt;&lt;data:post.title/&gt;&lt;/a&gt;
              &lt;b:else/&gt;
                &lt;b:if cond='data:post.url'&gt;
                  &lt;b:if cond='data:blog.url != data:post.url'&gt;
                    &lt;a expr:href='data:post.url'&gt;&lt;data:post.title/&gt;&lt;/a&gt;
                  &lt;b:else/&gt;
                    &lt;data:post.title/&gt;
                  &lt;/b:if&gt;
                &lt;b:else/&gt;
                  &lt;data:post.title/&gt;
                &lt;/b:if&gt;
              &lt;/b:if&gt;
            &lt;/h3&gt;
          &lt;/b:if&gt;

          &lt;div class='post-header'&gt;
            &lt;div class='post-header-line-1'/&gt;
          &lt;/div&gt;

          &lt;div class='post-body entry-content' expr:id='&amp;quot;post-body-&amp;quot; + data:post.id' itemprop='articleBody'&gt;
            &lt;data:post.body/&gt;
            &lt;div style='clear: both;'/&gt; &lt;!-- clear for photos floats --&gt;
          &lt;/div&gt;

          &lt;div class='post-footer'&gt;
            &lt;div class='post-footer-line post-footer-line-1'&gt;
              &lt;span class='post-author vcard'&gt;
                &lt;b:if cond='data:top.showAuthor'&gt;
                  &lt;b:if cond='data:post.authorProfileUrl'&gt;
                    &lt;span class='fn' itemprop='author' itemscope='itemscope' itemtype='http://schema.org/Person'&gt;
                      &lt;meta expr:content='data:post.authorProfileUrl' itemprop='url'/&gt;
                      &lt;a expr:href='data:post.authorProfileUrl' rel='author' title='author profile'&gt;
                        &lt;span itemprop='name'&gt;&lt;data:post.author/&gt;&lt;/span&gt;
                      &lt;/a&gt;
                    &lt;/span&gt;
                  &lt;b:else/&gt;
                    &lt;span class='fn' itemprop='author' itemscope='itemscope' itemtype='http://schema.org/Person'&gt;
                      &lt;span itemprop='name'&gt;&lt;data:post.author/&gt;&lt;/span&gt;
                    &lt;/span&gt;
                  &lt;/b:if&gt;
                &lt;/b:if&gt;
              &lt;/span&gt;

              &lt;span class='post-timestamp'&gt;
                &lt;b:if cond='data:top.showTimestamp'&gt;
                  &lt;data:top.timestampLabel/&gt;
                  &lt;b:if cond='data:post.url'&gt;
                    &lt;meta expr:content='data:post.canonicalUrl' itemprop='url'/&gt;
                    &lt;a class='timestamp-link' expr:href='data:post.url' rel='bookmark' title='permanent link'&gt;&lt;abbr class='published' expr:title='data:post.timestampISO8601' itemprop='datePublished'&gt;&lt;data:post.timestamp/&gt;&lt;/abbr&gt;&lt;/a&gt;
                  &lt;/b:if&gt;
                &lt;/b:if&gt;
              &lt;/span&gt;

              &lt;span class='post-comment-link'&gt;
                &lt;b:if cond='data:blog.pageType != &amp;quot;item&amp;quot;'&gt;
                  &lt;b:if cond='data:blog.pageType != &amp;quot;static_page&amp;quot;'&gt;
                    &lt;b:if cond='data:post.allowComments'&gt;
                      &lt;b:include data='post' name='comment_count_picker'/&gt;
                    &lt;/b:if&gt;
                  &lt;/b:if&gt;
                &lt;/b:if&gt;
              &lt;/span&gt;
            &lt;/div&gt;

            &lt;div class='post-footer-line post-footer-line-2'&gt;
              &lt;b:if cond='data:top.showMobileShare'&gt;
                &lt;div class='mobile-link-button goog-inline-block' id='mobile-share-button'&gt;
                  &lt;a href='javascript:void(0);'&gt;&lt;data:shareMsg/&gt;&lt;/a&gt;
                &lt;/div&gt;
              &lt;/b:if&gt;
              &lt;b:if cond='data:top.showDummy'&gt;
                &lt;div class='goog-inline-block dummy-container'&gt;&lt;data:post.dummyTag/&gt;&lt;/div&gt;
              &lt;/b:if&gt;
            &lt;/div&gt;

          &lt;/div&gt;
        &lt;/div&gt;

        &lt;b:if cond='data:blog.pageType == &amp;quot;static_page&amp;quot;'&gt;
          &lt;b:include data='post' name='comment_picker'/&gt;
        &lt;/b:if&gt;
        &lt;b:if cond='data:blog.pageType == &amp;quot;item&amp;quot;'&gt;
          &lt;b:include data='post' name='comment_picker'/&gt;
        &lt;/b:if&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='nextprev'&gt;
  &lt;div class='blog-pager' id='blog-pager'&gt;
    &lt;b:if cond='data:newerPageUrl'&gt;
      &lt;span id='blog-pager-newer-link'&gt;
      &lt;a class='blog-pager-newer-link' expr:href='data:newerPageUrl' expr:id='data:widget.instanceId + &amp;quot;_blog-pager-newer-link&amp;quot;' expr:title='data:newerPageTitle'&gt;&lt;data:newerPageTitle/&gt;&lt;/a&gt;
      &lt;/span&gt;
    &lt;/b:if&gt;

    &lt;b:if cond='data:olderPageUrl'&gt;
      &lt;span id='blog-pager-older-link'&gt;
      &lt;a class='blog-pager-older-link' expr:href='data:olderPageUrl' expr:id='data:widget.instanceId + &amp;quot;_blog-pager-older-link&amp;quot;' expr:title='data:olderPageTitle'&gt;&lt;data:olderPageTitle/&gt;&lt;/a&gt;
      &lt;/span&gt;
    &lt;/b:if&gt;

    &lt;a class='home-link' expr:href='data:blog.homepageUrl'&gt;&lt;data:homeMsg/&gt;&lt;/a&gt;

    &lt;b:if cond='data:mobileLinkUrl'&gt;
      &lt;div class='blog-mobile-link'&gt;
        &lt;a expr:href='data:mobileLinkUrl'&gt;&lt;data:mobileLinkMsg/&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;

  &lt;/div&gt;
  &lt;div class='clear'/&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='post' var='post'&gt;
  &lt;div class='post hentry uncustomized-post-template' itemscope='itemscope' itemtype='http://schema.org/BlogPosting'&gt;
    &lt;a expr:name='data:post.id'/&gt;
    &lt;b:if cond='data:post.title'&gt;
      &lt;h3 class='post-title entry-title' itemprop='name'&gt;
      &lt;b:if cond='data:post.link'&gt;
        &lt;a expr:href='data:post.link'&gt;&lt;data:post.title/&gt;&lt;/a&gt;
      &lt;b:else/&gt;
        &lt;b:if cond='data:post.url'&gt;
          &lt;b:if cond='data:blog.url != data:post.url'&gt;
            &lt;a expr:href='data:post.url'&gt;&lt;data:post.title/&gt;&lt;/a&gt;
          &lt;b:else/&gt;
            &lt;data:post.title/&gt;
          &lt;/b:if&gt;
        &lt;b:else/&gt;
          &lt;data:post.title/&gt;
        &lt;/b:if&gt;
      &lt;/b:if&gt;
      &lt;/h3&gt;
    &lt;/b:if&gt;

    &lt;div class='post-header'&gt;
    &lt;div class='post-header-line-1'/&gt;
    &lt;/div&gt;

    &lt;div class='post-body entry-content' expr:id='&amp;quot;post-body-&amp;quot; + data:post.id' itemprop='articleBody'&gt;
      &lt;data:post.body/&gt;
      &lt;div style='clear: both;'/&gt; &lt;!-- clear for photos floats --&gt;
    &lt;/div&gt;

    &lt;b:if cond='data:post.hasJumpLink'&gt;
      &lt;div class='jump-link'&gt;
        &lt;a expr:href='data:post.url + &amp;quot;#more&amp;quot;' expr:title='data:post.title'&gt;&lt;data:post.jumpText/&gt;&lt;/a&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;

    &lt;div class='post-footer'&gt;
    &lt;div class='post-footer-line post-footer-line-1'&gt;
      &lt;span class='post-author vcard'&gt;
        &lt;b:if cond='data:top.showAuthor'&gt;
          &lt;data:top.authorLabel/&gt;
            &lt;b:if cond='data:post.authorProfileUrl'&gt;
              &lt;span class='fn'&gt;
                &lt;a expr:href='data:post.authorProfileUrl' itemprop='author' rel='author' title='author profile'&gt;
                  &lt;data:post.author/&gt;
                &lt;/a&gt;
              &lt;/span&gt;
            &lt;b:else/&gt;
              &lt;span class='fn'&gt;&lt;data:post.author/&gt;&lt;/span&gt;
            &lt;/b:if&gt;
        &lt;/b:if&gt;
      &lt;/span&gt;

      &lt;span class='post-timestamp'&gt;
        &lt;b:if cond='data:top.showTimestamp'&gt;
          &lt;data:top.timestampLabel/&gt;
        &lt;b:if cond='data:post.url'&gt;
          &lt;a class='timestamp-link' expr:href='data:post.url' itemprop='url' rel='bookmark' title='permanent link'&gt;&lt;abbr class='published' expr:title='data:post.timestampISO8601' itemprop='datePublished'&gt;&lt;data:post.timestamp/&gt;&lt;/abbr&gt;&lt;/a&gt;
        &lt;/b:if&gt;
        &lt;/b:if&gt;
      &lt;/span&gt;

      &lt;span class='reaction-buttons'&gt;
        &lt;b:if cond='data:top.showReactions'&gt;
          &lt;table border='0' cellpadding='0' cellspacing='0' width='100%'&gt;&lt;tr&gt;
            &lt;td class='reactions-label-cell' nowrap='nowrap' valign='top' width='1%'&gt;
              &lt;span class='reactions-label'&gt;
              &lt;data:top.reactionsLabel/&gt;&lt;/span&gt;&amp;#160;&lt;/td&gt;
            &lt;td&gt;&lt;iframe allowtransparency='true' class='reactions-iframe' expr:src='data:post.reactionsUrl' frameborder='0' name='reactions' scrolling='no'/&gt;&lt;/td&gt;
           &lt;/tr&gt;&lt;/table&gt;
        &lt;/b:if&gt;
      &lt;/span&gt;

      &lt;span class='star-ratings'&gt;
        &lt;b:if cond='data:top.showStars'&gt;
           &lt;div expr:g:background-color='data:backgroundColor' expr:g:text-color='data:textColor' expr:g:url='data:post.absoluteUrl' g:height='42' g:type='RatingPanel' g:width='280'/&gt;
        &lt;/b:if&gt;
      &lt;/span&gt;

      &lt;span class='post-comment-link'&gt;
        &lt;b:if cond='data:blog.pageType != &amp;quot;item&amp;quot;'&gt;
          &lt;b:if cond='data:blog.pageType != &amp;quot;static_page&amp;quot;'&gt;
            &lt;b:if cond='data:post.allowComments'&gt;
              &lt;a class='comment-link' expr:href='data:post.addCommentUrl' expr:onclick='data:post.addCommentOnclick'&gt;&lt;b:if cond='data:post.numComments == 1'&gt;1 &lt;data:top.commentLabel/&gt;&lt;b:else/&gt;&lt;data:post.numComments/&gt; &lt;data:top.commentLabelPlural/&gt;&lt;/b:if&gt;&lt;/a&gt;
            &lt;/b:if&gt;
          &lt;/b:if&gt;
        &lt;/b:if&gt;
      &lt;/span&gt;

       &lt;!-- backlinks --&gt;
       &lt;span class='post-backlinks post-comment-link'&gt;
         &lt;b:if cond='data:blog.pageType != &amp;quot;item&amp;quot;'&gt;
           &lt;b:if cond='data:blog.pageType != &amp;quot;static_page&amp;quot;'&gt;
             &lt;b:if cond='data:post.showBacklinks'&gt;
               &lt;a class='comment-link' expr:href='data:post.url + &amp;quot;#links&amp;quot;'&gt;&lt;data:top.backlinkLabel/&gt;&lt;/a&gt;
             &lt;/b:if&gt;
           &lt;/b:if&gt;
         &lt;/b:if&gt;
       &lt;/span&gt;

      &lt;span class='post-icons'&gt;
        &lt;!-- email post links --&gt;
        &lt;b:if cond='data:post.emailPostUrl'&gt;
          &lt;span class='item-action'&gt;
          &lt;a expr:href='data:post.emailPostUrl' expr:title='data:top.emailPostMsg'&gt;
              &lt;img alt='' class='icon-action' height='13' src='http://img1.blogblog.com/img/icon18_email.gif' width='18'/&gt;
          &lt;/a&gt;
          &lt;/span&gt;
        &lt;/b:if&gt;

        &lt;!-- quickedit pencil --&gt;
        &lt;b:include data='post' name='postQuickEdit'/&gt;
      &lt;/span&gt;

      &lt;!-- share buttons --&gt;
      &lt;div class='post-share-buttons goog-inline-block'&gt;
        &lt;b:if cond='data:post.sharePostUrl'&gt;
          &lt;b:include data='post' name='shareButtons'/&gt;
        &lt;/b:if&gt;
      &lt;/div&gt;

      &lt;/div&gt;

      &lt;div class='post-footer-line post-footer-line-2'&gt;
      &lt;span class='post-labels'&gt;
        &lt;b:if cond='data:post.labels'&gt;
          &lt;data:postLabelsLabel/&gt;
          &lt;b:loop values='data:post.labels' var='label'&gt;
            &lt;a expr:href='data:label.url' rel='tag'&gt;&lt;data:label.name/&gt;&lt;/a&gt;&lt;b:if cond='data:label.isLast != &amp;quot;true&amp;quot;'&gt;,&lt;/b:if&gt;
          &lt;/b:loop&gt;
        &lt;/b:if&gt;
      &lt;/span&gt;
      &lt;/div&gt;

      &lt;div class='post-footer-line post-footer-line-3'&gt;
      &lt;span class='post-location'&gt;
        &lt;b:if cond='data:top.showLocation'&gt;
          &lt;b:if cond='data:post.location'&gt;
            &lt;data:postLocationLabel/&gt;
            &lt;a expr:href='data:post.location.mapsUrl' target='_blank'&gt;&lt;data:post.location.name/&gt;&lt;/a&gt;
          &lt;/b:if&gt;
        &lt;/b:if&gt;
      &lt;/span&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='postQuickEdit' var='post'&gt;
  &lt;b:if cond='data:post.editUrl'&gt;
    &lt;span expr:class='&amp;quot;item-control &amp;quot; + data:post.adminClass'&gt;
      &lt;a expr:href='data:post.editUrl' expr:title='data:top.editPostMsg'&gt;
        &lt;img alt='' class='icon-action' height='18' src='http://img2.blogblog.com/img/icon18_edit_allbkg.gif' width='18'/&gt;
      &lt;/a&gt;
    &lt;/span&gt;
  &lt;/b:if&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='shareButtons' var='post'&gt;
  &lt;b:if cond='data:top.showEmailButton'&gt;&lt;a class='goog-inline-block share-button sb-email' expr:href='data:post.sharePostUrl + &amp;quot;&amp;amp;target=email&amp;quot;' expr:title='data:top.emailThisMsg' target='_blank'&gt;&lt;span class='share-button-link-text'&gt;&lt;data:top.emailThisMsg/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b:if&gt;&lt;b:if cond='data:top.showBlogThisButton'&gt;&lt;a class='goog-inline-block share-button sb-blog' expr:href='data:post.sharePostUrl + &amp;quot;&amp;amp;target=blog&amp;quot;' expr:onclick='&amp;quot;window.open(this.href, \&amp;quot;_blank\&amp;quot;, \&amp;quot;height=270,width=475\&amp;quot;); return false;&amp;quot;' expr:title='data:top.blogThisMsg' target='_blank'&gt;&lt;span class='share-button-link-text'&gt;&lt;data:top.blogThisMsg/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b:if&gt;&lt;b:if cond='data:top.showTwitterButton'&gt;&lt;a class='goog-inline-block share-button sb-twitter' expr:href='data:post.sharePostUrl + &amp;quot;&amp;amp;target=twitter&amp;quot;' expr:title='data:top.shareToTwitterMsg' target='_blank'&gt;&lt;span class='share-button-link-text'&gt;&lt;data:top.shareToTwitterMsg/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b:if&gt;&lt;b:if cond='data:top.showFacebookButton'&gt;&lt;a class='goog-inline-block share-button sb-facebook' expr:href='data:post.sharePostUrl + &amp;quot;&amp;amp;target=facebook&amp;quot;' expr:onclick='&amp;quot;window.open(this.href, \&amp;quot;_blank\&amp;quot;, \&amp;quot;height=430,width=640\&amp;quot;); return false;&amp;quot;' expr:title='data:top.shareToFacebookMsg' target='_blank'&gt;&lt;span class='share-button-link-text'&gt;&lt;data:top.shareToFacebookMsg/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b:if&gt;&lt;b:if cond='data:top.showOrkutButton'&gt;&lt;a class='goog-inline-block share-button sb-orkut' expr:href='data:post.sharePostUrl + &amp;quot;&amp;amp;target=orkut&amp;quot;' expr:title='data:top.shareToOrkutMsg' target='_blank'&gt;&lt;span class='share-button-link-text'&gt;&lt;data:top.shareToOrkutMsg/&gt;&lt;/span&gt;&lt;/a&gt;&lt;/b:if&gt;&lt;b:if cond='data:top.showDummy'&gt;&lt;div class='goog-inline-block dummy-container'&gt;&lt;data:post.dummyTag/&gt;&lt;/div&gt;&lt;/b:if&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='status-message'&gt;
  &lt;b:if cond='data:navMessage'&gt;
  &lt;div class='status-msg-wrap'&gt;
    &lt;div class='status-msg-body'&gt;
      &lt;data:navMessage/&gt;
    &lt;/div&gt;
    &lt;div class='status-msg-border'&gt;
      &lt;div class='status-msg-bg'&gt;
        &lt;div class='status-msg-hidden'&gt;&lt;data:navMessage/&gt;&lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;div style='clear: both;'/&gt;
  &lt;/b:if&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='threaded-comment-form' var='post'&gt;
  &lt;div class='comment-form'&gt;
    &lt;a name='comment-form'/&gt;
    &lt;b:if cond='data:mobile'&gt;
      &lt;p&gt;&lt;data:blogCommentMessage/&gt;&lt;/p&gt;
      &lt;data:blogTeamBlogMessage/&gt;
      &lt;a expr:href='data:post.commentFormIframeSrc' id='comment-editor-src'/&gt;
      &lt;iframe allowtransparency='true' class='blogger-iframe-colorize blogger-comment-from-post' frameborder='0' height='410' id='comment-editor' name='comment-editor' src='' style='display: none' width='100%'/&gt;
    &lt;b:else/&gt;
      &lt;p&gt;&lt;data:blogCommentMessage/&gt;&lt;/p&gt;
      &lt;data:blogTeamBlogMessage/&gt;
      &lt;a expr:href='data:post.commentFormIframeSrc' id='comment-editor-src'/&gt;
      &lt;iframe allowtransparency='true' class='blogger-iframe-colorize blogger-comment-from-post' frameborder='0' height='410' id='comment-editor' name='comment-editor' src='' width='100%'/&gt;
    &lt;/b:if&gt;
    &lt;data:post.friendConnectJs/&gt;
    &lt;data:post.cmtfpIframe/&gt;
    &lt;script type='text/javascript'&gt;
      BLOG_CMT_createIframe(&amp;#39;&lt;data:post.appRpcRelayPath/&gt;&amp;#39;, &amp;#39;&lt;data:post.communityId/&gt;&amp;#39;);
    &lt;/script&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='threaded_comment_js' var='post'&gt;
  &lt;script async='async' expr:src='data:post.commentSrc' type='text/javascript'/&gt;

  &lt;script type='text/javascript'&gt;
    (function() {
      var items = &lt;data:post.commentJso/&gt;;
      var msgs = &lt;data:post.commentMsgs/&gt;;
      var config = &lt;data:post.commentConfig/&gt;;

// &lt;![CDATA[
      var cursor = null;
      if (items &amp;&amp; items.length &gt; 0) {
        cursor = parseInt(items[items.length - 1].timestamp) + 1;
      }

      var bodyFromEntry = function(entry) {
        if (entry.gd$extendedProperty) {
          for (var k in entry.gd$extendedProperty) {
            if (entry.gd$extendedProperty[k].name == 'blogger.contentRemoved') {
              return '&lt;span class="deleted-comment"&gt;' + entry.content.$t + '&lt;/span&gt;';
            }
          }
        }
        return entry.content.$t;
      }

      var parse = function(data) {
        cursor = null;
        var comments = [];
        if (data &amp;&amp; data.feed &amp;&amp; data.feed.entry) {
          for (var i = 0, entry; entry = data.feed.entry[i]; i++) {
            var comment = {};
            // comment ID, parsed out of the original id format
            var id = /blog-(\d+).post-(\d+)/.exec(entry.id.$t);
            comment.id = id ? id[2] : null;
            comment.body = bodyFromEntry(entry);
            comment.timestamp = Date.parse(entry.published.$t) + '';
            if (entry.author &amp;&amp; entry.author.constructor === Array) {
              var auth = entry.author[0];
              if (auth) {
                comment.author = {
                  name: (auth.name ? auth.name.$t : undefined),
                  profileUrl: (auth.uri ? auth.uri.$t : undefined),
                  avatarUrl: (auth.gd$image ? auth.gd$image.src : undefined)
                };
              }
            }
            if (entry.link) {
              if (entry.link[2]) {
                comment.link = comment.permalink = entry.link[2].href;
              }
              if (entry.link[3]) {
                var pid = /.*comments\/default\/(\d+)\?.*/.exec(entry.link[3].href);
                if (pid &amp;&amp; pid[1]) {
                  comment.parentId = pid[1];
                }
              }
            }
            comment.deleteclass = 'item-control blog-admin';
            if (entry.gd$extendedProperty) {
              for (var k in entry.gd$extendedProperty) {
                if (entry.gd$extendedProperty[k].name == 'blogger.itemClass') {
                  comment.deleteclass += ' ' + entry.gd$extendedProperty[k].value;
                } else if (entry.gd$extendedProperty[k].name == 'blogger.displayTime') {
                  comment.displayTime = entry.gd$extendedProperty[k].value;
                }
              }
            }
            comments.push(comment);
          }
        }
        return comments;
      };

      var paginator = function(callback) {
        if (hasMore()) {
          var url = config.feed + '?alt=json&amp;v=2&amp;orderby=published&amp;reverse=false&amp;max-results=50';
          if (cursor) {
            url += '&amp;published-min=' + new Date(cursor).toISOString();
          }
          window.bloggercomments = function(data) {
            var parsed = parse(data);
            cursor = parsed.length &lt; 50 ? null
                : parseInt(parsed[parsed.length - 1].timestamp) + 1
            callback(parsed);
            window.bloggercomments = null;
          }
          url += '&amp;callback=bloggercomments';
          var script = document.createElement('script');
          script.type = 'text/javascript';
          script.src = url;
          document.getElementsByTagName('head')[0].appendChild(script);
        }
      };
      var hasMore = function() {
        return !!cursor;
      };
      var getMeta = function(key, comment) {
        if ('iswriter' == key) {
          var matches = !!comment.author
              &amp;&amp; comment.author.name == config.authorName
              &amp;&amp; comment.author.profileUrl == config.authorUrl;
          return matches ? 'true' : '';
        } else if ('deletelink' == key) {
          return config.baseUri + '/delete-comment.g?blogID='
               + config.blogId + '&amp;postID=' + comment.id;
        } else if ('deleteclass' == key) {
          return comment.deleteclass;
        }
        return '';
      };

      var replybox = null;
      var replyUrlParts = null;
      var replyParent = undefined;

      var onReply = function(commentId, domId) {
        if (replybox == null) {
          // lazily cache replybox, and adjust to suit this style:
          replybox = document.getElementById('comment-editor');
          if (replybox != null) {
            replybox.height = '250px';
            replybox.style.display = 'block';
            replyUrlParts = replybox.src.split('#');
          }
        }
        if (replybox &amp;&amp; (commentId !== replyParent)) {
          document.getElementById(domId).insertBefore(replybox, null);
          replybox.src = replyUrlParts[0]
              + (commentId ? '&amp;parentID=' + commentId : '')
              + '#' + replyUrlParts[1];
          replyParent = commentId;
        }
      };

      var hash = (window.location.hash || '#').substring(1);
      var startThread, targetComment;
      if (/^comment-form_/.test(hash)) {
        startThread = hash.substring('comment-form_'.length);
      } else if (/^c[0-9]+$/.test(hash)) {
        targetComment = hash.substring(1);
      }

      // Configure commenting API:
      var configJso = {
        'maxDepth': config.maxThreadDepth
      };
      var provider = {
        'id': config.postId,
        'data': items,
        'loadNext': paginator,
        'hasMore': hasMore,
        'getMeta': getMeta,
        'onReply': onReply,
        'rendered': true,
        'initComment': targetComment,
        'initReplyThread': startThread,
        'config': configJso,
        'messages': msgs
      };

      var render = function() {
        if (window.goog &amp;&amp; window.goog.comments) {
          var holder = document.getElementById('comment-holder');
          window.goog.comments.render(holder, provider);
        }
      };

      // render now, or queue to render when library loads:
      if (window.goog &amp;&amp; window.goog.comments) {
        render();
      } else {
        window.goog = window.goog || {};
        window.goog.comments = window.goog.comments || {};
        window.goog.comments.loadQueue = window.goog.comments.loadQueue || [];
        window.goog.comments.loadQueue.push(render);
      }
    })();
// ]]&gt;
  &lt;/script&gt;
&lt;/b:includable&gt;
            &lt;b:includable id='threaded_comments' var='post'&gt;
  &lt;div class='comments' id='comments'&gt;
    &lt;a name='comments'/&gt;
    &lt;h4&gt;&lt;data:post.commentLabelFull/&gt;:&lt;/h4&gt;

    &lt;div class='comments-content'&gt;
      &lt;b:if cond='data:post.embedCommentForm'&gt;
        &lt;b:include data='post' name='threaded_comment_js'/&gt;
      &lt;/b:if&gt;
      &lt;div id='comment-holder'&gt;
         &lt;data:post.commentHtml/&gt;
      &lt;/div&gt;
    &lt;/div&gt;

    &lt;p class='comment-footer'&gt;
      &lt;b:if cond='data:post.allowNewComments'&gt;
        &lt;b:include data='post' name='threaded-comment-form'/&gt;
      &lt;b:else/&gt;
        &lt;data:post.noNewCommentsText/&gt;
      &lt;/b:if&gt;
    &lt;/p&gt;

    &lt;b:if cond='data:showCmtPopup'&gt;
      &lt;div id='comment-popup'&gt;
        &lt;iframe allowtransparency='true' frameborder='0' id='comment-actions' name='comment-actions' scrolling='no'&gt;
        &lt;/iframe&gt;
      &lt;/div&gt;
    &lt;/b:if&gt;

    &lt;div id='backlinks-container'&gt;
    &lt;div expr:id='data:widget.instanceId + &amp;quot;_backlinks-container&amp;quot;'&gt;
       &lt;b:if cond='data:post.showBacklinks'&gt;
         &lt;b:include data='post' name='backlinks'/&gt;
       &lt;/b:if&gt;
    &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
          &lt;/b:widget&gt;
          &lt;b:widget id='HTML2' locked='false' title='Days of our lives' type='HTML'&gt;
            &lt;b:includable id='main'&gt;
  &lt;!-- only display title if it's non-empty --&gt;
  &lt;b:if cond='data:title != &amp;quot;&amp;quot;'&gt;
    &lt;h2 class='title'&gt;&lt;data:title/&gt;&lt;/h2&gt;
  &lt;/b:if&gt;
  &lt;div class='widget-content'&gt;
    &lt;data:content/&gt;
  &lt;/div&gt;

  &lt;b:include name='quickedit'/&gt;
&lt;/b:includable&gt;
          &lt;/b:widget&gt;
        &lt;/b:section&gt;
      &lt;/div&gt;

&lt;!-- (Lateral) --&gt;
      &lt;div class='grid_8' id='sidebar-wrapper'&gt;
	&lt;b:section class='grid_4 alpha' id='sidebar1' preferred='yes'&gt;
&lt;b:widget id='Profile2' locked='false' title='' type='Profile'&gt;
  &lt;b:includable id='main'&gt;
    &lt;b:if cond='data:title != &amp;quot;&amp;quot;'&gt;
      &lt;h2&gt;&lt;data:title/&gt;&lt;/h2&gt;
    &lt;/b:if&gt;
    &lt;div class='widget-content'&gt;
    &lt;b:if cond='data:team == &amp;quot;true&amp;quot;'&gt; &lt;!-- team blog profile --&gt;
      &lt;ul&gt;
        &lt;b:loop values='data:authors' var='i'&gt;
          &lt;li&gt;&lt;a class='profile-name-link g-profile' expr:href='data:i.userUrl' expr:style='&amp;quot;background-image: url(&amp;quot; + data:i.profileLogo + &amp;quot;);&amp;quot;'&gt;&lt;data:i.display-name/&gt;&lt;/a&gt;&lt;/li&gt;
        &lt;/b:loop&gt;
      &lt;/ul&gt;

    &lt;b:else/&gt; &lt;!-- normal blog profile --&gt;

      &lt;b:if cond='data:photo.url != &amp;quot;&amp;quot;'&gt;
        &lt;a expr:href='data:userUrl'&gt;&lt;img class='profile-img' expr:alt='data:photo.alt' expr:height='data:photo.height' expr:src='data:photo.url' expr:width='data:photo.width'/&gt;&lt;/a&gt;
      &lt;/b:if&gt;

      &lt;dl class='profile-datablock'&gt;
        &lt;dt class='profile-data'&gt;
          &lt;a class='profile-name-link g-profile' expr:href='data:userUrl' expr:style='&amp;quot;background-image: url(&amp;quot; + data:profileLogo + &amp;quot;);&amp;quot;' rel='author'&gt;
            &lt;data:displayname/&gt;
          &lt;/a&gt;
          &lt;b:if cond='data:hasgoogleprofile'&gt;
            &lt;br/&gt;
            &lt;div class='g-follow' data-annotation='bubble' data-height='20' expr:data-href='data:userUrl'/&gt;
          &lt;/b:if&gt;
        &lt;/dt&gt;

        &lt;b:if cond='data:showlocation == &amp;quot;true&amp;quot;'&gt;
          &lt;dd class='profile-data'&gt;&lt;data:location/&gt;&lt;/dd&gt;
        &lt;/b:if&gt;

        &lt;b:if cond='data:aboutme != &amp;quot;&amp;quot;'&gt;&lt;dd class='profile-textblock'&gt;&lt;data:aboutme/&gt;&lt;/dd&gt;&lt;/b:if&gt;
      &lt;/dl&gt;
      &lt;a class='profile-link' expr:href='data:userUrl' rel='author'&gt;&lt;data:viewProfileMsg/&gt;&lt;/a&gt;
    &lt;/b:if&gt;

     &lt;b:include name='quickedit'/&gt;
    &lt;/div&gt;
  &lt;/b:includable&gt;
&lt;/b:widget&gt;
&lt;b:widget id='TextList1' locked='false' title='Now, I am busy in' type='TextList'&gt;
  &lt;b:includable id='main'&gt;
 &lt;h2&gt;&lt;data:title/&gt;&lt;/h2&gt;
 &lt;div class='widget-content'&gt;
   &lt;ul&gt;
     &lt;b:loop values='data:items' var='item'&gt;
       &lt;li&gt;&lt;data:item/&gt;&lt;/li&gt;
     &lt;/b:loop&gt;
   &lt;/ul&gt; 
   &lt;b:include name='quickedit'/&gt;
 &lt;/div&gt;
&lt;/b:includable&gt;
&lt;/b:widget&gt;
&lt;b:widget id='LinkList3' locked='false' title='My Love' type='LinkList'&gt;
  &lt;b:includable id='main'&gt;

&lt;b:if cond='data:title'&gt;&lt;h2&gt;&lt;data:title/&gt;&lt;/h2&gt;&lt;/b:if&gt;
 &lt;div class='widget-content'&gt;
   &lt;ul&gt;
     &lt;b:loop values='data:links' var='link'&gt;
       &lt;li&gt;&lt;a expr:href='data:link.target'&gt;&lt;data:link.name/&gt;&lt;/a&gt;&lt;/li&gt;
     &lt;/b:loop&gt;
   &lt;/ul&gt;
   &lt;b:include name='quickedit'/&gt;
 &lt;/div&gt;
&lt;/b:includable&gt;
&lt;/b:widget&gt;
&lt;b:widget id='LinkList4' locked='false' title='Links Archive' type='LinkList'&gt;
  &lt;b:includable id='main'&gt;

&lt;b:if cond='data:title'&gt;&lt;h2&gt;&lt;data:title/&gt;&lt;/h2&gt;&lt;/b:if&gt;
 &lt;div class='widget-content'&gt;
   &lt;ul&gt;
     &lt;b:loop values='data:links' var='link'&gt;
       &lt;li&gt;&lt;a expr:href='data:link.target'&gt;&lt;data:link.name/&gt;&lt;/a&gt;&lt;/li&gt;
     &lt;/b:loop&gt;
   &lt;/ul&gt;
   &lt;b:include name='quickedit'/&gt;
 &lt;/div&gt;
&lt;/b:includable&gt;
&lt;/b:widget&gt;
&lt;/b:section&gt;

	&lt;b:section class='grid_4 alpha' id='sidebar2' preferred='yes'&gt;
&lt;b:widget id='BlogArchive2' locked='false' title='Archive' type='BlogArchive'&gt;
  &lt;b:includable id='main'&gt;
  &lt;b:if cond='data:title'&gt;
    &lt;h2&gt;&lt;data:title/&gt;&lt;/h2&gt;
  &lt;/b:if&gt;
  &lt;div class='widget-content'&gt;
  &lt;div id='ArchiveList'&gt;
  &lt;div expr:id='data:widget.instanceId + &amp;quot;_ArchiveList&amp;quot;'&gt;
    &lt;b:if cond='data:style == &amp;quot;HIERARCHY&amp;quot;'&gt;
     &lt;b:include data='data' name='interval'/&gt;
    &lt;/b:if&gt;
    &lt;b:if cond='data:style == &amp;quot;FLAT&amp;quot;'&gt;
      &lt;b:include data='data' name='flat'/&gt;
    &lt;/b:if&gt;
    &lt;b:if cond='data:style == &amp;quot;MENU&amp;quot;'&gt;
      &lt;b:include data='data' name='menu'/&gt;
    &lt;/b:if&gt;
  &lt;/div&gt;
  &lt;/div&gt;
  &lt;b:include name='quickedit'/&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
  &lt;b:includable id='flat' var='data'&gt;
  &lt;ul class='flat'&gt;
    &lt;b:loop values='data:data' var='i'&gt;
      &lt;li class='archivedate'&gt;
        &lt;a expr:href='data:i.url'&gt;&lt;data:i.name/&gt;&lt;/a&gt; (&lt;data:i.post-count/&gt;)
      &lt;/li&gt;
    &lt;/b:loop&gt;
  &lt;/ul&gt;
&lt;/b:includable&gt;
  &lt;b:includable id='interval' var='intervalData'&gt;
  &lt;b:loop values='data:intervalData' var='i'&gt;
      &lt;ul class='hierarchy'&gt;
        &lt;li expr:class='&amp;quot;archivedate &amp;quot; + data:i.expclass'&gt;
          &lt;b:include data='i' name='toggle'/&gt;
          &lt;a class='post-count-link' expr:href='data:i.url'&gt;&lt;data:i.name/&gt;&lt;/a&gt;
            &lt;span class='post-count' dir='ltr'&gt;(&lt;data:i.post-count/&gt;)&lt;/span&gt;
          &lt;b:if cond='data:i.data'&gt;
            &lt;b:include data='i.data' name='interval'/&gt;
          &lt;/b:if&gt;
          &lt;b:if cond='data:i.posts'&gt;
            &lt;b:include data='i.posts' name='posts'/&gt;
          &lt;/b:if&gt;
        &lt;/li&gt;
      &lt;/ul&gt;
  &lt;/b:loop&gt;
&lt;/b:includable&gt;
  &lt;b:includable id='menu' var='data'&gt;
  &lt;select expr:id='data:widget.instanceId + &amp;quot;_ArchiveMenu&amp;quot;'&gt;
    &lt;option value=''&gt;&lt;data:title/&gt;&lt;/option&gt;
    &lt;b:loop values='data:data' var='i'&gt;
      &lt;option expr:value='data:i.url'&gt;&lt;data:i.name/&gt; (&lt;data:i.post-count/&gt;)&lt;/option&gt;
    &lt;/b:loop&gt;
  &lt;/select&gt;
&lt;/b:includable&gt;
  &lt;b:includable id='posts' var='posts'&gt;
  &lt;ul class='posts'&gt;
    &lt;b:loop values='data:posts' var='i'&gt;
      &lt;li&gt;&lt;a expr:href='data:i.url'&gt;&lt;data:i.title/&gt;&lt;/a&gt;&lt;/li&gt;
    &lt;/b:loop&gt;
  &lt;/ul&gt;
&lt;/b:includable&gt;
  &lt;b:includable id='toggle' var='interval'&gt;
  &lt;b:if cond='data:interval.toggleId'&gt;
  &lt;b:if cond='data:interval.expclass == &amp;quot;expanded&amp;quot;'&gt;
    &lt;a class='toggle' href='javascript:void(0)'&gt;
      &lt;span class='zippy toggle-open'&gt;&amp;#9660;&amp;#160;&lt;/span&gt;
    &lt;/a&gt;
  &lt;b:else/&gt;
    &lt;a class='toggle' href='javascript:void(0)'&gt;
      &lt;span class='zippy'&gt;
        &lt;b:if cond='data:blog.languageDirection == &amp;quot;rtl&amp;quot;'&gt;
          &amp;#9668;&amp;#160;
        &lt;b:else/&gt;
          &amp;#9658;&amp;#160;
        &lt;/b:if&gt;
      &lt;/span&gt;
    &lt;/a&gt;
  &lt;/b:if&gt;
 &lt;/b:if&gt;
&lt;/b:includable&gt;
&lt;/b:widget&gt;
&lt;b:widget id='Label1' locked='false' title='Tags' type='Label'&gt;
  &lt;b:includable id='main'&gt;
  &lt;b:if cond='data:title'&gt;
    &lt;h2&gt;&lt;data:title/&gt;&lt;/h2&gt;
  &lt;/b:if&gt;
  &lt;div expr:class='&amp;quot;widget-content &amp;quot; + data:display + &amp;quot;-label-widget-content&amp;quot;'&gt;
    &lt;b:if cond='data:display == &amp;quot;list&amp;quot;'&gt;
      &lt;ul&gt;
      &lt;b:loop values='data:labels' var='label'&gt;
        &lt;li&gt;
          &lt;b:if cond='data:blog.url == data:label.url'&gt;
            &lt;span expr:dir='data:blog.languageDirection'&gt;&lt;data:label.name/&gt;&lt;/span&gt;
          &lt;b:else/&gt;
            &lt;a expr:dir='data:blog.languageDirection' expr:href='data:label.url'&gt;&lt;data:label.name/&gt;&lt;/a&gt;
          &lt;/b:if&gt;
          &lt;b:if cond='data:showFreqNumbers'&gt;
            &lt;span dir='ltr'&gt;(&lt;data:label.count/&gt;)&lt;/span&gt;
          &lt;/b:if&gt;
        &lt;/li&gt;
      &lt;/b:loop&gt;
      &lt;/ul&gt;
    &lt;b:else/&gt;
      &lt;b:loop values='data:labels' var='label'&gt;
        &lt;span expr:class='&amp;quot;label-size label-size-&amp;quot; + data:label.cssSize'&gt;
          &lt;b:if cond='data:blog.url == data:label.url'&gt;
            &lt;span expr:dir='data:blog.languageDirection'&gt;&lt;data:label.name/&gt;&lt;/span&gt;
          &lt;b:else/&gt;
            &lt;a expr:dir='data:blog.languageDirection' expr:href='data:label.url'&gt;&lt;data:label.name/&gt;&lt;/a&gt;
          &lt;/b:if&gt;
          &lt;b:if cond='data:showFreqNumbers'&gt;
            &lt;span class='label-count' dir='ltr'&gt;(&lt;data:label.count/&gt;)&lt;/span&gt;
          &lt;/b:if&gt;
        &lt;/span&gt;
      &lt;/b:loop&gt;
    &lt;/b:if&gt;
    &lt;b:include name='quickedit'/&gt;
  &lt;/div&gt;
&lt;/b:includable&gt;
&lt;/b:widget&gt;
&lt;b:widget id='HTML1' locked='false' title='Counter' type='HTML'&gt;
  &lt;b:includable id='main'&gt;
  &lt;!-- only display title if it's non-empty --&gt;
  &lt;b:if cond='data:title != &amp;quot;&amp;quot;'&gt;
    &lt;h2 class='title'&gt;&lt;data:title/&gt;&lt;/h2&gt;
  &lt;/b:if&gt;
  &lt;div class='widget-content'&gt;
    &lt;data:content/&gt;
  &lt;/div&gt;

  &lt;b:include name='quickedit'/&gt;
&lt;/b:includable&gt;
&lt;/b:widget&gt;
&lt;/b:section&gt;

      &lt;/div&gt;

&lt;!-- Limpiar flotacion--&gt;
      &lt;div class='clear'/&gt;

    &lt;/div&gt;&lt;/div&gt; &lt;!-- fin de capa content-wrapper --&gt;

&lt;!-- (Pie de pagina) --&gt;
    &lt;div id='footer-wrapper'&gt;
&lt;div id='footer-content'&gt;

&lt;b:section class='grid_8' id='footer1' preferred='yes'/&gt;

&lt;b:section class='grid_8' id='footer2' preferred='yes'/&gt;

&lt;/div&gt;

&lt;div id='links'&gt; &lt;p class='bottom-left'&gt;Copyright &amp;#169; 2009-2013 &lt;a expr:href='data:blog.homepageUrl' style='text-decoration: none;'&gt;&lt;data:blog.title/&gt;&lt;/a&gt;&lt;/p&gt;
  &lt;p class='bottom-right'&gt;
Every day, we have the choice to live fully. After all, attitude is everything.
&lt;/p&gt;
    &lt;/div&gt;&lt;/div&gt;

  &lt;/div&gt;&lt;/div&gt; &lt;!-- fin de capa outer-wrapper --&gt;
&lt;/body&gt;
&lt;/html&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/template/default'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/template/default'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_PUBLISHING_MODE</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>为此博客设置的发布类型。</title><content type='text'>PUBLISH_MODE_BLOGSPOT</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_PUBLISHING_MODE'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_PUBLISHING_MODE'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_ADMIN_PERMISSION</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>此博客管理员的电子邮件列表。</title><content type='text'>creasywuqiong@gmail.com</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_ADMIN_PERMISSION'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_ADMIN_PERMISSION'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_ADULT_CONTENT</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>此博客是否包含成人内容</title><content type='text'>false</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_ADULT_CONTENT'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_ADULT_CONTENT'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_ALTERNATE_JSRENDER_ALLOWED</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>是否允许使用备用的 JS 渲染</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_ALTERNATE_JSRENDER_ALLOWED'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_ALTERNATE_JSRENDER_ALLOWED'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_ANALYTICS_ACCOUNT_NUMBER</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>博客的 Google Analytics（分析）帐号</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_ANALYTICS_ACCOUNT_NUMBER'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_ANALYTICS_ACCOUNT_NUMBER'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_ARCHIVE_DATE_FORMAT</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>存档索引日期格式的编号</title><content type='text'>7</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_ARCHIVE_DATE_FORMAT'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_ARCHIVE_DATE_FORMAT'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_ARCHIVE_FREQUENCY</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>此博客的存档频率应该为多少</title><content type='text'>MONTHLY</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_ARCHIVE_FREQUENCY'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_ARCHIVE_FREQUENCY'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_AUTHOR_PERMISSION</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>有权进行发布的作者的电子邮件列表。</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_AUTHOR_PERMISSION'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_AUTHOR_PERMISSION'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_BACKLINKS_ALLOWED</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>是否在博客中显示评论反向链接</title><content type='text'>false</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_BACKLINKS_ALLOWED'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_BACKLINKS_ALLOWED'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_BY_POST_ARCHIVING</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>是否为每个帖子提供存档页</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_BY_POST_ARCHIVING'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_BY_POST_ARCHIVING'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_COMMENT_ACCESS</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>哪些人能发表评论</title><content type='text'>ANYONE</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_ACCESS'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_ACCESS'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_COMMENT_CAPTCHA</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>是否要求评论者完成 Captcha</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_CAPTCHA'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_CAPTCHA'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_COMMENT_EMAIL</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>用于接收新评论通知的电子邮件地址列表</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_EMAIL'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_EMAIL'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_COMMENT_FEED</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>为博客评论所提供的 Feed 类型</title><content type='text'>FULL</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_FEED'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_FEED'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_COMMENT_FORM_LOCATION</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>博客评论表位置</title><content type='text'>EMBEDDED_IFRAME</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_FORM_LOCATION'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_FORM_LOCATION'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_COMMENT_MESSAGE</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>博客评论消息</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_MESSAGE'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_MESSAGE'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_COMMENT_MODERATION</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>是否启用评论审阅</title><content type='text'>DISABLED</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_MODERATION'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_MODERATION'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_COMMENT_MODERATION_DELAY</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>新评论进行审阅的天数</title><content type='text'>14</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_MODERATION_DELAY'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_MODERATION_DELAY'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_COMMENT_MODERATION_EMAIL</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>用于接收需要审阅新评论的通知的电子邮件地址</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_MODERATION_EMAIL'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_MODERATION_EMAIL'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_COMMENT_PROFILE_IMAGES</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>是否在评论中显示个人资料图片</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_PROFILE_IMAGES'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENT_PROFILE_IMAGES'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_COMMENTS_ALLOWED</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>是否显示评论</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENTS_ALLOWED'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENTS_ALLOWED'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_COMMENTS_TIME_STAMP_FORMAT</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>评论时间戳格式编号</title><content type='text'>29</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENTS_TIME_STAMP_FORMAT'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_COMMENTS_TIME_STAMP_FORMAT'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_CONVERT_LINE_BREAKS</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>是否在帖子编辑器中将换行符转换为 &lt;br /&gt; 标记</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_CONVERT_LINE_BREAKS'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_CONVERT_LINE_BREAKS'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_CUSTOM_PAGE_NOT_FOUND</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>找不到所请求的帖子或页面时提供的内容。</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_CUSTOM_PAGE_NOT_FOUND'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_CUSTOM_PAGE_NOT_FOUND'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_CUSTOM_ROBOTS_TXT</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>博客投放到搜索引擎的自定义 robots.txt 内容。</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_CUSTOM_ROBOTS_TXT'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_CUSTOM_ROBOTS_TXT'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_CUSTOM_ROBOTS_TXT_ENABLED</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>此博客是否向搜索引擎投放自定义 robots.txt 内容。</title><content type='text'>false</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_CUSTOM_ROBOTS_TXT_ENABLED'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_CUSTOM_ROBOTS_TXT_ENABLED'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_DATE_FORMAT</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>日期标题格式的编号</title><content type='text'>25</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_DATE_FORMAT'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_DATE_FORMAT'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_DEFAULT_BACKLINKS_MODE</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>帖子的默认反向链接模式</title><content type='text'>DEFAULT_HAVE_BACKLINKS</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_DEFAULT_BACKLINKS_MODE'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_DEFAULT_BACKLINKS_MODE'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_DEFAULT_COMMENTS_MODE</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>帖子的默认评论模式</title><content type='text'>DEFAULT_HAVE_COMMENTS</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_DEFAULT_COMMENTS_MODE'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_DEFAULT_COMMENTS_MODE'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_DESCRIPTION</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>博客的说明。</title><content type='text'>Everyday, we have the choice to live fully.
After all, attitude is everything.</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_DESCRIPTION'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_DESCRIPTION'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_EMAIL_POST_LINKS</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>是否为用户显示通过电子邮件发帖的链接</title><content type='text'>false</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_EMAIL_POST_LINKS'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_EMAIL_POST_LINKS'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_FEED_REDIRECT_URL</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>重定向帖子 Feed 请求的目标网址</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_FEED_REDIRECT_URL'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_FEED_REDIRECT_URL'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_FLOAT_ALIGNMENT</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>是否为博客启用浮动对齐</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_FLOAT_ALIGNMENT'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_FLOAT_ALIGNMENT'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_LOCALE</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>此博客的语言</title><content type='text'>en_US</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_LOCALE'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_LOCALE'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_MAIL_PUBLISH</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>是否应该立即发布 Mail-to-Blogger 帖子</title><content type='text'>false</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_MAIL_PUBLISH'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_MAIL_PUBLISH'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_MAIL_TO_BLOGGER</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>Mail-to-Blogger 的电子邮件地址保密</title><content type='text'>readnlearn</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_MAIL_TO_BLOGGER'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_MAIL_TO_BLOGGER'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_MAX_NUM</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>主页上显示的对象数量上限</title><content type='text'>7</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_MAX_NUM'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_MAX_NUM'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_MAX_UNIT</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>主页上显示的对象单位</title><content type='text'>POSTS</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_MAX_UNIT'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_MAX_UNIT'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_META_DESCRIPTION</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>将博客的元描述投放到搜索引擎。</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_META_DESCRIPTION'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_META_DESCRIPTION'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_META_DESCRIPTION_ENABLED</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>是否使用元描述投放此博客。</title><content type='text'>false</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_META_DESCRIPTION_ENABLED'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_META_DESCRIPTION_ENABLED'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_NAME</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>博客的名称</title><content type='text'>Creasy's Blog</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_NAME'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_NAME'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_PER_POST_FEED</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>为每个帖子评论所提供的 Feed 类型</title><content type='text'>FULL</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_PER_POST_FEED'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_PER_POST_FEED'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_POST_FEED</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>为博客帖子所提供的 Feed 类型</title><content type='text'>FULL</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_POST_FEED'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_POST_FEED'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_POST_FEED_FOOTER</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>要附加到帖子 Feed 中每个条目末尾的页脚</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_POST_FEED_FOOTER'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_POST_FEED_FOOTER'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_POST_TEMPLATE</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>博文模板</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_POST_TEMPLATE'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_POST_TEMPLATE'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_PROMOTED</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>可否在 Blogger 上宣传此博客</title><content type='text'>false</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_PROMOTED'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_PROMOTED'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_QUICK_EDITING</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>是否启用快速编辑</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_QUICK_EDITING'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_QUICK_EDITING'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_READ_ACCESS_MODE</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>博客读者的访问类型</title><content type='text'>PUBLIC</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_READ_ACCESS_MODE'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_READ_ACCESS_MODE'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_READER_PERMISSION</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>有权阅读博客的用户的电子邮件列表。</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_READER_PERMISSION'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_READER_PERMISSION'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_SEARCHABLE</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>搜索引擎是否为此博客编制索引</title><content type='text'>false</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_SEARCHABLE'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_SEARCHABLE'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_SEND_EMAIL</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>用于接收新博客帖子并以逗号分隔的电子邮件列表</title><content type='text'></content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_SEND_EMAIL'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_SEND_EMAIL'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_SHOW_TITLE</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>是否显示标题字段</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_SHOW_TITLE'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_SHOW_TITLE'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_SHOW_URL</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>是否在帖子撰写器中显示相关的链接框</title><content type='text'>false</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_SHOW_URL'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_SHOW_URL'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_SUBDOMAIN</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>用于发布您的博客的 BlogSpot 子域</title><content type='text'>creasywuqiong</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_SUBDOMAIN'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_SUBDOMAIN'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_TIME_STAMP_FORMAT</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>时间戳格式的编号</title><content type='text'>26</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_TIME_STAMP_FORMAT'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_TIME_STAMP_FORMAT'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_TIME_ZONE</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>此博客的时区</title><content type='text'>America/Chicago</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_TIME_ZONE'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_TIME_ZONE'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.settings.BLOG_USE_LIGHTBOX</id><published>2009-01-08T11:46:05.147-06:00</published><updated>2013-08-10T01:15:52.971-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#settings'/><title type='text'>是否在点击时在 Lightbox 中显示图片</title><content type='text'>true</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_USE_LIGHTBOX'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/settings/BLOG_USE_LIGHTBOX'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1185420148013885768</id><published>2013-08-10T01:15:00.001-05:00</published><updated>2013-08-10T01:15:52.977-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Reading note of SICP (4)</title><content type='html'>&lt;br /&gt;Aug. 10th. Complete the 1st chapter of sicp.&lt;br /&gt;&lt;br /&gt;I really appreciate the exercises within each subsections, because I can feel that they are well designed. I used to have the same feeling when I did the homework from Dan's course of programming languages. The exercises make the general concepts concrete and doable.&lt;br /&gt;&lt;br /&gt;The abstraction is far from merely making the code more structured and readable. It is a design choice. Sometimes, it takes experience to find out where should be abstracted. And sometimes, it takes much more endeavors than simply mix everything together. But once the choice of abstraction is right, the program becomes clearer, and it increases many degrees of freedom for the design afterwards.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1185420148013885768/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2013/08/reading-note-of-sicp-4.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1185420148013885768'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1185420148013885768'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2013/08/reading-note-of-sicp-4.html' title='Reading note of SICP (4)'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8495336162934137560</id><published>2013-08-08T14:54:00.001-05:00</published><updated>2013-08-08T14:54:50.456-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Reading note of SICP (3)</title><content type='html'>&amp;nbsp;&lt;br /&gt;At the end of the 1st chapter, it enumerates the basic reason for the powerful lisp: first-order procedure.&lt;br /&gt;&lt;br /&gt;The major "privileges" of the first-order elements are:&lt;br /&gt;1) They may be named by variables.&lt;br /&gt;2) They may be passed as arguments to procedures.&lt;br /&gt;3) They may be returned as the results of procedures.&lt;br /&gt;4) They may be included in data structures.&lt;br /&gt;They can be crucial abstraction mechanism permitting to express the general methods of computing as explicit elements in programming language, so that they can be handled just like other computational elements. The expression power is enormous.&lt;br /&gt;&lt;br /&gt;I have already been used to use the first two kinds of procedures, but the last two actually make the program even more expressive and powerful. Those are also the attractive properties sharing among functional programming languages.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8495336162934137560/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2013/08/reading-note-of-sicp-3.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8495336162934137560'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8495336162934137560'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2013/08/reading-note-of-sicp-3.html' title='Reading note of SICP (3)'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2378417082902983521</id><published>2013-08-07T14:10:00.001-05:00</published><updated>2013-08-07T14:13:59.710-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Reading note of SICP (2)</title><content type='html'>&lt;br /&gt;While I am reading, I always try to distinguish which part of thoughts I used to learn from here when I read it for the first time, and which part I learned from Dan's course. And, surprisingly enough, I learned almost all basic factors from Dan, though I always felt I learned a lot of things last year when I began to read it.&lt;br /&gt;&lt;br /&gt;The name of this book is perfect for the content -- Structure and Interpretation of Computer Programs. It does not teach about how to program, nor a specific programming language. Of course it is a legacy book. But it seems to me that I cannot get enough from this book unless I have mastered quite a few programming languages. After Dan taught me everything about basic aspects of programming languages and I played with Ruby and Racket for a long time, even after I leaned all those "nontrivial" trivial things about C++, when I read it now, I am able to distinguish which part is the essence and which part is written just for the ease of learning, and I can fully focus on how to put different abstractions into different layers-- in other words, learning the structure and interpretation of computer programs.&lt;br /&gt;&lt;br /&gt;I read a comment, saying that Chapter 4 and 5 are the essence of the book. Hopefully, I can finish reading it before September, and leave enough time for Design Patterns.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2378417082902983521/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2013/08/reading-note-of-sicp-2.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2378417082902983521'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2378417082902983521'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2013/08/reading-note-of-sicp-2.html' title='Reading note of SICP (2)'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8401994473846868921</id><published>2013-08-06T15:01:00.000-05:00</published><updated>2013-08-06T15:05:13.927-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Reading note of SICP</title><content type='html'>P59. I still don't think it is necessary to use "square" instead of (* x x) everywhere we perform this operation, but I appreciate the idea of "abstraction". It is really a good idea (and practice) to abstract concepts in different levels and use them accordingly.&lt;br /&gt;&lt;br /&gt;Most of the examples I read are in a top-down design manner: firstly use the abstract concepts, and then implement it in a lower level. The concerns for specific lower-level modules is similar to the way I did using unit test. But I am a little bit confuse how to perform the unit test in this manner. Especially for the closure using in LISP--implementing local helper functions right after building major function-- how can I make sure the helper functions are right before I run the program as a whole? If I separate a helper function as an independent one, it seems that quite a little redundant work has to perform when I move it back to the major function.&lt;br /&gt;&lt;br /&gt;Anyway, SICP just makes me love Racket even more =D&lt;br /&gt;&lt;br /&gt;cheers,</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8401994473846868921/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2013/08/reading-digest-sicp.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8401994473846868921'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8401994473846868921'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2013/08/reading-digest-sicp.html' title='Reading note of SICP'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5511954223287276018</id><published>2013-07-23T22:45:00.002-05:00</published><updated>2013-07-23T22:53:50.299-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Python/Numpy version collisions</title><content type='html'>&amp;nbsp; &amp;nbsp; &lt;br /&gt;Before this accident, I did not even know there were so many places relevant with a single program... I opened the pandora's box beginning with using &lt;code&gt;brew doctor&lt;/code&gt; &amp;nbsp;which told me to move directory /usr/local/bin/ prior to /usr/bin/ so that all the homebrewed packages could be found automatically. After I did this, if I executed matplotlib, I would have this runtime error &lt;code&gt;RuntimeError: module compiled against API version 8 but this version of numpy is 6&lt;/code&gt;&amp;nbsp;which was somewhat correct by the way. Because I used superpack installed the latest version of numpy(1.8), scipy(0.13), and matplotlib(1.4), but if I printed out the "numpy.__version__" in a script, it showed 1.6.1.&lt;br /&gt;&lt;br /&gt;1) delete all of the outdated versions of numpy&lt;br /&gt;2) make sure I explicitly add PYTHONPATH in the bash_profile.&lt;br /&gt;3) I even uninstalled and reinstalled the numpy&lt;br /&gt;But the problem was still there.&lt;br /&gt;&lt;br /&gt;After an exhausted search, I found that numpy-1.6.1 in "/System/Library/Frameworks/Python.framework/Versions/2.6/Extras/lib/python/" WTF! I still don't know why it search into 2.6 given there is another 2.7 in the same level of directory. Deleting both 2.6 and 2.7 directories (only delete the 2.6 could not work either...) finally solved the problem. ahooooo....&lt;br /&gt;&lt;br /&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5511954223287276018/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2013/07/pythonnumpy-version-collisions.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5511954223287276018'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5511954223287276018'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2013/07/pythonnumpy-version-collisions.html' title='Python/Numpy version collisions'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4824915648592389793</id><published>2013-07-01T19:35:00.000-05:00</published><updated>2013-07-28T09:58:13.868-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Setup emacs in Mac OS</title><content type='html'>&lt;br /&gt;The setup is much harder than I thought...&lt;br /&gt;&lt;br /&gt;1) using homebrew installs the emacs and guile. Then, I also need to add path in the .bash_profile to launch the up-to-date emacs rather than the original version 22.1 shipped with the os.&lt;br /&gt;&lt;code&gt;export PATH=/usr/local/Cellar/emacs/24.3/bin:$PATH&lt;/code&gt;&lt;br /&gt;2) Enable the &lt;a href="http://stackoverflow.com/questions/162896/emacs-on-mac-os-x-leopard-key-bindings"&gt;Meta key in terminal&lt;/a&gt;, or similar position for iterm2.&lt;br /&gt;&lt;br /&gt;After these two steps, the following is more&amp;nbsp;straightforward.&lt;br /&gt;&lt;br /&gt;3) I accidentally found this "&lt;a href="https://github.com/technomancy/emacs-starter-kit"&gt;emacs-starter-kit&lt;/a&gt;", which had 2300+ stared and really saved my day. Just follow the instruction and everything will be fine.&lt;br /&gt;&lt;br /&gt;In current state, I feel emacs kind of like vim+tmux. Anyway, learning new knowledge is always a pleasure, especially about this kind of "legacy" stuff.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;cheers,&lt;br /&gt;&lt;br /&gt;[UPDATE: after changed the loading sequence of bash in &lt;code&gt;/etc/paths/&lt;/code&gt; the first step seems unnecessary... actually, that was something I should do as soon as I used homebrew to port packages.&amp;nbsp;&lt;a href="http://bit.ly/IUVl9a"&gt;http://bit.ly/IUVl9a&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4824915648592389793/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2013/07/setup-emacs-in-mac-os.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4824915648592389793'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4824915648592389793'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2013/07/setup-emacs-in-mac-os.html' title='Setup emacs in Mac OS'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6490576976765246129</id><published>2013-06-05T12:58:00.001-05:00</published><updated>2013-06-05T12:59:16.966-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>C++ rants (continued)</title><content type='html'>(&lt;a href="http://www.realworldtech.com/forum/?threadid=104299&amp;amp;curpostid=104196"&gt;link&lt;/a&gt;)&lt;br /&gt;&lt;br /&gt;&amp;gt;Care to write an explicit example of a deep problem? (Except memory management - you already mentioned garbage collection.)&lt;br /&gt;&lt;br /&gt;Concurrency, for example.&lt;br /&gt;&lt;br /&gt;My point being, that C++ adds absolutely nothing interesting.&lt;br /&gt;&lt;br /&gt;&amp;gt;All right. Then why do you think C should have support for structures (struct {...})?&lt;br /&gt;&lt;br /&gt;That's just singularly stupid.&lt;br /&gt;&lt;br /&gt;C is a good language. It's complete enough (and yes, the ability to handle structured data is very much required for any serious language) to be supremely useful, while at the same time being quite simple.&lt;br /&gt;&lt;br /&gt;A language without structured data types would not be a powerful language the way C is. You do need data structures, and you need pointers (to both data and code) to be at all interesting.&lt;br /&gt;&lt;br /&gt;But where do you draw the line?&lt;br /&gt;&lt;br /&gt;I know that you as a C++ proponent you probably won't really "get" this simple argument, but try:&lt;br /&gt;&lt;br /&gt;- read the K&amp;amp;R book on C (the ANSI edition), and be enlightened.&lt;br /&gt;&lt;br /&gt;Notice how the language is basically described by one rather thin book. Readably.&lt;br /&gt;&lt;br /&gt;So what C does so well is to do that whole "make it as simple as you can, but no simpler". And that is what makes it great. The language is powerful, yet fairly minimal.&lt;br /&gt;&lt;br /&gt;There really aren't many features you could remove from the C language without crippling it. Sure, there's&lt;br /&gt;three different looping constructs, and you could make trivial (syntactic) changes to the language, but that's&lt;br /&gt;really not the point. The language is simple, but without being too simple.&lt;br /&gt;&lt;br /&gt;Now, that's not what you always want. I understand very well why people want less system-oriented languages with more built-in functionality. As mentioned, support for both garbage collection and concurrency are quite real problems, and they are both things you can do in C, but that you cannot do well with library interfaces, which is how you normally would extend on C.&lt;br /&gt;&lt;br /&gt;And garbage collection and concurrency are way more than just syntactic extensions. You can still do them very badly, of course, so it's not a trivial path to go down, and I'm not saying hat a language magically becomes "good" just from supporting one or the other.&lt;br /&gt;&lt;br /&gt;But again: C does what it does very well, and with a clarity of thought and design that is entirely and utterly lacking from C++.&lt;br /&gt;&lt;br /&gt;And yes, I happen to think that clarity of thought and design is a good thing. It's why I liked UNIX, even though I was initially introduced to other things (VMS - ugh).&lt;br /&gt;&lt;br /&gt;C++ is a mess. There's no design. It's just "add crud on top of C". And the crud isn't even meaningful, much less does it have a design. It's totally and utterly random.&lt;br /&gt;&lt;br /&gt;It started out random, now it's randomness that gets added to by a committee.&lt;br /&gt;&lt;br /&gt;&amp;gt;For example, namespaces and function overloading are *not*&lt;br /&gt;&amp;gt;useless. They *do* solve a real problem that C is incapable&lt;br /&gt;&amp;gt;of solving.&lt;br /&gt;&lt;br /&gt;You're full of it.&lt;br /&gt;&lt;br /&gt;&amp;gt;For example, if you want in your source code to define a&lt;br /&gt;&amp;gt;function called "connect" and you also want include&lt;br /&gt;&amp;gt;"sys/socket.h", you cannot do that in C.&lt;br /&gt;&lt;br /&gt;So to prove how it's not just a syntactic feature, you start talking about syntax?&lt;br /&gt;&lt;br /&gt;What drugs are you on?&lt;br /&gt;&lt;br /&gt;The name overloading is a total syntactic feature. In C, the way you fix your problem is by a totally trivial syntactic change: you call your function "my_connect()".&lt;br /&gt;&lt;br /&gt;Wow. It's like magic. I added three characters, and made your whole reason for the crap that is C++ go away.&lt;br /&gt;&lt;br /&gt;The thing is, the above is a really good example of why C++ is horrible, and why C is so simple.&lt;br /&gt;&lt;br /&gt;Yes, the C solution is really simple. It's so simple that it looks downright stupid. But it's actually so simple that it is smart because quite frankly, it's a lot easier to get confused in C++ code, when the same function name means totally different due to overloading.&lt;br /&gt;&lt;br /&gt;Of course, you're not "supposed" to overload things in confusing ways, but the thing is, just do what C does: just make your function names unique. It's not that hard, and by avoiding the overloading mess, you make it a lot easier to search for (hey look! "grep -w my_connect" just works!), and you avoid ambiguity.&lt;br /&gt;&lt;br /&gt;(Same exact thing goes for your other example: just add a module prefix or have some other trivial naming rules for your functional split-up, and be happy)&lt;br /&gt;&lt;br /&gt;Linus&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/6490576976765246129/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2013/06/c-rants-continued.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6490576976765246129'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6490576976765246129'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2013/06/c-rants-continued.html' title='C++ rants (continued)'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2263562325851678017</id><published>2013-06-05T12:53:00.000-05:00</published><updated>2013-06-05T12:59:51.018-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>C++ rants</title><content type='html'>By&amp;nbsp;&lt;span style="background-color: white; font-family: arial, sans-serif;"&gt;Linus Torvalds:&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://thread.gmane.org/gmane.comp.version-control.git/57643/focus=57918"&gt;On Wed, 5 Sep 2007&lt;/a&gt;, Dmitry Kakurin wrote:&lt;br /&gt;&amp;gt;&lt;br /&gt;&amp;gt; When I first looked at Git source code two things struck me as odd:&lt;br /&gt;&amp;gt;1. Pure C as opposed to C++. No idea why. Please don't talk about portability,&lt;br /&gt;&amp;gt;it's BS.&lt;br /&gt;&lt;br /&gt;*YOU* are full of bullshit.&lt;br /&gt;&lt;br /&gt;C++ is a horrible language. It's made more horrible by the fact that a lot of substandard programmers use it, to the point where it's much much easier to generate total and utter crap with it. Quite frankly, even if the choice of C were to do *nothing* but keep the C++ programmers out, that in itself would be a huge reason to use C.&lt;br /&gt;&lt;br /&gt;In other words: the choice of C is the only sane choice. I know Miles Bader jokingly said "to piss you off", but it's actually true. I've come to the conclusion that any programmer that would prefer the project to be in C++ over C is likely a programmer that I really *would* prefer to piss off, so that he doesn't come and screw up any project I'm involved with.&lt;br /&gt;&lt;br /&gt;C++ leads to really really bad design choices. You invariably start using the "nice" library features of the language like STL and Boost and other total and utter crap, that may "help" you program, but causes:&lt;br /&gt;&lt;br /&gt;&amp;nbsp;- infinite amounts of pain when they don't work (and anybody who tells me that STL and especially Boost are stable and portable is just so full &amp;nbsp;of BS that it's not even funny)&lt;br /&gt;&lt;br /&gt;&amp;nbsp;- inefficient abstracted programming models where two years down the road you notice that some abstraction wasn't very efficient, but now all your code depends on all the nice object models around it, and you cannot fix it without rewriting your app.&lt;br /&gt;&lt;br /&gt;In other words, the only way to do good, efficient, and system-level and portable C++ ends up to limit yourself to all the things that are basically available in C. And limiting your project to C means that people don't screw that up, and also means that you get a lot of programmers that do actually understand low-level issues and don't screw things up with any idiotic "object model" crap.&lt;br /&gt;&lt;br /&gt;So I'm sorry, but for something like git, where efficiency was a primary objective, the "advantages" of C++ is just a huge mistake. The fact that we also piss off people who cannot see that is just a big additional&lt;br /&gt;advantage.&lt;br /&gt;&lt;br /&gt;If you want a VCS that is written in C++, go play with Monotone. Really. They use a "real database". They use "nice object-oriented libraries". They use "nice C++ abstractions". And quite frankly, as a result of all these design decisions that sound so appealing to some CS people, the end result is a horrible and unmaintainable mess.&lt;br /&gt;&lt;br /&gt;But I'm sure you'd like it more than git.&lt;br /&gt;&lt;br /&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt;   &lt;/span&gt;Linus&lt;br /&gt;&lt;br /&gt;=====&lt;br /&gt;&lt;br /&gt;Heath Provost (galvanash@hotmail.com) on 6/5/10 wrote:&lt;br /&gt;&amp;gt;&lt;br /&gt;&amp;gt;As for C++ exceptions - the same thing really applies here.&lt;br /&gt;&amp;gt;They are trying to write explicit code. Exceptions are the&lt;br /&gt;&amp;gt;poster child for implicit magic...&lt;br /&gt;&lt;br /&gt;Yes, exceptions is a good example. The Linux kernel actually does its own exception mechanism, exactly because that way we control what is going on (and do it much more targeted to the actual need in question while giving much better performance and avoiding the crazy unwinding issues).&lt;br /&gt;&lt;br /&gt;And I really do dislike C++. It's a really bad language, in my opinion. It tries to solve all the wrong problems, and does not tackle the right ones. The things C++ "solves" are trivial things, almost purely syntactic extensions to C rather than fixing some true deep problem.&lt;br /&gt;&lt;br /&gt;(The C++ objects, templates and function overloading are all just syntactic sugar. And generally bad syntax at that. And C++ actually makes the C type system actively worse.)&lt;br /&gt;&lt;br /&gt;In non-systems programming, you should almost certainly use a language that offers garbage collection. That will possibly make a real difference in the complexity of your application. The C++ features? Largely useless, and just helps you screw up more.&lt;br /&gt;&lt;br /&gt;And in systems programming, you're simply better off with C. You'll have a way easier time using all the existing code and libraries out there (re-using C++ code? Good luck). Fewer headaches, fewer opportunities to mess up the design and pick some unstable template library.&lt;br /&gt;&lt;br /&gt;So in neither case is C++ likely the right choice.&lt;br /&gt;&lt;br /&gt;Linus&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2263562325851678017/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2013/06/c-rants.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2263562325851678017'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2263562325851678017'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2013/06/c-rants.html' title='C++ rants'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1427439907024316321</id><published>2013-06-04T15:11:00.000-05:00</published><updated>2013-06-04T15:11:12.678-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>excerpt from "effective c++"</title><content type='html'>&amp;nbsp; &amp;nbsp; &lt;br /&gt;Cpp is like some stubborn old man, who always says "i have lots of obscure habits, dealing with it"......&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Lesson 4:&lt;/b&gt; the initialization is different from assignment, as well as their representations respectively. It is better to write the constructor as the form of initialization, named "initialization list", rather than just simply give the variables first assignment.&lt;br /&gt;&lt;br /&gt;To avoid using objects before they're initialized, then, you need to do only three things. First, manually initialize non-member objects of built-in types. Second, use member initialization lists to initialize all parts of an object. Finally, design around the initialization order uncertainty that afflicts non-local static objects defined in separate translation units.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Lesson 7&lt;/b&gt;: declare destructors virtual in polymorphic base classes. C++ specifies that when a derived class object is deleted through a pointer to a base class with a non-virtual destructor, results are undefined. What typically happens at runtime is that the derived part of the object is never destroyed. Eliminating the problem is simple: give the base class a virtual destructor. Then deleting a derived class object will do exactly what you want. It will destroy the entire object, including all its derived class parts.&lt;br /&gt;&lt;br /&gt;The purpose of virtual functions is to allow customization of derived class implementations. Any class with virtual functions should almost certainly have a virtual destructor. The implementation of virtual functions requires that objects carry information that can be used at runtime to determine which virtual functions should be invoked on the object. On the other hand, if a class does not contain virtual functions, that often indicates it is not meant to be used as a base class. When a class is not intended to be a base class, making the destructor virtual is usually a bad idea.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Lesson 9&lt;/b&gt;: Never call virtual functions during construction or destruction. Because during base class construction of a derived class object, the type of the object is that of the base class. Not only do virtual functions resolve to the base class, but the parts of the language using runtime type information (e.g., dynamic_cast (see Item 27) and typeid) treat the object as a base class type.&lt;br /&gt;&lt;br /&gt;The same reasoning applies during destruction. Once a derived class destructor has run, the object's derived class data members assume undefined values, so C++ treats them as if they no longer exist. Upon entry to the base class destructor, the object becomes a base class object, and all parts of C++ treat it that way.&lt;br /&gt;&lt;br /&gt;Since you can't use virtual functions to call down from base classes during construction, you can compensate by having derived classes pass necessary construction information up to base class constructors instead.&lt;br /&gt;&lt;br /&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1427439907024316321/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2013/06/excerpt-from-effective-c.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1427439907024316321'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1427439907024316321'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2013/06/excerpt-from-effective-c.html' title='excerpt from &quot;effective c++&quot;'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8490589909628332274</id><published>2013-05-03T13:26:00.000-05:00</published><updated>2013-05-03T13:26:26.853-05:00</updated><app:control xmlns:app='http://purl.org/atom/app#'><app:draft>yes</app:draft></app:control><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Octave for Mac OSX Lion</title><content type='html'>Really enjoy the way homebrew install/upgrade mac packages.</content><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2013/05/octave-for-mac-osx-lion.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8490589909628332274'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8490589909628332274'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5362544367997670067</id><published>2013-02-19T23:11:00.000-06:00</published><updated>2013-02-19T23:13:51.427-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Set up Racket for Vim and mac Terminal</title><content type='html'>&amp;nbsp; &amp;nbsp; &lt;br /&gt;Racket is fairly great:), though the setting up procedure is kind of twisted. There is a .dmg installation file in the official website, which makes it quite straightforward to install in the Application folder. And, of course, the DrRacket app is awesome when I accidentally put mouse in one of the variables in the code, and then all its dependencies reveal via arrows.&lt;br /&gt;&lt;br /&gt;But I am still used to writing code in vim and testing it in a parallel split window of iterm. I googled the solution, but cannot find a comprehensive one. So, I just list my solution here, which come from either stackoverflow or other persons' blogs.&lt;br /&gt;&lt;br /&gt;1) vim syntax and highlight are &lt;a href="https://github.com/wlangstroth/vim-racket"&gt;out there&lt;/a&gt; ready for use.&lt;br /&gt;&lt;br /&gt;2) Adding one command line to ~/.vimrc&lt;br /&gt;&lt;code&gt;&amp;nbsp;au BufRead,BufNewFile *.rkt set filetype=racket&lt;/code&gt;&lt;br /&gt;3) Adding the path of executable racket to ~/.bach_profile.&lt;br /&gt;&lt;code&gt; export PATH=$PATH:/Applications/Racket\ v5.3.3/bin/&lt;/code&gt;&lt;br /&gt;4) If using the existing file, one should delete the first line of code "#lang racket" if existed.&lt;br /&gt;&lt;br /&gt;5) Optional. Installing rlwrap to make the repl more user friendly.&lt;br /&gt;&lt;br /&gt;That is much of it.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;cheers,</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5362544367997670067/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2013/02/set-up-racket-for-vim-and-mac-terminal.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5362544367997670067'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5362544367997670067'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2013/02/set-up-racket-for-vim-and-mac-terminal.html' title='Set up Racket for Vim and mac Terminal'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8716458736073400023</id><published>2013-02-14T09:03:00.000-06:00</published><updated>2013-02-20T21:13:25.523-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='python. sml'/><title type='text'>1st update in 2013</title><content type='html'>&amp;nbsp; &amp;nbsp; &lt;br /&gt;The issue came from &lt;a href="http://stackoverflow.com/questions/14828945/python-several-callings-of-function-containing-recursions-cause-runtimeerror"&gt;my question in stackoverflow&lt;/a&gt;. Basically, it was a misplaced question, because the reason why my program would hit the "&lt;span class="typ" style="border: 0px; color: #2b91af; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, serif; font-size: 14px; line-height: 18px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;RuntimeError&lt;/span&gt;&lt;span class="pun" style="border: 0px; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, serif; font-size: 14px; line-height: 18px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;:&lt;/span&gt;&lt;span class="pln" style="border: 0px; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, serif; font-size: 14px; line-height: 18px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; maximum recursion depth exceeded&lt;/span&gt;" was that I just passed the sorted array by the first scenario to the second scenario. This caused the second one hit the "worse case" and exceed the "maximum recursion depth". Well... it was embarrassing to admit that I forgot dereferencing the variable...&lt;br /&gt;&lt;br /&gt;But, anyway, the question concerning recursion in Python has been in my head for a while, even since I started learning Scheme. This time, the kind answer below my question shed lights on how to solve this kind of problem. Then I dug a little deeper and find more about tail recursion in Python.&lt;br /&gt;&lt;br /&gt;The following is an example with problematic way to implement a recursion&amp;nbsp;function:&lt;br /&gt;&lt;br /&gt;&lt;pre class="default prettyprint prettyprinted" style="background-color: #eeeeee; border: 0px; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, serif; font-size: 14px; line-height: 18px; margin-bottom: 10px; max-height: 600px; overflow: auto; padding: 5px; vertical-align: baseline; width: auto;"&gt;&lt;code style="border: 0px; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, serif; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&lt;span class="kwd" style="background-color: transparent; border: 0px; color: darkblue; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;def&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; fac&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;(&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;n&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;):&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class="kwd" style="background-color: transparent; border: 0px; color: darkblue; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;return&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; &lt;/span&gt;&lt;span class="lit" style="background-color: transparent; border: 0px; color: maroon; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;1&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; &lt;/span&gt;&lt;span class="kwd" style="background-color: transparent; border: 0px; color: darkblue; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;if&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; n &lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; &lt;/span&gt;&lt;span class="lit" style="background-color: transparent; border: 0px; color: maroon; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;2&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; &lt;/span&gt;&lt;span class="kwd" style="background-color: transparent; border: 0px; color: darkblue; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;else&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; n &lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;*&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; fac&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;(&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;n &lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;-&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; &lt;/span&gt;&lt;span class="lit" style="background-color: transparent; border: 0px; color: maroon; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;1&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;)&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&lt;br /&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; fac&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;(&lt;/span&gt;&lt;span class="lit" style="background-color: transparent; border: 0px; color: maroon; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;3000&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;)&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&amp;gt;&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; &lt;/span&gt;&lt;span class="typ" style="background-color: transparent; border: 0px; color: #2b91af; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;RuntimeError&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;:&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; maximum recursion depth exceeded&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;The right way to do this is to make a local helper function "tail recursive" with the help from anonymous function.&lt;br /&gt;&lt;br /&gt;&lt;pre class="default prettyprint prettyprinted" style="background-color: #eeeeee; border: 0px; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, serif; font-size: 14px; line-height: 18px; margin-bottom: 10px; max-height: 600px; overflow: auto; padding: 5px; vertical-align: baseline; width: auto;"&gt;&lt;code style="border: 0px; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, serif; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&lt;span class="kwd" style="background-color: transparent; border: 0px; color: darkblue; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;def&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; fac&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;(&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;n&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;):&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class="kwd" style="background-color: transparent; border: 0px; color: darkblue; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;def&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; f&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;(&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;n&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;,&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; acc&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;):&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&lt;br /&gt;        &lt;/span&gt;&lt;span class="kwd" style="background-color: transparent; border: 0px; color: darkblue; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;return&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; acc &lt;/span&gt;&lt;span class="kwd" style="background-color: transparent; border: 0px; color: darkblue; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;if&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; n &lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&amp;lt;&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; &lt;/span&gt;&lt;span class="lit" style="background-color: transparent; border: 0px; color: maroon; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;2&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; &lt;/span&gt;&lt;span class="kwd" style="background-color: transparent; border: 0px; color: darkblue; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;else&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; &lt;/span&gt;&lt;span class="kwd" style="background-color: transparent; border: 0px; color: darkblue; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;lambda&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;:&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; f&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;(&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;n &lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;-&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; &lt;/span&gt;&lt;span class="lit" style="background-color: transparent; border: 0px; color: maroon; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;1&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;,&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; acc &lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;*&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; n&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;)&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&lt;br /&gt;&lt;br /&gt;    t &lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;=&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; f&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;(&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;n&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;,&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; &lt;/span&gt;&lt;span class="lit" style="background-color: transparent; border: 0px; color: maroon; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;1&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;)&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class="kwd" style="background-color: transparent; border: 0px; color: darkblue; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;while&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; callable&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;(&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;t&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;):&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&lt;br /&gt;        t &lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;=&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; t&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;()&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class="kwd" style="background-color: transparent; border: 0px; color: darkblue; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;return&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; t&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;br /&gt;And an even elegant&amp;nbsp;way is to use built-in function "reduce":&lt;br /&gt;&lt;br /&gt;&lt;pre class="default prettyprint prettyprinted" style="background-color: #eeeeee; border: 0px; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, serif; font-size: 14px; line-height: 18px; margin-bottom: 10px; max-height: 600px; overflow: auto; padding: 5px; vertical-align: baseline; width: auto;"&gt;&lt;code style="border: 0px; font-family: Consolas, Menlo, Monaco, 'Lucida Console', 'Liberation Mono', 'DejaVu Sans Mono', 'Bitstream Vera Sans Mono', 'Courier New', monospace, serif; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&lt;span class="kwd" style="background-color: transparent; border: 0px; color: darkblue; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;def&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; fac3&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;(&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;n&lt;/span&gt;&lt;span class="pun" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;):&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;&lt;br /&gt;    &lt;/span&gt;&lt;span class="kwd" style="background-color: transparent; border: 0px; color: darkblue; margin: 0px; padding: 0px; vertical-align: baseline;"&gt;return&lt;/span&gt;&lt;span class="pln" style="background-color: transparent; border: 0px; margin: 0px; padding: 0px; vertical-align: baseline;"&gt; reduce(lambda x,y:x*y, xrange(1,n))&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;The latter two could deal with any input number. Tada~&lt;br /&gt;&lt;br /&gt;A little extended reading about this topic:&lt;br /&gt;&lt;a href="http://python-history.blogspot.com/2009/04/origins-of-pythons-functional-features.html"&gt;Origins of Python's "Functional" Features&lt;/a&gt;&lt;br /&gt;&lt;a href="http://neopythonic.blogspot.com/2009/04/tail-recursion-elimination.html"&gt;Tail Recursion Elimination&lt;/a&gt;&lt;br /&gt;&lt;a href="http://metapython.blogspot.com/2010/11/tail-recursion-elimination-in-python.html"&gt;Tail Recursion Elimination in Python&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div&gt;Besides, studying Standard ML does give me much much more insights into both programming itself and programming in Python. Except the attractive tail recursion, Python has quite a few amazing features of functional programming. &amp;nbsp;In retrospect, now I appreciate more about what was listed in the "&lt;a href="http://stackoverflow.com/questions/2573135/python-progression-path-from-apprentice-to-guru"&gt;progression path&lt;/a&gt;", and of course, cannot wait to progress to Haskell.&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;cheers,</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8716458736073400023/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2013/02/1st-update-in-2013.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8716458736073400023'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8716458736073400023'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2013/02/1st-update-in-2013.html' title='1st update in 2013'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8693934093504326923</id><published>2012-10-04T22:07:00.001-05:00</published><updated>2012-10-04T22:07:30.185-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Install opencv in mac osx</title><content type='html'>The most straightforward way is via homebrew.&lt;br /&gt;&lt;code&gt;brew update &lt;br /&gt;sudo brew install opencv&lt;/code&gt;&lt;br /&gt;Then, all of the dependencies will be install with opencv. The reason to use "sodu" is because there will be twice "brew link" used in the process which could not link certain libraries without permission.&lt;br /&gt;&lt;br /&gt;Finally, the brew gave a wrong file to update. Instead of updating .profile, the correct destination should be .bash_profile. Add this line:&lt;br /&gt;&lt;code&gt;export PYTHONPATH=/usr/local/lib/python2.7/site-packages/:$PYTHONPATH&amp;lt;\code&amp;gt;&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;That is it.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;cheers,</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8693934093504326923/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2012/10/install-opencv-in-mac-osx.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8693934093504326923'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8693934093504326923'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2012/10/install-opencv-in-mac-osx.html' title='Install opencv in mac osx'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1240360845920324220</id><published>2012-09-17T15:46:00.001-05:00</published><updated>2012-09-17T15:46:17.104-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>missing you</title><content type='html'>&lt;br /&gt;小葛儿转眼安排好纽约面试就登飞机了。因为GPS的缘故，在机场周围转了好几圈，结果弄的再见都匆匆忙忙。送完她回到寝室——是的，没有了她，这里还是叫寝室合适——空荡荡的，安安静静。一分钟都不想多停留，背着书包就去了实验室。&lt;br /&gt;&lt;br /&gt;晚上也不想回去，因为想到又是空空的房间就不自在。&lt;br /&gt;&lt;br /&gt;一个人在这里。忽然一下安静了。多出了好多时间来想你，似乎一切记忆瞬间无比清晰，触手可及。你的肩膀软软的，抱在怀里的时候，还要告诉自己小心别把你弄疼了。你哭的时候，撅着嘴，鼻子里些许呜哝呜哝的声音，眼泪扑簌扑簌就落下来了。你笑的时候，眼睛眉毛嘴角都弯弯的，咯咯咯的，清脆悦耳。每到这个样的时候，我都在反问自己，为什么要和你吵架啊，有什么气好生呢。&lt;br /&gt;&lt;br /&gt;可无论怎么吵架，我都还是爱你的，比每一次吵架前还要爱你，比每一次生气之前还要更想和你在一起。有时候会想，也许我太把你说的每句话当回事儿了，才会又好多的弄巧成拙。但翻回头来，我仍就欠你好多在一起的时光。&lt;br /&gt;&lt;br /&gt;小葛儿啊。你的一举一动，一颦一笑，我都记在心里呢。欠你的那些时光，我也一定要都好好还你。快回来吧。有你在的地方，我就认为是家了。&lt;br /&gt;&lt;br /&gt;我想你。&lt;br /&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1240360845920324220/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2012/09/missing-you_17.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1240360845920324220'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1240360845920324220'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2012/09/missing-you_17.html' title='missing you'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5223204662503465303</id><published>2012-09-14T17:23:00.000-05:00</published><updated>2012-09-16T00:31:06.141-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>My August and a new beginning</title><content type='html'>&lt;br /&gt;八月份，是个开始的月份，来到了一个小屯子里，没有公交，没有市集，只是明晃晃的阳光，会照的人发晕。当真是个修行的地方。有关这里，想法都有关不要虚度光阴，要快些离开这里。&lt;br /&gt;&lt;br /&gt;月中，和大瀾、乌龟、聪哥、温总一起去了黄石，西雅图，以及波特兰。这次旅行，如同酿酒发酵一般，越到后来越是留恋。&lt;br /&gt;&lt;br /&gt;刚到Bozman的时候，大瀾看着大山都激动的手舞足蹈。然后进入黄石以后，各种臭泉以及异常干燥的气候弄的大家都越发烦躁起来。大瀾背着手，像居委会大妈一样视察颜色异常的泉水；也会二劲儿大发，摘下花来给每个人带上，拍个大头贴。大乌龟在走trail时候，被路上唯一的一个钉子扎破了后背。甩着舌头奔跑的牦牛，成群在树林里休息的大鹿，elk or moose。在大峡谷的晚上，八月间，大家竟然都被冻醒了，我迷迷糊糊间，看着大瀾给我盖被子，感动了好久。&lt;br /&gt;&lt;br /&gt;三日后的大提顿满是惊喜。前一天晚上大瀾肚子疼的没吃好晚饭，扶她回房间后，我连吃饭的心思都没有了，更不要说后一天的提顿之旅。第二天早晨，大家也是有懒床的，有睡回笼觉的。只有唯一想去的温总，一肚子郁闷说不出口。而且刚启程，就发现没带门票，又折回。我开着车都能想到留守的聪哥似笑非笑的的得意样子。最终正午才进入大提顿，就遇见了满眼惊喜。厚厚的草甸，飘满小花的湖泊。大瀾拄着两人多长的树枝照相。在Jackson Lake租船的时候，旁边的小孩儿们兴奋的举着水瓶，炫耀捉住的水蛭。大瀾在船上，看不出任何身体异样，兴奋的拍水，尝试各种怪异的划船方法，几次都殃及到了坐在后面的我。但不管怎样，我俩划起船来，左右开工，还喊着号子，小船乘风破浪的指那儿打哪儿，相比而言，乌龟和温总的另一艘船大多就是在原地打转了。上岸之后，我们还在岸边的饭馆儿吃了进黄石以来最丰盛的一顿饭。在Jenny Lake，看着一湖清水，我和温总都脱到只剩内裤，跳进去玩水，结果上岸时候悲剧了，小石子们就像是锥子一样，走向岸边每一步都钻心的疼。。。大瀾在岸边，一边叹息着想游泳啊想游泳，一边带着乌龟和温总的俩单反，不断练习摄影技术。傍晚看日落，所有的山峰都一览无余，感慨自然壮丽。然后在把车开到山间处，再看一遍日落，再感慨一遍。晚上回程，看到了过马路的小狐狸，也许是被车灯照迷糊了，久久不离去，真想把它抱回来养。&lt;br /&gt;&lt;br /&gt;晚上回到酒店，又出门，和大瀾并排躺在码头上，我第一次清楚看到了银河，像棉絮一样一团一团的，还看到了流星。拉着大瀾的手，看着奇妙的景色，时间就静止了。&lt;br /&gt;&lt;br /&gt;到西雅图的第一天晚上，还有更多的惊喜。从倾斜的街道看到大海，身旁小酒馆门庭若市。城市真好。也是在这个时候，我们发现Yelp的预算对我们不适用。$的我们可以吃成$$$，$$的我们能吃成$$$$的。几个难民坐在日式料理最靠窗的桌子，烤肉、寿司、炒饭、拌面...，我们狼吞虎咽的样子，就是这家店最好的活体广告了。酒馆、小肥羊、牛逼的图书馆、大麻公园、面海公寓、满是鲜花的阳台，这就是我对西雅图的印象。&lt;br /&gt;&lt;br /&gt;去波特兰是因为Grimm。精致的block，友好的大瀾校友，以及玫瑰花园。我们在市区停留只有半日。然后就是一个小时的公车，从二十几街坐到了245街。。作为这座庄园里唯一一队乘坐公车前来的客人，我们受到了主人的热情接待，安排我们住宿在一个墙上画着这个庄园某位109岁员工的房间里。庄园的晚饭不错，温总一时兴起喝了六七杯或者十来杯红酒，结果把大乌龟给喝醉了，嚷嚷着要脱衣服去游泳，又把聪哥紧张的如同被非礼了一样。。晚饭后我们还视察了庄园的绿化状况，并亲切会见了酒馆里的各种奇怪大叔大妈。&lt;br /&gt;&lt;br /&gt;转眼相聚就要分离，回家的回家，旅行的继续上路，确实舍不得另外三位。昨天在豆瓣上读到马克吐温的一句话，“好友、好书，不轻易判断是非，这就是理想生活”。一路上颠簸，没读什么书，这生活却以足以让我留恋了。&lt;br /&gt;&lt;br /&gt;在这里，开始学习工作快满一月了。老板人不错，几次问他有关研究的问题，他都很耐心的回答，给的方法也足够有操作性。今天一个师兄作报告被骂，也从另一个侧面证明老板足够聪明，不能唬弄。组里大家关系也很融洽，实验室、图书馆，资源也算充裕。新车也用的顺手。还是开始时的那个想法，不要浪费时间，早些离开这里。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5223204662503465303/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2012/09/my-august-and-new-beginning.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5223204662503465303'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5223204662503465303'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2012/09/my-august-and-new-beginning.html' title='My August and a new beginning'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4250356129346140798</id><published>2012-06-12T04:04:00.000-05:00</published><updated>2012-06-12T04:04:20.770-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Valve recruiting sidenotes</title><content type='html'>&amp;nbsp; &amp;nbsp;&amp;nbsp; &lt;br /&gt;• Would I want this person to be my boss?&lt;br /&gt;• Would I learn a significant amount from him or her? &lt;br /&gt;• What if this person went to work for our competition? &lt;br /&gt;&lt;br /&gt;Across the board, we value highly collaborative people. That means people who are skilled in all the things that are integral to high-bandwidth collaboration—people who can deconstruct problems on the fly, and talk to others as they do so, simultaneously being inventive, iterative, creative, talkative, and reactive. These things actually matter far more than deep domain-specific knowledge or highly developed skills in narrow areas. This is why we’ll often pass on candidates who, narrowly defined, are the “best” at their chosen discipline.&lt;br /&gt;&lt;br /&gt;We value “T-shaped” people. That is, people who are both generalists (highly skilled at a broad set of valuable things—the top of the T) and also experts (among the best in their field within a narrow discipline—the vertical leg of the T).&lt;br /&gt;&lt;br /&gt;This recipe is important for success at Valve. We often have to pass on people who are very strong generalists without expertise, or vice versa. An expert who is too narrow has difficulty collaborating. A generalist who doesn’t go deep enough in a single area ends up on the margins, not really contributing as an individual.&lt;br /&gt;&lt;br /&gt;reference: &lt;a href="http://www.valvesoftware.com/company/Valve_Handbook_LowRes.pdf"&gt;Valve handbook&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4250356129346140798/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2012/06/valve-recruiting-sidenotes.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4250356129346140798'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4250356129346140798'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2012/06/valve-recruiting-sidenotes.html' title='Valve recruiting sidenotes'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-9027384170815600469</id><published>2012-06-04T00:38:00.000-05:00</published><updated>2012-07-12T11:49:05.267-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>General posts about Lisp</title><content type='html'>&amp;nbsp; &amp;nbsp;&amp;nbsp; &lt;br /&gt;Paul Graham: &lt;a href="http://lib.store.yahoo.net/lib/paulgraham/jmc.ps"&gt;The Roots of Lisp (ps)&lt;/a&gt;, &lt;a href="http://www.paulgraham.com/diff.html"&gt;What Made Lisp Different&lt;/a&gt; (&lt;a href="http://www.ruanyifeng.com/blog/2010/10/why_lisp_is_superior.html"&gt;Chinese translation&lt;/a&gt;), and his &lt;a href="http://www.paulgraham.com/lisp.html"&gt;collection&lt;/a&gt;.&lt;br /&gt;&lt;a href="http://www.winestockwebdesign.com/Essays/Lisp_Curse.html"&gt;The Lisp Curse&lt;/a&gt; by Rudolf Winestock &lt;br /&gt;&lt;a href="http://lists.warhead.org.uk/pipermail/iwe/2005-July/000130.html"&gt;Why Lisp macros are cool, a Perl perspective &lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.defmacro.org/ramblings/lisp.html"&gt;The Nature of Lisp&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.dreamsongs.com/Files/LispGoodNewsBadNews.pdf"&gt;Lisp: Good News, Bad News, How to Win Big (pdf)&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.lambdassociates.org/blog/bipolar.htm%20"&gt;The Bipolar Lisp Programmer&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.informatics.sussex.ac.uk/research/groups/nlp/gazdar/nlp-in-lisp/index.html%20"&gt;Natural Language Processing in Lisp (book)&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.cs.rpi.edu/academics/courses/fall05/ai/scheme/tips.html"&gt;Tips for using Scheme and debugging your code&lt;/a&gt;&lt;br /&gt;&lt;a href="http://coolshell.cn/articles/7526.html"&gt;Lisp的永恒之道&lt;/a&gt; (Chinese)&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;A &lt;a href="http://itasoftware.com/careers/work-at-ita/ita-engineering.html?catid=#"&gt;great explanation&lt;/a&gt; from ITA Software about why and how to use different languages, including Lisp (CL), Python, Java, and C/C++. &lt;br /&gt;&lt;blockquote class="tr_bq"&gt;Lisp is a programmable programming language, and one of the few languages that can be used for a wide range of applications. At ITA we have projects with vastly different focus, and it's precisely Lisp's versatility that makes it so useful to us. Lisp allows us to define a wide variety of abstractions to manage the complexity, and at the same time we get the speed we want - and our customers demand.&lt;br /&gt;&lt;br /&gt;While most of ITA's algorithm-intensive code is implemented in high-level languages like Lisp, we use C/C++ to provide system support to our Lisp-based applications where the Common Lisp runtime support is inadequate. For instance, we represent large static datasets as densely packed arrays stored in files. We use C++ to make the mmap() calls and fetch pointers into these mappings for Lisp to access.&lt;br /&gt;&lt;br /&gt;Once in a while, we have had a hard time fooling the Lisp compiler into generating sufficiently fast machine code for a given function. When that happens, we can usually just rewrite the function in C++ and call it from Lisp.&lt;/blockquote&gt;and... &lt;a href="http://www.paulgraham.com/carl.html"&gt;quote from an email&lt;/a&gt; of Carl de Marcken from Paul: &lt;br /&gt;&lt;blockquote class="tr_bq"&gt;A lot of our Lisp is designed to compile into very efficient assembly. We make a lot of use of Lisp's macro capabilities, but shy away from many other Lisp features like closures, generic functions, complex sequence functions and garbage collection. We're doing an incredible amount of computation - getting 10 seconds on a modern machine is an incredible gift - but if we're sloppy at all 10 seconds can turn into ten minutes, not adequate for a travel agent or web site. We disassemble most every Lisp function looking for inefficiencies and have had both CMUCL and Franz enhanced to compile our code better.&lt;br /&gt;&lt;br /&gt;We've had very little trouble getting non-Lisp programmers to read and understand and extend our Lisp code. The only real problem is that the training most programmers have in Lisp has taught them to code very inefficiently, without paying any attention to the compiler. Of course, with things like STL and Java, I think programmers of other languages are also becoming pretty ignorant.&lt;/blockquote&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/9027384170815600469/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2012/06/general-posts-about-lisp.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/9027384170815600469'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/9027384170815600469'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2012/06/general-posts-about-lisp.html' title='General posts about Lisp'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4116090732305128819</id><published>2012-05-16T09:45:00.000-05:00</published><updated>2012-05-16T09:45:17.178-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>HD and SICP</title><content type='html'>&amp;nbsp; &amp;nbsp;&amp;nbsp; &lt;br /&gt;Humming Identification. &lt;br /&gt;&lt;br /&gt;已然经历了两次较大的重建，现在的中段程序应该算是稳定了，前段程序接近黔驴技穷了，后段程序最后一次大修改后还在服务器里面跑着。出结果之后再用一两天时间整理，然后再看看清唱部分的阈值应该如何处理。不出意外的话，这就接近世界先进水平了:)&lt;br /&gt;&lt;br /&gt;现在回头看来，其实真正值得研究的部分还是在最初的参数提取。SIFT里面对于图像的各种锥形不变、边框加深、棱角过滤，对于音频信号都是不适用的。而语音信号的频谱重复或者音乐信号的长时重复在哼唱识别中又是不适用的。所以现在只能使用较为原始的 local maximum cascade filtering。若是频谱图能如图像般的直观，有些经验总结的东西在里面，就好了。&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;SICP&lt;br /&gt;&lt;br /&gt;思考过一段时间的结果，&lt;a href="http://coolshell.cn/articles/6639.html"&gt;因为有了电据就少用到电钻&lt;/a&gt;，于是熟练了Py也就先放放ruby了。转过身来硬着头皮读这本书。而第一天读过前言，我就知道这决不会是个令我后悔的决定。无数人的推荐，自然是有其中道理的。而把读过的几本经典书籍横向比较，会发现它们都会刻意避开很多fancy的概念，着力强调着那些在设计程序过程中永恒不变的东西。K&amp;amp;R把C的很多基本库函数都重建了一遍，而SICP更是从加减乘除开始重构。&lt;br /&gt;&lt;br /&gt;开始读书之前，我也刻意找了一下CL和Scheme的对比。记得有个人说，如果想用Lisp做项目，CL更合适；想体会编程的乐趣，Scheme更合适，只是，它的核实在是太简单了。几个月看下来，其对于Scheme的评价当真实字字珠玑。这是一个无比强大的语言，data abstraction &amp;amp; procedure abstraction，之后再抹去两者的差别，都只是当作object处理。看到这里，我会有错觉，认为自己都可以来设计Clojure了，这简直就是顺理成章的事情！tail recursion，比循环更加直观易懂，而更牛逼的是这竟然不会按照stack的模式迭代后增加内存的占用。至于enclosure和lambda calculus，在Python里面也有借鉴，但是我是直到这里才真正学会了如何使用它们⋯⋯当然，我很清楚这些词汇推砌起来的仍然仅仅是些皮毛。里面很多在程序设计时的考虑，才是更需要我好好体会的。&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;BTW, 今天的时间累计到2800了~&lt;br /&gt;&lt;br /&gt;cheers, &lt;br /&gt;&lt;br /&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4116090732305128819/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2012/05/hd-and-sicp.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4116090732305128819'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4116090732305128819'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2012/05/hd-and-sicp.html' title='HD and SICP'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8385647733923782205</id><published>2012-04-10T04:23:00.000-05:00</published><updated>2012-04-11T03:16:02.329-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Install MIT/Scheme with Vim</title><content type='html'>&amp;nbsp; &amp;nbsp;&amp;nbsp; &lt;br /&gt;After wondering around for a while, I finally found this was quite foolproof... &lt;br /&gt;&lt;br /&gt;It could be divided into five steps:&lt;br /&gt;1. $ &lt;i&gt;brew install mit-scheme&lt;/i&gt;. (Its version is usually a little bit older than the latest &lt;a href="http://www.gnu.org/software/mit-scheme/"&gt;MIT/GNU Scheme&lt;/a&gt;)&lt;br /&gt;2. Install &lt;a href="http://www.gnu.org/software/screen/"&gt;GNU screen&lt;/a&gt; if it was not installed before.&lt;br /&gt;3. Install &lt;a href="http://www.vim.org/scripts/script.php?script_id=2711"&gt;Screen Vim plug-in&lt;/a&gt; according the steps in that webpage.&lt;br /&gt;4. $ &lt;i&gt;vim ~/.vimrc&lt;/i&gt;&lt;br /&gt;&lt;code&gt;"For screen.vim send block&lt;br /&gt;"to SendScreen function&lt;br /&gt;"(eg Scheme interpreter)&lt;br /&gt;vmap &lt;c-c&gt;&lt;c-c&gt; :ScreenSend&lt;cr&gt;&lt;br /&gt;nmap &lt;c-c&gt;&lt;c-c&gt; vip&lt;c-c&gt;&lt;c-c&gt;&lt;/c-c&gt;&lt;/c-c&gt;&lt;/c-c&gt;&lt;/c-c&gt;&lt;/cr&gt;&lt;/c-c&gt;&lt;/c-c&gt;&lt;/code&gt;&lt;br /&gt;5. Launch Vim and write ":ScreenShell mit-scheme". It is all set for the fun:)&lt;br /&gt;&lt;br /&gt;References: &lt;a href="http://www.ktaylor.name/vim/"&gt;[1]&lt;/a&gt;, &lt;a href="http://www.uponmyshoulder.com/blog/2011/so-you-want-to-do-the-sicp/"&gt;[2]&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;cheers,</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8385647733923782205/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2012/04/install-mitscheme-with-vim.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8385647733923782205'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8385647733923782205'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2012/04/install-mitscheme-with-vim.html' title='Install MIT/Scheme with Vim'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5248391699893270823</id><published>2012-03-16T01:04:00.000-05:00</published><updated>2012-03-16T01:04:19.215-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Reading digest 03/16/12</title><content type='html'>&lt;b&gt;Smart and Gets things done&lt;/b&gt;&lt;br /&gt;What should you look for during the open-ended questions?&lt;br /&gt;One: look for passion. Smart people are passionate about the projects they work on. They get very excited talking about the subject. They talk quickly and get animated. There are far too many people around who can work on something and not really care one way or the other. It’s hard to get people like this motivated about anything.&lt;br /&gt;Two: good candidates are careful to explain things well, at whatever level. You don’t want to hire some one, basically, because he is not smart enough to comprehend what it takes to make other people understand their ideas.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;No Designer's Design Book&lt;/b&gt;&lt;br /&gt;When several items are in close proximity to each other, they become one visual unit rather than several separate units. As in life, the proximity, or the closeness, implies a relationship.&lt;br /&gt;By grouping similar elements into one unit, several things instantly happen: The page becomes more organized. You understand where to begin reading the message, and you know when you are finished. And the “white space” (the space around the letters) automatically becomes more organized as well.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5248391699893270823/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2012/03/reading-digest-031612.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5248391699893270823'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5248391699893270823'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2012/03/reading-digest-031612.html' title='Reading digest 03/16/12'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7433919938997453456</id><published>2012-01-24T21:32:00.001-06:00</published><updated>2012-01-24T21:34:57.089-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Reading digest 01/24/2012</title><content type='html'>&amp;nbsp; &amp;nbsp;&amp;nbsp; &lt;br /&gt;&lt;a href="http://reprog.wordpress.com/2012/01/21/my-plan-for-2012-do-things-that-children-do/"&gt;My plan for 2012: do things that children do&lt;/a&gt;&lt;br /&gt;Learn things&lt;br /&gt;Play sports&lt;br /&gt;Sing and play instruments&lt;br /&gt;Draw and paint&lt;br /&gt;Write stories&lt;br /&gt;-- I have to say it is a better "next year resolution" than &lt;a href="http://creasywuqiong.blogspot.com/2012/01/summary-of-2011-and-resolution-of-2012.html"&gt;what I have made&lt;/a&gt;. The explanation is clear and straightforward. So, I should add them to my resolutions!&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.jamesaltucher.com/2011/07/life-tastes-best-when-you-eat-what-you-kill/"&gt;Life Tastes Best When You Eat What You Kill&lt;/a&gt;&lt;br /&gt;Don’t depend on one boss, buyer for your company, product, service you offer, etc. Diversify everything you can.&lt;br /&gt;Become an expert.&lt;br /&gt;Connect people.&lt;br /&gt;Give ideas for free.&lt;br /&gt;Always work on your exit. No matter where you are: a job, a startup, your startup, writing a column, working at Mcdonalds, always diversify your possible exits and begin immediately working on them. You don’t have to exit tomorrow, but never forget that you can get that email tomorrow that says you have to clean out your desk by Saturday.&lt;br /&gt;Never say a bad word about anyone.&lt;br /&gt;Don’t care what people think.&lt;br /&gt;Create your luck.&lt;br /&gt;Take responsibility for all failures.&lt;br /&gt;Honesty. If you don’t ask for what you want, chances are you won’t get it. If you don’t say what you believe, you’ll never stand out from the 99% of people out there who hide the truth about themselves and their desires. If you don’t stand up and say or show how special you are, nobody will ever think you are special. Nobody is out there advocating for you. Honesty about what you feel, believe, know, think, want, will make you a multi-dimensional being in a flatland world.&lt;br /&gt;Patience.让子弹飞一会儿。&lt;br /&gt;-- The general guidelines might be too vague to follow or helpful to summarize some vague thoughts in mind. This one is much closer to the latter category.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7433919938997453456/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2012/01/reading-digest-01242012.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7433919938997453456'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7433919938997453456'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2012/01/reading-digest-01242012.html' title='Reading digest 01/24/2012'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4725013241931794609</id><published>2012-01-14T13:46:00.005-06:00</published><updated>2012-01-24T21:34:38.968-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>Summary of 2011 and Resolution of 2012</title><content type='html'>&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp; &lt;br /&gt;这是一篇想了很久的日志。过去的一年，发生了很多叵测的事情，我学到了很多，也付出了不小的代价。接下来的这一年，也许会有很多重要的事情发生。无论如何，对于经历的2011，把感想趁着鲜活的时候写下来，也算是对自己的一个交代。&lt;br /&gt;&lt;br /&gt;@implementation 2011_Summary&lt;br /&gt;&lt;br /&gt;1. 诚实。这是上一年最大的教训。无论是在学习、研究上，或是与陌生人的交往，还是对待自己最亲密的人，诚实永远是唯一正确的选择。我了解，它的反面是一个多么贬义的行为。但总会有一些时候，要么是觉得自己已经付出了很多努力，所以取些捷径也没什么大过错；要么就是压根儿的应激反应，连自己都无法解释。事后回头看的时候，才会感叹自己的价值观有多么脆弱。但自打意识到之后，再这样任由其发展下去，就太说不过去了。上一年我已经得到了足够多的教训，能够让我在每次自省的时候都深深训诫自己，去努力做到这个简单的品质。&lt;br /&gt;&lt;br /&gt;2. 编程。这是上一年最大的收获。再往之前岁月里寻找，所有的技能、知识都是和学业紧紧连成一体的，于是，就都是些必须去做却又苦逼的差事。也许是从一零年开始的，编程的乐趣逐渐让和它相关的知识自成体系，从其它知识里分离了出来。首先，编程和学习语言一样，可以清晰感觉到点滴的积累。昨天又会了一个新的框架，今天又学了一个新的trick，于是重写代码的程序效率提高了500％。其次，网络上丰富的社区，把全世界有相同爱好的聪明头脑都集中在了一起，类似于之前小学初中，我到了一个足球传统学校，和一群踢球牛逼的人一起，于是也开始爱上了足球。两者的区别在于，踢球好的人往往不爱带踢球不好的，但技术社区里，包容性强了很多。当然，根本差别是，这里没有任何地域限制。和聪明人交流，总是一件愉快的事情。提问、回答，各种限时或不限时的项目，奇怪的题目集锦，可以玩儿的不亦乐乎。当然，最重要的原因是，这件事情，可以让自己不断提高，并且帮助别人获得些便利，若是足够努力，还能让世界变得更好。这是一个多么牛逼的事情啊！&lt;br /&gt;&lt;br /&gt;之前我的编程经验都是和硬件相关的，一个程序两条线索推进，其间的区别是浮点计算和定点计算⋯⋯我并非说之前的C代码都不值得一提。相反，从算法的浮点实现，到定点应用限制，其间的各种考量，甚至是算法重新设计，所需知识和工作量都是巨大的。并且，我也基本同意 &lt;a href="http://www.joelonsoftware.com/articles/ThePerilsofJavaSchools.html"&gt;Joel Spolsky&lt;/a&gt;&amp;nbsp;的观点，学习这种底层代码对于程序员的基本功至关重要。但毕竟，C太原始了。几乎所有的模块都需要自己来搭，就算考虑到reusability这仍然是一件很蛋疼的事情。有语义更人性化的Python，有模块化更好的Java，有更有趣的Obj-C，若是想挑战一下理解力，还可以用Lisp。有句话已经忘记了出处，大意是讲，没有最好的编程语言，只有对于某项工作最合适的语言。这是没错的。打开自己的眼界，学习更多的语言，也就有了更多的乐趣。⋯⋯当然，若是回答问题“你最喜欢哪种编程语言？”我还是会说C，我喜欢那种掌控所有细节的感觉，是为了最大限度的榨取硬件计算能力，也是因为程序没有任何的暗箱，似乎心里能安然很多。&lt;br /&gt;&lt;br /&gt;3. 阅读。算上各种教材，去年总共读了大约20本书，其中精读的十本左右，都是大部头。收获还是不错的。还有另一个阅读源就是google reader，订阅的东西从一零年的google group，换到了hacker news，吵架还是有，只是方式方法更加多元化了。比如C语言该换还是不该换，Java好还是不好，Node.js是不是癌细胞，以及.Net程序员到底是不是傻逼⋯⋯各种大坑，于是各路英豪就各种姿势往里面跳。&lt;br /&gt;&lt;br /&gt;今年效率最高的时候是读man-month，因为课程演讲需要，所以总共花了一天的时间就看完了，再加上摘抄笔记和整理的幻灯片，一整天下来感觉学到了不少。而收获最多的两本书是，K&amp;amp;R C 和 CLRS。两本书很多章节都看了两遍。所谓经典教材大概就是如此了，好像每字每句都经过了斟酌，复杂的理念都能表述的很有条理；而因为所涉及的基础知识涵盖太广但书籍篇幅有限，作者只好把一些次重点的东西用小字写下来，或者一笔带过，这也就是需要反复翻看的原因了。此外，阅读积累的质变似乎是在一零年末开始的，不在抵触大部头的英文著作了。而且读下来再翻回头看译著，发现译文里漏洞百出，而且很多晦涩的中文名词，反正也是生僻词，还不如原来英文解释的顺畅。&lt;br /&gt;&lt;br /&gt;4. 水果。乔布斯去世是一一年的一件大事情，而五月份我买了MBP，算是正式成为一名水果消费者了。之前，有不同的人和我讲过各种苹果的坏话，总之两个词，就是装逼和不兼容。前者我倒是无所谓，所谓装逼或者牛逼，冷暖自知，而且在努力牛逼的过程中，装装也未尝不可^_^。而之前不同人讲的不兼容倒是真的唬过我一段时间。之后用了很久的ubuntu，想来这个linux都用的欢喜，来个unix加小清晰界面的Mac OS也没啥。然后就买了。现在来看，未来很长的一段时间里，除非苹果倒闭了，否则我几乎没有可能把主要工作平台换回windows。所有的工作都可以顺利完成，没有任何兼容问题，方便的购买正版软件，程序可以方便的迭代升级，加之这个平台的软件用起来大都十分顺手，而且自己最近还在鼓捣Obj-C。这个操纵系统的转换是成功的。PS. 这个系统是否安全，似乎是另一个永恒的争论话题。而对于所有惧怕这个系统不安全的人们，可以自修一下计算机操作系统这门课，或者Google一下win和unix的差别，以及如何保护系统安全，或者读一下&lt;a href="http://mac.appstorm.net/roundups/utilities-roundups/5-mac-antivirus-tools-for-os-x-and-do-we-need-them/"&gt;这篇不错的文章&lt;/a&gt;。&lt;br /&gt;&lt;br /&gt;而至于乔布斯，使用了他创造的产品和平台之后，他去世的消息也更让我感到悲伤。从产品线到操作系统到平台，所有的一切就好像一盘缜密围棋，在他去世之后回溯的审视，所能感受的除了惊叹也就只有悲伤了。有关他的文章很多，但最好的一篇，没有之一，是他亲生姐姐写的&lt;a href="http://www.nytimes.com/2011/10/30/opinion/mona-simpsons-eulogy-for-steve-jobs.html?_r=2&amp;amp;pagewanted=all"&gt;悼词&lt;/a&gt;。每当自己想倦怠的时候，看一看，总会或激励或愧疚，重新开始好好做自己的事情。&lt;br /&gt;&lt;br /&gt;5. Instapaper。Marco Arment写的牛逼应用。我是他博客的忠实读者，也喜爱这个应用。其实我决定使用水果系统，他博客里一系列文章也是功不可没。他还是Tumblr的创始人，以及苹果的超级粉丝。所以当他提到Android以及Windows Phone时候那种戏谑的语气，很是有趣。而更令我着迷的，是他所处的状态，专职做一件自己喜爱的事情，如同一个艺术家一样不断更新完善自己的创作，这个创作受到很多人的喜爱、帮助别人更好的获取资讯，并且自己依靠这个创作获得收入，活的还不错。很多时候我会想，就算自己的爱好不能达到“专职”以及”依靠创作获得收入“，但起码可以努力做到其余的部分。换句话讲，我找到了自己的爱好，尽管不确定能不能用它获得博士学位，或是以它营生，但我确定这是件有意义的事情，所以我也会一直坚持坐下去的。&lt;br /&gt;&lt;br /&gt;6. 10000小时。之前似乎在别的地方也看到过，但已经找不到出处了，也没想过太多，直到读了&lt;a href="http://www.ruanyifeng.com/blog/2011/04/the_dan_plan.html"&gt;阮一峰的日志&lt;/a&gt;，我才认真思考这个数字的意义。当然，也有其他人计算自己的工作时间，算出来每年能工作2160小时，这样五年能有超过一万小时的积累。但具体看看计算方法，似乎从坐在写字台前开始，连回复工作邮件的时间都算上了，而且取样一天，然后乘以360天/年。这个就有点儿扯了。想要成为乔丹、盖茨或者类似的人，应该要更困难些地吧？比如莫扎特成名前有超过10000的训练，不能把他擦钢琴的时间算在内，乔丹的训练时间应该也不包括他在球场边和拉拉队员们扯淡的时间。训练就是训练，可以包括冥想、包括查找资料、包括 trail and error，包括一切和提高与之相关能力的活动时间。但也仅限于此。我一直在跟着&lt;a href="http://www.thedanplan.com/"&gt;这个家伙&lt;/a&gt;的网站，现在他已经领先我将近200小时了，希望我能在不久的将来追回来。&lt;br /&gt;&lt;br /&gt;6. 读库以及独立书店。这个和我自己似乎没有什么关系，但有些想法，也记在这里好了。光合作用和第三极，独立书店的倒闭引得一篇哀鸣。也许我只是以站着说话不腰疼的态度审视，可我真是觉得它们只是市场运转的一个结果而已。第三极书籍分类十分混乱，光合作用开店布局不合理，内设咖啡馆不伦不类，书籍既不全又没有特色⋯⋯总之，作为消费者，很难看出来它们的拥有者在真正用心的经营。等到被淘汰的时候在对着媒体感叹生态圈的恶劣？也成，算是对投资方的一个交代。&lt;br /&gt;&lt;br /&gt;和它们对比的，是读库，店小六的用心给我很深刻的印象。嗯，我觉得似乎应该叫六哥或者六叔了⋯⋯订阅读库的一年里，精美的书签，或是特别的环保袋，或者几本赠阅的香港杂志，随时可能随着书籍一同收到。如果有疑问，发邮件有问必答，短信也回复。想想读库的订阅群体数量，而编者只有一人，这样的效率着实令人钦佩。另外，读库和连锁的光合作用或是曾经占有一座大楼的第三极，应该是生活在一个生态圈里，唯一的差别在于读库因为小众，所以少些博弈筹码。当当曾经（或者现在仍然）拖欠了读库几十万的书款，投放到新华书店等传统渠道的书款也总是收不回来，但读库的结果是，偶尔困难时候化险为夷，正常时候生活的有滋有味。全心全意去完成这项工作，应该是其中很重要的一个原因吧。&lt;br /&gt;&lt;br /&gt;@end&lt;br /&gt;&lt;br /&gt;---&lt;br /&gt;&lt;br /&gt;@protocol 2012_Resolution&lt;br /&gt;&lt;br /&gt;1. 训练时间追上并且不再落后与Dan&lt;br /&gt;2. 发布至少一个app&lt;br /&gt;3. 精读至少15本专业书籍&lt;br /&gt;4. 写一篇研究论文&lt;br /&gt;5. 可以熟练使用Lisp&lt;br /&gt;&lt;br /&gt;[UPDATE: five more general guidelines&lt;br /&gt;Learn things&lt;br /&gt;Play sports&lt;br /&gt;Sing and play instruments&lt;br /&gt;Draw and paint&lt;br /&gt;Write stories&lt;br /&gt;]&lt;br /&gt;&lt;br /&gt;@end&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;cheers,</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4725013241931794609/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2012/01/summary-of-2011-and-resolution-of-2012.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4725013241931794609'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4725013241931794609'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2012/01/summary-of-2011-and-resolution-of-2012.html' title='Summary of 2011 and Resolution of 2012'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4545356899624578644</id><published>2011-12-22T19:33:00.003-06:00</published><updated>2011-12-22T20:17:44.357-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Excerpt from "the netscape dorm"</title><content type='html'>&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;br /&gt;All of the paragraphs below are excerpted from "&lt;a href="http://www.jwz.org/gruntle/nscpdorm.html"&gt;the netscape dorm&lt;/a&gt;". It is a joyful experience reading the diary. But maybe this is just as what &lt;a href="http://www.jwz.org/"&gt;Jamie Zawinski&lt;/a&gt; said: "This is the time period that is traditionally referred to as "the good old days,'' but time always softens the pain and makes things look like more fun than they really were. But who said everything has to be fun? Pain builds character. (Sometimes it builds products, too.) ".&lt;br /&gt;&lt;br /&gt;======================&lt;br /&gt;&lt;br /&gt;But it was no big deal, we just had the meeting later. It's hard for someone to hold it against you when you miss a meeting because you've been at work so long that you've passed out from exhaustion. &lt;br /&gt;&lt;br /&gt;Wow, I must be tired -- I just turned on the television, and MTV is actually moving too fast for me to understand it. &lt;br /&gt;&lt;br /&gt;I saw Ian today, for the first time in months. His first words were, ``Wow, you look like shit.'' He says I seem really strung-out and twitchy. I thought I had been doing ok! I got a full night's sleep last night and everything. I have no life. I never see any of my non-work friends, and I'm wasting away my one and only youth. I ought to be out doing fun things and active things, the kind of things I won't be able to do when my mind and body finally decay. But instead I'm stuck inside under fluorescent lights, pushing bits around inside a computer in ways that are only interesting to other nerds. I glanced at a movie listing and there are movies out that I haven't even heard of. How did that happen? That freaks me out. &lt;br /&gt;&lt;br /&gt;I've just read over some of my diary for the last few months, and man, a lot of it is completely incoherent! It's full of incomplete sentences, made up words, random surreal imagery that I can't even understand let alone remember typing. Have I been typing in my sleep? I hope I don't sound like that in person. I wonder what my code must look like! Oh well, it seems to work. &lt;br /&gt;&lt;br /&gt;Well today has been more than a little bit frustrating. The details don't really matter (what does!), but I've spent most of the day so stressed out that my skull is rattling from the pressure of my teeth grinding together. I feel like I have finally exceeded my stress limits and am about blow a gasket. But I can't go home, because if I do, the world will end, right? I'm trying to work, but every few minutes I have to stop typing and make fists so tightly that my whole body shakes. &lt;br /&gt;&lt;br /&gt;Coots know how to live. I wish I were a coot. Mr. Wizard, I think I'd rather be a coot than a hacker. Yeah, sure, every now and then a giant pink-haired ape would come running after me and chase me into the lake, but really, could it be that much worse? I'd have a tiny little brain and wouldn't be expected to worry about anything. &lt;br /&gt;&lt;br /&gt;The power came back on, and we put the damnable program on the FTP server, and two million people all started attempting to download it at once, before we had even posted the announcement message, and we're done done done and I suppose now we can all live happily ever after…… We sat in the conference room and hooked up the big TV to one of the Indys, so that we could sit around in the dark and watch the FTP download logs scroll by. jg hacked up an impromptu script that played the sound of a cannon shot each time a download successfully completed. We sat in the dark and cheered, listening to the explosions. &lt;br /&gt;&lt;br /&gt;I've just noticed that there's still purple ink on the inside of my right wrist spelling the word VOID: the hand-stamp from a concert that I went to last week. I left work, went to the show, and came back to work immediately afterwards. I've been here since.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4545356899624578644/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/12/excerpt-from-netscape-dorm.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4545356899624578644'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4545356899624578644'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/12/excerpt-from-netscape-dorm.html' title='Excerpt from &quot;the netscape dorm&quot;'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7559331702338908627</id><published>2011-12-19T02:20:00.007-06:00</published><updated>2012-01-08T13:01:51.563-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><category scheme='http://www.blogger.com/atom/ns#' term='iOS'/><title type='text'>Memory Management in Obj C</title><content type='html'>&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp; &lt;br /&gt;I just complete my 2nd iOS homework, which took me cumulative 40 hours. The part that impressed (or... baffled...) me most is about dealing with memory management. In one scree, I opened the Xcode IDE, and in another screen, I just cross-referenced StackOverflow, Developer Library, and Google searching over and over again. There was no one-stop solution for all of the problems I met. But it only made me feel more enjoyable when I finally found the path to solution:) In case that I might forget the key points all I have collected, I record them here with references.&lt;br /&gt;&lt;br /&gt;1. &lt;a href="http://stackoverflow.com/questions/3789684/objective-c-checking-if-object-is-undefined-or-nil"&gt;Declaration of object&lt;/a&gt;. &lt;br /&gt;&lt;code&gt;MyObject* myObject;&lt;/code&gt;&lt;br /&gt;&lt;b style="color: red;"&gt;WRONG! &lt;/b&gt;This means myObject points to a chunk of garbage memory, which would not correctly work at all. Basically, there are two ways to do this correctly:&lt;br /&gt;&lt;code&gt;MyObject* myObject=nil;&lt;br /&gt;MyObject* myObject=[[MyObject alloc] init];&amp;nbsp;&lt;/code&gt;&lt;br /&gt;The former one makes myObject to point to nothing. Now it at least consistently does nothing, or I could use this pointer points to some useful object later on. But this will also lends to another issue about the life-cycle of a object which I will talk about in detail later. The latter one is to allocate a MyObject object in the memory, initialize it, and then make myObject point to the chunk of memory correctly allocated and initialized. Now, if the MyObject has the interface&lt;br /&gt;&lt;code&gt;@interface MyObject:NSObject{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; NSString* string;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;@end&lt;br /&gt;&lt;br /&gt;@implementation MyObject&lt;br /&gt;-(id) init {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(self=[super init]){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ...do something ...&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return self;&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;br /&gt;after [super init] is successfully performed, Objective-C guarantees that the ivar string is set to nil, i.e. string points to nothing. But it is not that an NSString is allocated or initialized.&lt;br /&gt;&lt;br /&gt;2. Basic rules about ownership&amp;nbsp; and memory management:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Any object returned by &lt;i&gt;&lt;b&gt;alloc&lt;/b&gt;&lt;/i&gt;, &lt;i&gt;&lt;b&gt;copy&lt;/b&gt;&lt;/i&gt;, &lt;i&gt;&lt;b&gt;copyWithZone&lt;/b&gt;&lt;/i&gt;, or &lt;i&gt;&lt;b&gt;new&lt;/b&gt;&lt;/i&gt; has a retain count of 1.&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;b&gt;retain&lt;/b&gt;&lt;/i&gt; increases the receiving object's retain count.&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;b&gt;release&lt;/b&gt;&lt;/i&gt; decreases the receiving object's retain count.&lt;/li&gt;&lt;li&gt;&lt;i&gt;&lt;b&gt;autorelease&lt;/b&gt;&lt;/i&gt; tells the current autorelease pool to send the receiving object the release message “later”.&lt;/li&gt;&lt;li&gt;Any factory method that doesn't have “new” or “copy” in the name (e.g., stringWithString:) returns an object that it has autoreleased on your behalf.&lt;/li&gt;&lt;li&gt;Conversely, if you are not the creator of an object and have not expressed an ownership interest, you must not release it. &lt;/li&gt;&lt;/ul&gt;Or, digested a bit:&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Any method whose name contains copy, alloc, retain, or new returns an object that you own.&lt;/li&gt;&lt;li&gt;Any method that doesn't, returns an object that you don't own.&lt;/li&gt;&lt;li&gt;To own an object, retain it.&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;Reference: &lt;a href="http://stackoverflow.com/questions/318666/object-ownership-in-stringwithstring-and-initwithstring-in-nsstring"&gt;StackOverflow,&lt;/a&gt; &lt;a href="http://developer.apple.com/library/mac/#documentation/Cocoa/Conceptual/MemoryMgmt/Articles/MemoryMgmt.html"&gt;Developer Library&lt;/a&gt;. &lt;a href="http://www.otierney.net/objective-c.html#retain"&gt;An example about &lt;b&gt;&lt;i&gt;retain&lt;/i&gt;&lt;/b&gt; and &lt;b&gt;&lt;i&gt;release&lt;/i&gt;&lt;/b&gt;&lt;/a&gt;, and &lt;a href="http://stackoverflow.com/questions/3262575/alloc-init-with-synthesized-property-does-it-cause-retain-count-to-increase"&gt;another deeper discussion&lt;/a&gt;. &lt;br /&gt;&lt;br /&gt;3. &lt;i&gt;&lt;b&gt;copy&lt;/b&gt;&lt;/i&gt; versus &lt;i&gt;&lt;b&gt;retain&lt;/b&gt;&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;There are lots of discussions about the subtle differences between these two operations, though they both intend to take the ownership from the acquired objects. "&lt;a href="http://vgable.com/blog/2008/11/14/prefer-copy-over-retain/"&gt;(Almost) every time you use retain in Objective-C/Cocoa, you really should be using copy. Using retain can introduce some subtle bugs, and copy is faster then you think…&lt;/a&gt;" The problem with using retain to “take ownership” of an object is that someone else has a pointer to the same object, and if they change it, you will be affected.&lt;br /&gt;&lt;br /&gt;There are some other discussions concerning the same kind of problem in &lt;a href="http://stackoverflow.com/questions/387959/nsstring-property-copy-or-retain/388002#388002"&gt;StackOverflow&lt;/a&gt; and &lt;a href="http://robnapier.net/blog/implementing-nscopying-439"&gt;post in a blog&lt;/a&gt;. Besides, I also made to rookie mistakes that took me quite a while to find out and correct.&lt;br /&gt;&lt;br /&gt;4. &lt;a href="http://stackoverflow.com/questions/3488446/is-a-synthesized-property-already-alloc-init-ed"&gt;Has a @synthesize property already init &amp;amp; alloc-ed?&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;The answer is NO. It needs to populate the property manually. The exception is if you have an IBOutlet property that you've connected in a nib file; that will get populated automatically when the nib is loaded.&lt;br /&gt;&lt;br /&gt;For view controllers, the vast majority of properties are IBOutlets and properties that describe what the view will show, and the latter case is usually set by the object that creates the view controller. That will usually be the case for a view controller that shows a detail view for some object.&lt;br /&gt;&lt;br /&gt;If you do have properties that are completely local to the view controller, a common pattern is to write your own getter and setter (rather than using @synthesize) and create the object in the getter if it doesn't exist. This lazy-loading behavior means you can easily free up resources in low-memory conditions, and that you only pay the cost of loading an object when you need it.&lt;br /&gt;&lt;code&gt;// simple lazy-loading getter&lt;br /&gt;- (MyPropertyClass*) propertyName {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(propertyIvarName == nil) {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; propertyIvarName = [[MyPropertyClass alloc] init];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ......&amp;nbsp; // ... other setup here&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; return propertyIvarName;&lt;br /&gt;}&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;5. Pitfall about the use of getter/setter:&lt;br /&gt;&lt;code&gt;@interface MyObject:NSObject{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; NSString *aString;&lt;br /&gt;}&lt;br /&gt;@property (nonatomic, copy) NSString *aString;&lt;br /&gt;- (void) someMethod; &lt;br /&gt;@end&lt;br /&gt;&lt;br /&gt;@ implementation MyObject {&lt;br /&gt;@synthesize aString;&lt;br /&gt;- (id) init {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; ......&lt;br /&gt;}&lt;br /&gt;- (void) someMethod {&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; ......&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; aString = [NSString stringWithString: @"blah, blah, blah."];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; aString = [[NSString stringWithString: @"blah, blah, blah."] retain];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; aString = [[NSString stringWithString: @"blah, blah, blah."] copy]; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; self.aString = [NSString stringWithString: @"blah, blah, blah."];&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; ......&lt;br /&gt;}&lt;br /&gt;&lt;/code&gt;&lt;br /&gt;The compiler would not pop up any warning or error about the code above. But the 1st line in the method is extremely dangerous as well as a bug hard to find: the aString does not own the returned object, which will be released at some time after the method is completed. Corresponding to the second factor that I write above, it is obvious that this sentence has no keywords about ownership. Worse still, although the ownership is considered in the &lt;i&gt;@property&lt;/i&gt;, this sentence does not call the setter method. The right way to activate the setter is the 4th sentence. Besides, the 2nd and 3rd sentence request the ownership of the new object in another form. They are legal, of course.&lt;br /&gt;&lt;br /&gt;[ UPDATE:&lt;br /&gt;&lt;br /&gt;6. &lt;i&gt;viewDidUnload&lt;/i&gt; vs. &lt;i&gt;dealloc&lt;/i&gt;&lt;br /&gt;&lt;br /&gt;Unless the program needs to break a retain cycle, it should generally only be releasing objects in the &lt;i&gt;dealloc&lt;/i&gt; method. &lt;i&gt;viewDidUnload&lt;/i&gt; is an &lt;b&gt;exception&lt;/b&gt;; it is invoked in low memory situations and should be used to release anything useless. Then, a preferable way to do this is to write another &lt;i&gt;releaseMemory&lt;/i&gt; function where takes most or all of the used objects into consideration and sets them into &lt;i&gt;nil&lt;/i&gt;, and then to call this function both in &lt;i&gt;viewDidUnload&lt;/i&gt; and &lt;i&gt;dealloc&lt;/i&gt;.&lt;br /&gt;&lt;br /&gt;The general principle is just as mentioned above: if you do need to release them anywhere else, then always set the reference to nil after the release. That will protect the app from blowing up later (likely in dealloc).&lt;br /&gt;&lt;br /&gt;References: &lt;a href="http://stackoverflow.com/questions/2353321/release-in-viewdidunload-and-dealloc-both"&gt;StackOverFlow-1&lt;/a&gt;, &lt;a href="http://stackoverflow.com/questions/1768076/are-viewdidunload-and-dealloc-always-called-when-tearing-down-a-uiviewcontroller"&gt;StackOverFlow-2&lt;/a&gt;. &lt;br /&gt;]&lt;br /&gt;&lt;br /&gt;It is glad that I have gone this far. And, I will move on,&amp;nbsp; and dig deeper.&lt;br /&gt;&lt;br /&gt;cheers.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7559331702338908627/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/12/memory-management-in-obj-c.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7559331702338908627'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7559331702338908627'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/12/memory-management-in-obj-c.html' title='Memory Management in Obj C'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1925645656446421048</id><published>2011-12-07T23:33:00.000-06:00</published><updated>2011-12-07T23:33:40.191-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>Winter vacation resolution</title><content type='html'>&lt;div&gt;1. Study at least one online theoretical course;&lt;/div&gt;&lt;div&gt;2. Complete implementation of personal website and the Cal app in iOS;&lt;/div&gt;&lt;div&gt;3. Write blogs frequently documenting the progress;&lt;/div&gt;&lt;div&gt;4. Find a nice com to do the Spring intern;&lt;/div&gt;&lt;div&gt;5. Update info with Dr. Barber every other week about Identity threats;&lt;/div&gt;&lt;div&gt;6. Contact with professors on a daily basis;&lt;/div&gt;&lt;div&gt;7. Cumulate the training hours surpass 2400.&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1925645656446421048/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/12/winter-vacation-resolution.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1925645656446421048'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1925645656446421048'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/12/winter-vacation-resolution.html' title='Winter vacation resolution'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3145303912717270953</id><published>2011-12-03T23:11:00.002-06:00</published><updated>2011-12-03T23:11:04.568-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>不碰你！</title><content type='html'>哪儿都不能碰！</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3145303912717270953/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/12/blog-post.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3145303912717270953'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3145303912717270953'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/12/blog-post.html' title='不碰你！'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-646597305238351564</id><published>2011-10-06T21:15:00.001-05:00</published><updated>2011-10-06T21:15:15.435-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>R.I.P Steve Jobs</title><content type='html'></content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/646597305238351564/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/10/rip-steve-jobs.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/646597305238351564'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/646597305238351564'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/10/rip-steve-jobs.html' title='R.I.P Steve Jobs'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8387378984932954526</id><published>2011-09-27T16:09:00.002-05:00</published><updated>2011-09-27T16:32:33.590-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><category scheme='http://www.blogger.com/atom/ns#' term='Java'/><title type='text'>Find the longest chain under 1M with Collatz Conjecture condition</title><content type='html'>It is the #14 problem in &lt;a href="http://projecteuler.net/"&gt;Project Euler&lt;/a&gt;.&lt;br /&gt;In general, the Collatz conjecture has two main properties:&lt;br /&gt;1. no infinite trajectory occurs;&lt;br /&gt;2. no cycle occurs.&lt;br /&gt;&lt;br /&gt;The basic algorithm is quite straightforward. It just follows the instruction of Collatz Conjecture, which are n = n/2 if n is even, and n = 3*n+1 if n is odd. To accelerate the calculation, I also implemented a hash map, which could be retrieve theoretically in constant time O(1), and use the iteration number as the key in this map and the overall steps towards 1 as the value of that key. Under this situation, whenever a new node is found, it will be added into the map, and continue the computation until it reaches some key which has already stored in the map. That is, the route is undetermined before the calculation, but every number only needs to calculate once.&lt;br /&gt;&lt;br /&gt;The first problem I met is exactly the problem "&lt;a href="http://stackoverflow.com/questions/6825146/why-am-i-getting-an-outofmemoryerror-in-java/7561025#7561025"&gt;Why am I getting an OutOfMemoryError trouble in Java?&lt;/a&gt;" described in the StackOverflow. When the program reaches 113383, all of the heap space will be consumed. As I looked up in the internet, all solutions point to how to increase the heap space for Java. While, as I narrowed down the bug to the innermost loop and print out every relevant variable, the bug finally turned out to be the overflow of integer data type. Just change it into long would solve this problem.&lt;br /&gt;&lt;br /&gt;The second problem had the same symptom but with a much bigger number. When I print out every variable this time, nothing seemed wrong. But if we check the memory usage in run-time, all of the memory had been consumed by the hash map as some number will have extremely long chain towards 1, part of which are far beyond the range of 1000000. The scale is over 1.5 million items in hash map to achieve 725343. The solution is that the program only record number under 1 million, which are within the searching range and also most likely to be hit.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Solution discussions: &lt;a href="http://stackoverflow.com/questions/2643260/project-euler-question-14-collatz-problem"&gt;[1]&lt;/a&gt; (discussion in StackOverflow), &lt;a href="http://lanzkron.wordpress.com/2010/01/18/yet-another-meaningless-javascript-benchmark/"&gt;[2]&lt;/a&gt; (in JavaScript), &lt;a href="http://lanzkron.wordpress.com/2010/06/02/optimizing-collatz-for-klutzes/"&gt;[3]&lt;/a&gt; (optimization), &lt;a href="http://blog.functionalfun.net/2008/07/project-euler-problem-14-hailstone.html"&gt;[4]&lt;/a&gt; (in C++), &lt;a href="http://sandrotosi.blogspot.com/2010/03/project-euler-problem-14.html"&gt;[5]&lt;/a&gt; (in Python). By the way, &lt;a href="http://stackoverflow.com/questions/235047/why-do-i-get-an-outofmemoryerror-when-inserting-50-000-objects-into-hashmap"&gt;here&lt;/a&gt; is the discussion about looking up memory usage during run time in Java--it helps me find the 2nd bug. Finally, my solution is in &lt;a href="https://github.com/creasyw/learning/blob/master/puzzles/Q011To015.java"&gt;one of my Github repositories&lt;/a&gt;.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8387378984932954526/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/09/find-longest-chain-under-collatz.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8387378984932954526'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8387378984932954526'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/09/find-longest-chain-under-collatz.html' title='Find the longest chain under 1M with Collatz Conjecture condition'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7026164882527183461</id><published>2011-09-15T12:28:00.011-05:00</published><updated>2011-09-27T16:10:15.338-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><category scheme='http://www.blogger.com/atom/ns#' term='Java'/><title type='text'>something about Java</title><content type='html'>&lt;a href="http://www.cafeaulait.org/course/week2/02.html"&gt;Java's primitive data types&amp;nbsp; &lt;/a&gt;&lt;br /&gt;&lt;a href="http://stackoverflow.com/questions/718554/how-to-convert-an-arraylist-containing-integers-to-primitive-int-array"&gt;How to convert ArrayList containing Integers to primitive int array?&lt;/a&gt;&lt;br /&gt;&lt;a href="http://stackoverflow.com/questions/6210745/whats-difference-between-math-pow9-18-and-918"&gt;What's difference between Math.pow(9, 18) and 9^18?&lt;/a&gt;&lt;br /&gt;&lt;a href="http://stackoverflow.com/questions/303913/java-reading-integers-from-a-file-into-an-array"&gt;Reading integers from a file into an array&lt;/a&gt;&lt;br /&gt;&lt;a href="http://stackoverflow.com/questions/6232257/2d-dynamic-array-using-arraylist-in-java"&gt;2D dynamic array using ArrayList&amp;nbsp;&lt;/a&gt;&lt;br /&gt;&lt;a href="http://stackoverflow.com/questions/322715/when-to-use-linkedlist-over-arraylist"&gt;When to use LinkedList&amp;lt;&amp;gt; over ArrayList&amp;lt;&amp;gt; or vice-versa?&amp;nbsp;&lt;/a&gt;&lt;br /&gt;&lt;a href="http://stackoverflow.com/questions/40471/java-hashmap-vs-hashtable"&gt;Java Hashtable versus HashMap.&amp;nbsp;&lt;/a&gt; &lt;br /&gt;&lt;a href="http://stackoverflow.com/questions/174093/toarraynew-myclass0-or-toarraynew-myclassmylist-size"&gt;.toArray(new MyClass[0]) or .toArray(new MyClass[myList.size()])?&lt;/a&gt;&lt;br /&gt;&lt;a href="http://stackoverflow.com/questions/627784/what-are-some-java-memory-management-best-practices"&gt;What are some Java memory management best practices?&amp;nbsp;&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.briangoetz.com/pubs.html"&gt;Publications and regular columns from Brain Goetz&lt;/a&gt;&lt;br /&gt;&lt;a href="http://stackoverflow.com/questions/36701/struct-like-objects-in-java"&gt;Struct like object in Java. &lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7026164882527183461/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/09/java-exploring-from-stackoverflow.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7026164882527183461'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7026164882527183461'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/09/java-exploring-from-stackoverflow.html' title='something about Java'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3652418362581088607</id><published>2011-09-06T17:03:00.004-05:00</published><updated>2011-09-27T16:10:33.311-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><category scheme='http://www.blogger.com/atom/ns#' term='C.prog.lang'/><title type='text'>Largest palindrome made from the product of two 3-digit numbers</title><content type='html'>This question is an entry level puzzle from &lt;a href="http://projecteuler.net/"&gt;Project Euler&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;It is very interesting because it has far more pitfalls than it first appears to be. There are some helpful discussions to pick up the whole scenario of this puzzle: &lt;a href="http://codeblog.dhananjaynene.com/2010/01/find-the-largest-palindrome-made-from-the-product-of-two-3-digit-numbers/comment-page-1/#comment-48"&gt;1)&lt;/a&gt; and &lt;a href="http://pthree.org/2007/09/15/largest-palindromic-number-in-python/"&gt;2)&lt;/a&gt;. Basically speaking, the first post listed the most straightforward thoughts, which is iterations two numbers both from 100 to 1000 and finding the maximum of the outcomes. While I wrote the algorithm, this is also the first idea came into mind while I added several optimizations on it.&lt;br /&gt;1) Decrease one number 1 per step, and iterate the other one from 999 to 100.&lt;br /&gt;2) Stop the step whenever it finds a palindrome and march to the next step by decrease the benchmark number by one.&lt;br /&gt;3) Meanwhile, increase the lower bound of iterator from 100 to whenever it finds a palindrome. This will exponentially decrease the searching range. e.g. (A--benchmark number, B--iterator) if A*B==palindrome, the searching range for the next step would be [A-1, B]. Because if both numbers less than the previous finding, it must not be the LARGEST palindrome we would like to find.&lt;br /&gt;4) The second stop criteria is the iterator equal or less than the lower bound mentioned in the last item.&lt;br /&gt;&lt;br /&gt;The major pitfall that I did see quite a few people mentioned is alternative decrease two numbers from 999, which the result comes to be 834*836=698896. The difference for two numbers are obviously unnecessary to be less or equal to one.&lt;br /&gt;&lt;br /&gt;The second reference provides the basic optimization from math point of view. All of the palindrome can be divided by 11, so...&lt;br /&gt;P=100000x+10000y+1000z+100z+10y+x&lt;br /&gt;P=100001x+10010y+1100z&lt;br /&gt;P=11*(9091x+910y+100z)&lt;br /&gt;Then, the question is simplified to find two 3-digit numbers, at least one of which should be divided by 11. Similarly as the previous method, if A can be divided by 11, decreasing B by one per time; and if A cannot divided by 11, decreasing B by 11 per time.&lt;br /&gt;&lt;br /&gt;My solutions for the first 5 puzzles are &lt;a href="https://github.com/creasyw/learning/blob/master/puzzles/q001To005.c"&gt;here&lt;/a&gt;.&lt;br /&gt;cheers,</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3652418362581088607/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/09/largest-palindrome-made-from-product-of.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3652418362581088607'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3652418362581088607'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/09/largest-palindrome-made-from-product-of.html' title='Largest palindrome made from the product of two 3-digit numbers'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1903325400355846890</id><published>2011-07-25T12:49:00.002-05:00</published><updated>2011-07-25T13:45:55.880-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>Editing hex file via Vim</title><content type='html'>It took me some time to find useful tools comparing hex file in mac. I had tried DiffMerge, kdiff3, HexEditor, and several other apps whose names I could not recall. At last, the most viable way is still using the vim editor. But the problem was still there: it was painful to look at hex code in that editor.&lt;br /&gt;&lt;br /&gt;Solution:&lt;br /&gt;Adding some configuration in the ~/.vimrc will make everything peace and clean:)&lt;br /&gt;&lt;br /&gt;&lt;code&gt;&lt;br /&gt;" vim -b : edit binary using xxd-format!&lt;br /&gt;augroup Binary&lt;br /&gt;au!&lt;br /&gt;au BufReadPre  *.bin let &amp;amp;bin=1&lt;br /&gt;au BufReadPost *.bin if &amp;amp;bin | %!xxd&lt;br /&gt;au BufReadPost *.bin set ft=xxd | endif&lt;br /&gt;au BufWritePre *.bin if &amp;amp;bin | %!xxd -r&lt;br /&gt;au BufWritePre *.bin endif&lt;br /&gt;au BufWritePost *.bin if &amp;amp;bin | %!xxd&lt;br /&gt;au BufWritePost *.bin set nomod | endif&lt;br /&gt;augroup END&lt;br /&gt;&lt;code&gt;&lt;/code&gt;&lt;/code&gt;&lt;br /&gt;&lt;br /&gt;Note that this configuration only works with the file with .bin extension, which is already enough for me to hack into the targeting files:) Check the reference #1 for further reading of more general hex file editing.&lt;br /&gt;&lt;br /&gt;cheers:)&lt;br /&gt;&lt;br /&gt;References:&lt;br /&gt;1) &lt;a href="http://vim.wikia.com/wiki/Improved_hex_editing"&gt;Improve hex editing&lt;/a&gt;&lt;br /&gt;2) &lt;a href="http://www.tuxfiles.org/linuxhelp/vimcheat.html"&gt;Vim commands cheat sheet&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1903325400355846890/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/07/editing-hex-file-via-vim.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1903325400355846890'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1903325400355846890'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/07/editing-hex-file-via-vim.html' title='Editing hex file via Vim'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-478233975491745244</id><published>2011-07-23T18:07:00.001-05:00</published><updated>2011-07-25T13:00:54.119-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>Some general programming methodologies</title><content type='html'>"MIT approach" with CLOS and Scheme:&lt;br /&gt;1) Simplicity-the design must be simple, both in implementation and interface. It is more important for the interface to be simple than the implementation.&lt;br /&gt;2) Correctness-the design must be correct in all observable aspects. Incorrectness is simply not allowed.&lt;br /&gt;3) Consistency-the design must not be inconsistent. A design is allowed to be slightly less simple and less complete to avoid inconsistency. Consistency is as important as correctness.&lt;br /&gt;4) Completeness-the design must cover as many important situations as is practical. All reasonably expected cases must be covered. Simplicity is not allowed to overly reduce completeness.&lt;br /&gt;&lt;br /&gt;"Worse-is-better" philosophy is only slightly different:&lt;br /&gt;1) Simplicity-the design must be simple, both in implementation and interface. It is more important for the implementation to be simple than the interface. Simplicity is the most important consideration in a design.&lt;br /&gt;2) Correctness-the design must be correct in all observable aspects. It is slightly better to be simple than correct.&lt;br /&gt;3) Consistency-the design must not be overly inconsistent. Consistency can be sacrificed for simplicity in some cases, but it is better to drop those parts of the design that deal with less common circumstances than to introduce either implementational complexity or inconsistency.&lt;br /&gt;4) Completeness-the design must cover as many important situations as is practical. All reasonably expected cases should be covered. Completeness can be sacrificed in favor of any other quality. In fact, completeness must sacrificed whenever implementation simplicity is jeopardized. Consistency can be sacrificed to achieve completeness if simplicity is retained; especially worthless is consistency of interface. &lt;br /&gt;&lt;br /&gt;Extreme Programming (XP) methodology:&lt;br /&gt;1) Make samll, but freguent, release.&lt;br /&gt;2) Develop in iteration cycles.&lt;br /&gt;3) Do not put in anything that is not in the spec (no matter how tempted you are to put in functionarlity "for the future").&lt;br /&gt;4) Writhe the test code FIRST.&lt;br /&gt;5) No killer schedules; work regular hours.&lt;br /&gt;6) Refactor (improve the code) whenever and wherever you notice the opportunity.&lt;br /&gt;7) Do not release anything until it passes all the tests.&lt;br /&gt;8) Set realistic schedules, based around small releases.&lt;br /&gt;9) Keep it simple.&lt;br /&gt;10) Program in pairs, and move people around so that everybody knows pretty much everything about the code.&lt;br /&gt;&lt;br /&gt;Reference:&lt;br /&gt;1) &lt;a href="http://en.wikipedia.org/wiki/Extreme_programming"&gt;Wikipedia--Extreme Programming&lt;/a&gt;&lt;br /&gt;2) &lt;a href="http://www.jwz.org/doc/worse-is-better.html"&gt;The Rise of "Worse is Better"&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/478233975491745244/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/07/some-general-programming-methodologies.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/478233975491745244'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/478233975491745244'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/07/some-general-programming-methodologies.html' title='Some general programming methodologies'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3235888414092574177</id><published>2011-07-11T14:44:00.001-05:00</published><updated>2011-07-11T14:46:10.565-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>Install Django and MySQLdb along with Python</title><content type='html'>Most of the steps are straightforward. The only twisted place is the combination of mysql-python and the mysql itself. During my installation, there are two errors coming out:&lt;br /&gt;&lt;br /&gt;1) "EnvironmentError: mysql_config not found" happened at the 1st place when I install mysql-python using the python install. The solution is to edit the file "setup_posix.py":&lt;br /&gt;# mysql_config.path = "mysql_config"&lt;br /&gt;mysql_config.path = "/usr/local/YOUR_LATEST_MYSQL_DIRECTORY/bin/mysql_config"&lt;br /&gt;--Then, everything in the installation should be fine. &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;2) As I check the status of installation, I found some confusing info. popping up.&lt;br /&gt;&amp;gt;&amp;gt;&amp;gt; import MySQLdb&lt;br /&gt;Traceback (most recent call last):&lt;br /&gt;&amp;nbsp; File "build/bdist.macosx-10.6-universal/egg/MySQLdb/__init__.py", line 19, in &lt;module&gt;&lt;br /&gt;&amp;nbsp; File "build/bdist.macosx-10.6-universal/egg/_mysql.py", line 7, in &lt;module&gt;&lt;br /&gt;&amp;nbsp; File "build/bdist.macosx-10.6-universal/egg/_mysql.py", line 6, in __bootstrap__&lt;br /&gt;ImportError: dlopen(/Users/creasywuqiong/.python-eggs/MySQL_python-1.2.3-py2.6-macosx-10.6-universal.egg-tmp/_mysql.so, 2): Library not loaded: libmysqlclient.18.dylib&lt;br /&gt;&amp;nbsp; Referenced from: /Users/creasywuqiong/.python-eggs/MySQL_python-1.2.3-py2.6-macosx-10.6-universal.egg-tmp/_mysql.so&lt;br /&gt;&amp;nbsp; Reason: image not found&lt;br /&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/module&gt;&lt;/module&gt;&lt;br /&gt;The solution is to add some symbolic links:&lt;br /&gt;sudo ln -s /usr/local/mysql/lib/libmysqlclient.18.dylib /usr/lib/libmysqlclient.18.dylib&lt;br /&gt;sudo ln -s /usr/local/mysql/lib /usr/local/mysql/lib/mysql&lt;br /&gt;&lt;br /&gt;Everything is fine:)&lt;br /&gt;cheers~&lt;br /&gt;&lt;br /&gt;References:&lt;br /&gt;&lt;a href="http://ageekstory.blogspot.com/2011/04/installing-massive-coupon-on-mac-os-10.html"&gt;1)&lt;/a&gt; &lt;a href="http://stackoverflow.com/questions/4730787/python-import-mysqldb-error-mac-10-6"&gt;2)&lt;/a&gt; &lt;a href="http://www.mechanicalgirl.com/view/installing-django-with-mysql-on-mac-os-x/"&gt;3)&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3235888414092574177/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/07/install-django-and-mysqldb-along-with.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3235888414092574177'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3235888414092574177'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/07/install-django-and-mysqldb-along-with.html' title='Install Django and MySQLdb along with Python'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8244282399241457636</id><published>2011-06-13T17:15:00.003-05:00</published><updated>2011-10-04T21:36:35.370-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Software used in mac os</title><content type='html'>Firefox:) --(update: now, this is really a pain in my ass.. It just has no response now and then, on matter whether in snow leopard or lion. I am wondering to switch to chrome now.)&lt;br /&gt;&lt;br /&gt;eReading: Skim (.pdf), iChm (.chm), DjView (.djvu)&lt;br /&gt;Coding: Xcode (objective-C), Vim (all of the others)&lt;br /&gt;Word processing: iWork, Office for Mac&lt;br /&gt;Terminal: iTerm2, Terminal.app &lt;br /&gt;Unzip: Zipeg&lt;br /&gt;Media player: MplayerX&lt;br /&gt;IM: Skype, MSN &lt;br /&gt;Google reader app: Reeder.&lt;br /&gt;Sync Notes: Evernote.&lt;br /&gt;&lt;br /&gt;Besides, there is something highly recommended by other people:&lt;br /&gt;QuickSilver &lt;br /&gt;IM: Adium&lt;br /&gt;&lt;br /&gt;&lt;a href="http://beckism.com/2009/02/better_bash_prompt/"&gt;A better bash prompt on Mac OS &lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8244282399241457636/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/06/software-used-in-mac-os.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8244282399241457636'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8244282399241457636'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/06/software-used-in-mac-os.html' title='Software used in mac os'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7535158048744083225</id><published>2011-05-18T17:23:00.003-05:00</published><updated>2011-07-14T19:49:45.519-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>Install BeautifulSoup in Python</title><content type='html'>&lt;a href="http://www.crummy.com/software/BeautifulSoup/"&gt;BeautifulSoup&lt;/a&gt; is a great error-tolerant HTML parser for Python. The install is rather straightforward:&lt;br /&gt;&lt;br /&gt;1. Download the source code from the &lt;a href="http://www.crummy.com/software/BeautifulSoup/"&gt;official website&lt;/a&gt;.&lt;br /&gt;2. Unzip it in the working directory of Python "/usr/local/lib/python2.x/site-packages", in which the python2.x is the current using version. (actually... it is OK to install it in anywhere in convenience)&lt;br /&gt;3. In the directory above, input: "~$ python setup.py install".&lt;br /&gt;4. Completed. Check the current version of BeautifulSoup via:&lt;br /&gt;~$ python&lt;br /&gt;&amp;gt;&amp;gt;&amp;gt; import BeautifulSoup&lt;br /&gt;&amp;gt;&amp;gt;&amp;gt; print BeautifulSoup.__version__&lt;br /&gt;3.2.0 (Yeah~!) &lt;br /&gt;5. Cheers.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7535158048744083225/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/05/install-beautifulsoup-in-python.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7535158048744083225'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7535158048744083225'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/05/install-beautifulsoup-in-python.html' title='Install BeautifulSoup in Python'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4115747942970818889</id><published>2011-05-16T16:48:00.020-05:00</published><updated>2011-09-22T13:38:19.242-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>Something worth reading about programming</title><content type='html'>General Insights: &lt;br /&gt;&lt;a href="http://batsov.com/Programming/2011/04/27/programming-languages-worth-learning.html"&gt;Programming languages worth learning&lt;/a&gt;&lt;br /&gt;&lt;a href="http://techcrunch.com/2011/05/07/why-the-new-guy-cant-code/"&gt;Why The New Guy Can’t Code&lt;/a&gt;&lt;br /&gt;&lt;a href="http://blog.akash.im/an-open-letter-to-those-who-want-to-start"&gt;An open letter to those who want to start programming&lt;/a&gt;&lt;br /&gt;&lt;a href="http://bosker.wordpress.com/2011/04/29/the-worst-algorithm-in-the-world/"&gt;The worst algorithm in the world?&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.catb.org/%7Eesr/jargon/html/writing-style.html"&gt;Hacker Writing Style&lt;/a&gt;&lt;br /&gt;&lt;a href="http://coolshell.cn/articles/1566.html"&gt;A list of Cheating sheet&lt;/a&gt;&lt;br /&gt;&lt;a href="http://programmers.stackexchange.com/questions/31104/whats-your-most-controversial-programming-opinion"&gt;What's your most controversial programming opinion?&lt;/a&gt;&lt;br /&gt;&lt;a href="http://37signals.com/svn/posts/2538-the-first-step-is-to-start"&gt;The first step is to start&lt;/a&gt;&lt;br /&gt;&lt;a href="http://aytemir.com/blog/2008/12/06/best-of-2008-for-developers-2008-tips-tricks-scripts-and-sources/"&gt;Best of 2008 for developers: tips, tricks, scripts and sources!&lt;/a&gt;&lt;br /&gt;&lt;a href="http://stackoverflow.com/questions/194812/list-of-freely-available-programming-books"&gt;List of freely available programming books&lt;/a&gt;&lt;br /&gt;&lt;a href="http://joelneely.wordpress.com/2011/03/05/why-data-structures-matter/"&gt;Why data structures matter&amp;nbsp;&lt;/a&gt;&lt;br /&gt;&lt;a href="http://coolshell.cn/articles/4657.html"&gt;General summary of&amp;nbsp; open source software licences&lt;/a&gt;&lt;br /&gt;&lt;a href="http://coolshell.cn/articles/4535.html"&gt;Some basic standard for programming design&lt;/a&gt;&lt;br /&gt;&lt;a href="http://news.stanford.edu/news/2005/june15/jobs-061505.html"&gt;"You've got to find what you love" &lt;/a&gt;&lt;br /&gt;&lt;a href="http://codefury.net/2010/06/how-to-get-a-job-as-a-programmer/"&gt;How to get a job as a programmer&lt;/a&gt;&lt;br /&gt;&lt;a href="http://hivelogic.com/articles/top-10-programming-fonts/"&gt;Top 10 programming fonts&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.instapaper.com/text?u=http%3A%2F%2Fwww.nicollet.net%2F2011%2F05%2Frewrite-your-code%2F&amp;amp;article=166714539"&gt;Rewrite your code&lt;/a&gt;&lt;br /&gt;Functional thinking: thinking functionally. &lt;a href="http://www.ibm.com/developerworks/java/library/j-ft1/index.html"&gt;Part 1&lt;/a&gt;, &lt;a href="http://www.ibm.com/developerworks/java/library/j-ft2/index.html"&gt;Part 2&lt;/a&gt;, &lt;a href="http://www.ibm.com/developerworks/java/library/j-ft3/index.html"&gt;Part 3&lt;/a&gt;.&lt;br /&gt;&lt;a href="http://www.artima.com/weblogs/viewpost.jsp?thread=331531"&gt;The Principles of Good Programming&lt;/a&gt; (&lt;a href="http://www.aqee.net/principles-of-good-programming/"&gt;Chinese Translation&lt;/a&gt;)&lt;br /&gt;&lt;a href="http://coolshell.cn/articles/4990.html"&gt;程序员技术练级攻略&amp;nbsp; &lt;/a&gt;&lt;br /&gt;&lt;a href="http://yannesposito.com/Scratch/en/blog/Learn-Vim-Progressively/"&gt;Learning Vim Progressively&lt;/a&gt; (&lt;a href="http://coolshell.cn/articles/5426.html"&gt;简明Vim练级攻略&lt;/a&gt;&amp;nbsp; &amp;amp;&amp;amp; &lt;a href="http://coolshell.cn/articles/5479.html"&gt;Vim速查卡&lt;/a&gt;) &lt;br /&gt;&lt;a href="http://avdi.org/devblog/2011/08/19/letter-to-a-young-developer/"&gt;Letter to a Young developer&lt;/a&gt; (&lt;a href="http://www.aqee.net/letter-to-a-young-developer/"&gt;Chinese Translation&lt;/a&gt;)&lt;br /&gt;&lt;a href="http://stackoverflow.com/questions/118984/how-can-you-program-if-youre-blind"&gt;How can you program if you're blind? &lt;/a&gt;(&lt;a href="http://coolshell.cn/articles/5514.html"&gt;Chinese Translation&lt;/a&gt;)&lt;br /&gt;&lt;br /&gt;Specific Languages:&lt;br /&gt;&lt;a href="http://homepage.mac.com/randyhyde/webster.cs.ucr.edu/www.artofasm.com/Linux/index.html"&gt;Art of Assembly Language Programming &lt;/a&gt;&lt;br /&gt;&lt;a href="http://stevelosh.com/blog/2010/09/coming-home-to-vim/#programming-your-editing"&gt;Coming home to Vim &lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.curly-brace.com/favorite.html"&gt;Why C# Is Not My Favorite Programming Language&lt;/a&gt;&lt;br /&gt;&lt;a href="http://batsov.com/Clojure/Java/2011/05/12/jvm-langs-clojure.html"&gt;Java.next() - Clojure: The Return of the Lispers&lt;/a&gt;&lt;br /&gt;&lt;a href="http://batsov.com/Ruby/Python/Programming/2011/05/03/ruby-or-python.html"&gt;Ruby or Python? Well, it depends...&lt;/a&gt;&lt;br /&gt;&lt;a href="http://blog.aegisub.org/2008/12/if-programming-languages-were-religions.html"&gt;If programming languages were religions...&lt;/a&gt;&lt;br /&gt;&lt;a href="http://nodebox.net/code/index.php/Graph%20"&gt;Graph Visualization in Python&lt;/a&gt;&lt;br /&gt;&lt;a href="http://infohost.nmt.edu/tcc/help/lang/python/examples/pyskip/"&gt;A skip list container class in Python&lt;/a&gt;&amp;nbsp; &lt;br /&gt;&lt;a href="http://codefury.net/2011/04/why-php-was-a-ghetto/%20"&gt;Why PHP Was a Ghetto&lt;/a&gt;&lt;br /&gt;&lt;a href="http://stackoverflow.com/questions/6398996/good-haskell-source-to-read-and-learn-from"&gt;Good Haskell source to read and learn from&lt;/a&gt;&lt;br /&gt;&lt;a href="http://quant.stackexchange.com/questions/1764/why-is-c-still-a-very-popular-language-in-quantitative-finance"&gt;Why is C++ still a very popular language in quantitative finance?&amp;nbsp;&lt;/a&gt; &lt;br /&gt;&lt;br /&gt;Audio relevant:&lt;br /&gt;&lt;a href="http://cromwellian.blogspot.com/2011/05/ive-been-having-twitter-back-and-forth.html"&gt;The problem with HTML5 audio&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Productivity:&lt;br /&gt;&lt;a href="http://mindprod.com/jgloss/unmain.html"&gt;Unmaintainable code &lt;/a&gt;&lt;br /&gt;&lt;a href="http://jacquesmattheij.com/productivity+tips+for+the+easily+distracted"&gt;Productivity tips for the easily distracted&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4115747942970818889/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/05/something-worth-reading-about.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4115747942970818889'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4115747942970818889'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/05/something-worth-reading-about.html' title='Something worth reading about programming'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6455984125574370393</id><published>2011-04-25T20:30:00.000-05:00</published><updated>2011-04-25T20:30:53.154-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>Github uploading</title><content type='html'>折磨死我了……&lt;br /&gt;&lt;br /&gt;这应该是个很不错的版本控制，以及所谓社会化编码的网站工具。不过上手还真的是需要段时间的。可能以后经常维护，会熟能生巧吧。&lt;br /&gt;&lt;br /&gt;两个不错的参考文献：&lt;br /&gt;&lt;a href="http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide"&gt;Git for beginner&lt;/a&gt;&lt;br /&gt;&lt;a href="http://help.github.com/git-cheat-sheets/"&gt;Github Help links&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/6455984125574370393/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/04/github-uploading.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6455984125574370393'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6455984125574370393'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/04/github-uploading.html' title='Github uploading'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5217821279042835284</id><published>2011-04-24T13:08:00.013-05:00</published><updated>2011-06-28T00:38:05.526-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><category scheme='http://www.blogger.com/atom/ns#' term='C.prog.lang'/><category scheme='http://www.blogger.com/atom/ns#' term='C++'/><title type='text'>great resources for C.prog.lang</title><content type='html'>Basic commands and references:&lt;br /&gt;&lt;a href="http://cprogramminglanguage.net/"&gt;C Programming Language&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.cprogramming.com/tutorial.html"&gt;C/C++ references&lt;/a&gt;&lt;br /&gt;&lt;a href="http://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list"&gt;The Definitive C++ Book Guide and List&lt;/a&gt;&lt;a href="http://stackoverflow.com/questions/388242/the-definitive-c-book-guide-and-list" target="_blank"&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml"&gt;Google C++ Style Guide&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.viva64.com/en/l/"&gt;Lessons on development of 64-bit C/C++ applications&lt;/a&gt;&lt;br /&gt;&lt;a href="http://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-088-introduction-to-c-memory-management-and-c-object-oriented-programming-january-iap-2010/"&gt;MIT C/C++ Introductory course&lt;/a&gt; &lt;br /&gt;&lt;a href="http://www.blogger.com/goog_157129008"&gt;Solution manual of "The C Programming Language" (Kernighan &amp;amp; Ritchie)&lt;/a&gt;&lt;br /&gt;&lt;a href="http://coolshell.cn/articles/2365.html%20"&gt;两个C++的library&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.readwriteweb.com/hack/2011/06/free-e-books-on-c-and-cpp.php"&gt;Six free E-books on C and C++ &lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Algorithms:&lt;br /&gt;&lt;a href="http://eternallyconfuzzled.com/tuts/datastructures/jsw_tut_hashtable.aspx"&gt;Complicated data structure and algorithms&lt;/a&gt;&lt;br /&gt;&lt;a href="http://coolshell.cn/articles/3961.html"&gt;“火柴棍式”程序员面试题 &lt;/a&gt;&lt;br /&gt;&lt;a href="http://coolshell.cn/articles/3790.html"&gt;如何调试makefile变量&lt;/a&gt;&lt;br /&gt;&lt;a href="http://coolshell.cn/articles/3738.html"&gt;打印质数的各种算法&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Suggestions &amp;amp;&amp;amp; methodologies:&lt;br /&gt;&lt;a href="http://programmers.stackexchange.com/questions/62502/small-c-projects"&gt;Small C projects&lt;/a&gt;&lt;br /&gt;&lt;a href="http://coolshell.cn/articles/2250.html"&gt;21 days vs. ten years&lt;/a&gt; &lt;br /&gt;&lt;a href="http://coolshell.cn/articles/4102.html"&gt;如何学好C语言&lt;/a&gt;&lt;br /&gt;&lt;a href="http://coolshell.cn/articles/4119.html"&gt;如何学好C++&lt;/a&gt;&lt;br /&gt;&lt;a href="http://coolshell.cn/articles/2287.html"&gt;C++程序员自信心曲线&lt;/a&gt;&lt;br /&gt;&lt;a href="http://coolshell.cn/articles/830.html"&gt;语言的歧义&lt;/a&gt;&lt;br /&gt;&lt;a href="http://coolshell.cn/articles/551.html"&gt;C语言下的错误处理的问题&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;In-depth discussions:&lt;br /&gt;&lt;a href="http://www.cs.bell-labs.com/who/dmr/primevalC.html"&gt;Primeval C: two very early compilers&amp;nbsp; &lt;/a&gt;&lt;br /&gt;&lt;a href="http://eli.thegreenplace.net/2011/05/02/the-context-sensitivity-of-c%E2%80%99s-grammar-revisited/"&gt;The context sensitivity of C’s grammar&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.rs.io/c-is-a-wasteland/"&gt;C is a Wasteland &lt;/a&gt;&lt;br /&gt;&lt;a href="http://warp.povusers.org/programming/cplusplus_superior_to_c.html"&gt;Why C++ is vastly superior to C&lt;/a&gt;&lt;br /&gt;&lt;a href="http://shootout.alioth.debian.org/u32/which-programming-languages-are-fastest.php"&gt;Which programming languages are fastest?&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.codinghorror.com/blog/2007/03/top-6-list-of-programming-top-10-lists.html"&gt;Top 6 List of Programming Top 10 Lists&lt;/a&gt;&lt;br /&gt;&amp;nbsp;A Guide to Undefined Behavior in C and C++: &lt;a href="http://blog.regehr.org/archives/213"&gt;Part1&lt;/a&gt;, &lt;a href="http://blog.regehr.org/archives/226"&gt;Part2&lt;/a&gt;, &lt;a href="http://blog.regehr.org/archives/232"&gt;Part3&lt;/a&gt;.&lt;br /&gt;&lt;a href="http://www.syntax-k.de/projekte/go-review"&gt;Go Programming Language, Or: Why all C-like Programming Languages Except One Suck&lt;/a&gt;&lt;br /&gt;&lt;a href="http://blog.kowalczyk.info/article/af1h/Experience-porting-4k-lines-of-C-code-to-go.html"&gt;Experience porting 4k lines of C code&amp;nbsp;&lt;/a&gt; &lt;br /&gt;&lt;a href="http://www.johndcook.com/blog/2011/06/14/why-do-c-folks-make-things-so-complicated/"&gt;Why do C++ folks make things so complicated?&lt;/a&gt;&lt;br /&gt;&lt;a href="http://stackoverflow.com/questions/6441218/can-a-local-variables-memory-be-accessed-outside-its-scope/6445794#6445794"&gt;Can a local variable's memory be accessed outside its scope? &lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Some of my thoughts:&lt;br /&gt;Keep writing in C to solve the algorithm problems.&lt;br /&gt;Transform to Clojure/C++/Python whenever the application scenario needs.&lt;br /&gt;Read more about Perl/Python/Java.&lt;br /&gt;Try to solve some puzzles or challenges everyday</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5217821279042835284/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/04/great-resources-for-cproglang.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5217821279042835284'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5217821279042835284'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/04/great-resources-for-cproglang.html' title='great resources for C.prog.lang'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1242011384209252640</id><published>2011-04-24T13:06:00.000-05:00</published><updated>2011-04-24T13:06:35.283-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>Algorithm complexity</title><content type='html'>"Debugging is twice as hard as writing the code in the first place. Therefore, if you write the code as cleverly as possible, you are, by definition, not smart enough to debug it." --Brian Kernighan&lt;br /&gt;&lt;br /&gt;Remark: If the code is complex enough to be at the limits of your skills, then debugging that code will exceed your skills. In other words, don't make code so complex that you can't maintain it. "Everyone knows that debugging is twice as hard as writing a program in the first place. So if you're as clever as you can be when you write it, how will you ever debug it?", quoted from Kernighan (and Plauger, in "The Elements of Programming Style").&lt;br /&gt;&lt;br /&gt;I've found that using &lt;i&gt;weaker&lt;/i&gt; tools can help with complexity.  It's hard to write a complicated C program because it can't do very much.  C programs tend to use lots of arrays because that's all you get, but it turns out that arrays are great -- compact memory representation, O(1) access, good data locality.  I'd never advocate intentionally using a weak tool, though.  Instead, my lesson has been: write Python code like it was C.--"&lt;a href="http://neugierig.org/software/blog/2011/04/complexity.html"&gt;Complexity is the enemy&lt;/a&gt;" written by Evan Martin.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1242011384209252640/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/04/algorithm-complexity.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1242011384209252640'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1242011384209252640'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/04/algorithm-complexity.html' title='Algorithm complexity'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5786034265424176544</id><published>2011-04-16T14:26:00.000-05:00</published><updated>2011-04-16T14:26:00.229-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>Programming craftsmanship</title><content type='html'>&amp;nbsp;The article below is a digest from "&lt;a href="http://dannorth.net/2011/01/11/programming-is-not-a-craft/"&gt;Programming is not a craft&lt;/a&gt;" (courtesy to the author Dan North.)&lt;br /&gt;&lt;br /&gt;----------------- &lt;br /&gt;Software Craftsmanship risks putting the software at the center rather than the benefit the software is supposed to deliver, mostly because we are romantics with big egos. Programming is about automating work like crunching data, processing and presenting information, or controlling and automating machines.&lt;br /&gt;&lt;br /&gt;They understand software development is a skill, in fact a whole portfolio of skills: understanding and modeling a problem domain, understanding programming languages, libraries, paradigms and idioms, choosing which to apply in a given situation, learning and understanding algorithms, mastering the "path to production" (build, deployment, release), monitoring and availability, process automation, Lean theories of supply, production and product development, utility and cloud computing, concurrency and parallelism, and so on.&lt;br /&gt;&lt;br /&gt;The oft-quoted figures of tenfold increase in productivity of expert versus novice programmers are wrong by orders of magnitude in my experience. A really great programmer (and I've been lucky enough to work with a handful over the years) can out-perform a doing-it-for-the-money programmer by orders of literally hundreds, delivering in hours or days what would take an average developer weeks or months.&lt;br /&gt;&lt;br /&gt;It seems to me the most successful programmers I've encountered don't craft software; they write software in order to move information around, in order to get something done. Information is the real deal – the software just defines the space that it moves around in. For those programmers, success is about getting information from point A where it's currently languishing to point B where it's going to actually be useful, as quickly and effectively as they can. Success in a UI is about rendering or capturing exactly the information that will be useful – no less and certainly no more – in a succinct, obvious way. The software is incidental, a detail, hidden away in the wings, and it is ultimately entirely disposable.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5786034265424176544/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/04/programming-craftsmanship.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5786034265424176544'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5786034265424176544'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/04/programming-craftsmanship.html' title='Programming craftsmanship'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5500730915330026490</id><published>2011-04-16T12:32:00.000-05:00</published><updated>2011-04-16T12:32:58.688-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>starting point</title><content type='html'>B.E.&amp;nbsp;&amp;nbsp; &amp;nbsp;100*2+50=250&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;(two exam plus one course)&lt;br /&gt;M.E.&amp;nbsp;&amp;nbsp; &amp;nbsp;300+300+50=650&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;(three years)&lt;br /&gt;MSc&amp;nbsp;&amp;nbsp; &amp;nbsp;100+600+50+200=950&amp;nbsp;&amp;nbsp; &amp;nbsp;(lab and homework)&lt;br /&gt;=1850hr</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5500730915330026490/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/04/starting-point.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5500730915330026490'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5500730915330026490'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/04/starting-point.html' title='starting point'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-9063869219818206723</id><published>2011-04-15T19:44:00.002-05:00</published><updated>2011-04-16T12:28:55.669-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>recent reflection</title><content type='html'>There is an essay talking about the &lt;a href="http://www.winestockwebdesign.com/Essays/Lisp_Curse.htm"&gt;LISP Curse&lt;/a&gt; , which is so much familiar with the development of Computer Vision/Machine Learning with signal processing. I have taken two consecutive courses of computer vision, and one paragraph of description in the essay above could summarize all of my feelings:&lt;br /&gt;&lt;br /&gt;"Programs written by individual contributors tend to follow the scratch-an-itch model. These programs will solve the problem that the contributor, himself, is having without necessarily handling related parts of the problem which would make the program more useful to others. Furthermore, the program is sure to work on that lone contributor's own setup, but may not be portable to other implementations with even similar scenarios, or to the same implementation on other platforms. Documentation may be lacking. Being essentially a project done in one's copious free time, or based on the only destination of making a proposal to apply grants, the program is liable to suffer should real-life responsibilities intrude on it. As Olin Shivers noted, this means that these one-man-band projects tend to solve eighty-percent of the problem"...(at maximum).&lt;br /&gt;&lt;br /&gt;Those two courses were just copying and trying hard to duplicate other works from some other professors. All of the works were self-contained. The instructor wished that some of the duplications would lead him any insight, and then let some of his own students to add some other specifications on it, to make the so-called "breakthrough", and to publish one or more papers. Yes, the papers are the ultimate destination, which could both make the students graduate and reveal the extraordinary achievements of the professor.&lt;br /&gt;&lt;br /&gt;I should have somewhat lucky feeling not choosing this lab, although I might also learn a lot by choosing it and complete my doctoral degree... And in the latter scenario, the lucky feeling seems exactly like a useless self-consolation. But, anyway, collective intellectual is definitely the right way to improve one field of study. And more importantly, I should leave myself sufficient time to learn more and think about everything.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/9063869219818206723/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/04/recent-reflection.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/9063869219818206723'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/9063869219818206723'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/04/recent-reflection.html' title='recent reflection'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8122732205686842886</id><published>2011-03-31T12:14:00.001-05:00</published><updated>2011-03-31T12:14:22.201-05:00</updated><app:control xmlns:app='http://purl.org/atom/app#'><app:draft>yes</app:draft></app:control><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>cont.</title><content type='html'>&lt;a href="http://cplus-interview-questions.blogspot.com/"&gt;http://cplus-interview-questions.blogspot.com/&lt;/a&gt;&lt;br&gt;&lt;br&gt;Constructor is the memeber function of the class which has the same name as that of class and it is invoked whenever the class object is instantiated.Using construtor we can allocate memory.&lt;br&gt;  &lt;br&gt;Destructor is also the member function of same class name and has ~ operator when ever declared in the function and it is used to destruct the object which has been constructed ,whenever we want to destroy it..&lt;br&gt; </content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8122732205686842886'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8122732205686842886'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-9111010081048642368</id><published>2011-03-31T12:12:00.000-05:00</published><updated>2011-03-31T12:13:06.100-05:00</updated><app:control xmlns:app='http://purl.org/atom/app#'><app:draft>yes</app:draft></app:control><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>still virtual function</title><content type='html'>Question about Constructors, Destructors, Virtual functions, order in which these are called when creating objects, deleting objects etc.&lt;br&gt;&lt;br&gt;Virtual constructor: Constructors cannot be virtual. Declaring a constructor as a virtual function is a syntax error.&lt;br&gt;  &lt;br&gt;Virtual destructors: If an object (with a non-virtual destructor) is destroyed explicitly by applying the delete operator to a base-class pointer to the object,&lt;br&gt;the base-class destructor function (matching the pointer type) is called on the object.&lt;br&gt;   </content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/9111010081048642368'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/9111010081048642368'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6138236170388575735</id><published>2011-03-29T22:31:00.000-05:00</published><updated>2011-03-29T22:31:04.113-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><category scheme='http://www.blogger.com/atom/ns#' term='C++'/><title type='text'>virtual function and template in C++</title><content type='html'>Object-oriented programming is based on three fundamental concepts:  data abstraction, inheritance, and dynamic binding. In C++ we use  classes for data abstraction and class derivation to inherit one class  from another: A derived class inherits the members of its base  class(es). Dynamic binding lets the compiler determine at run time  whether to use a function defined in the base or derived class.&lt;br /&gt;&lt;br /&gt;Inheritance  and dynamic binding streamline our programs in two ways: They make it  easier to define new classes that are similar, but not identical, to  other classes, and they make it easier for us to write programs that can  ignore the details of how those similar types differ.&lt;br /&gt;&lt;br /&gt;By  default, function calls in C++ do not use dynamic binding. To trigger  dynamic binding, two conditions must be met: First, only member  functions that are specified as virtual can be dynamically bound. By  default, member functions are not virtual; nonvirtual functions are not  dynamically bound. Second, the call must be made through a reference or a  pointer to a base-class type.&lt;br /&gt;&lt;br /&gt;In &lt;a href="http://en.wikipedia.org/wiki/Object-oriented_programming"&gt;object-oriented programming&lt;/a&gt;, a &lt;b&gt;virtual function&lt;/b&gt; or &lt;b&gt;virtual method&lt;/b&gt; is a &lt;a class="mw-redirect" href="http://en.wikipedia.org/wiki/Function_%28computer_science%29" title="Function (computer science)"&gt;function&lt;/a&gt; or &lt;a class="mw-redirect" href="http://en.wikipedia.org/wiki/Method_%28computer_science%29" title="Method (computer science)"&gt;method&lt;/a&gt; whose behaviour can be &lt;a class="mw-redirect" href="http://en.wikipedia.org/wiki/Method_overriding_%28programming%29" title="Method overriding (programming)"&gt;overridden&lt;/a&gt; within an inheriting class by a function with the same &lt;a href="http://en.wikipedia.org/wiki/Method_signature" title="Method signature"&gt;signature&lt;/a&gt;. This concept is a very important part of the &lt;a href="http://en.wikipedia.org/wiki/Polymorphism_%28computer_science%29" title="Polymorphism (computer science)"&gt;polymorphism&lt;/a&gt; portion of &lt;a href="http://en.wikipedia.org/wiki/Object-oriented_programming"&gt;object-oriented programming&lt;/a&gt; (OOP). &lt;a href="http://en.wikipedia.org/wiki/Virtual_function"&gt;(Wikipage&lt;/a&gt;)&lt;br /&gt;&lt;br /&gt;Virtual functions overcome the problems with the type-field solution by  allowing the programmer to declare functions in a base class that can be  redefined in each derived class. The distinction between virtual and non-virtual resolves this ambiguity.  If the function in question is designated "virtual" in the base class  then the derived class's function would be called (if it exists). If it  is not virtual, the base class's function would be called. C++ non-virtual function calls are resolved at compile time with static binding, while virtual function calls are resolved at run time with dynamic binding&lt;br /&gt;&lt;br /&gt;A destructor in base class need to be declared virtual.&lt;br /&gt;&lt;br /&gt;Calling a method with an object pointer always invokes:&lt;br /&gt;»&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; the most derived class function, if a method is virtual&lt;br /&gt;»&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; the function implementation corresponding to the object pointer type (used to call the method), if a method is non-virtual&lt;br /&gt;&lt;br /&gt;A  virtual destructor works in the same way A destructor gets called when  an object goes out of scope or when we call delete on an object pointer  When any derived class object goes out of scope, the destructor of that  derived class gets called first It then calls its parent class  destructor so memory allocated to the object is properly released. But,  if we call delete on a base pointer which points to a derived class  object, the base class destructor gets called first (for non-virtual  function). We should use virtual destructors if we call delete on a base  class pointer which points to a derived class&lt;br /&gt;&lt;br /&gt;=========&lt;br /&gt;&lt;br /&gt;Templates are the foundation of generic programming, which involves  writing code in a way that is independent of any particular type. The  library containers and iterators are examples of generic programming.  There is a single definition of each container, such as vector, but we  can define many different kinds of vectors that differ by the element  type that the vector contains. Similarly, we can, and have, used  templates without understanding how they are defined.&lt;br /&gt;&lt;br /&gt;A  template is a blueprint or formula for creating a class or a function. A  function template is a type-independent function that is used as a  formula for generating a type-specific version of the function. For  example, the standard library defines a single class template that  defines what it means to be a vector. That template is used to generate  any number of type-specific vector classesfor example,  vector&amp;lt;int&amp;gt; or vector&amp;lt;string&amp;gt;.&lt;br /&gt;&lt;br /&gt;reference &amp;lt;&lt;a href="http://www.amazon.com/Primer-4th-Stanley-B-Lippman/dp/0201721481/ref=sr_1_1?ie=UTF8&amp;amp;qid=1301455836&amp;amp;sr=8-1"&gt;C++ primer&lt;/a&gt;&amp;gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/6138236170388575735/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/virtual-function-and-template-in-c.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6138236170388575735'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6138236170388575735'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/virtual-function-and-template-in-c.html' title='virtual function and template in C++'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8772296946607511500</id><published>2011-03-23T17:07:00.002-05:00</published><updated>2011-03-23T17:11:10.886-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>update the latest version of firefox in ubuntu</title><content type='html'>The optimal source to get the package seems to be the &lt;a href="http://www.omgubuntu.co.uk/2011/03/firefox-4-ppa-for-ubuntu-10-04-and-10-10-users/"&gt;PPA of firefox for ubuntu.&lt;/a&gt; The archive can be found &lt;a href="https://launchpad.net/%7Efirefox-smooth-scaling/+archive/ppa"&gt;here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;And the only modification for 10.10 is that, the Software Sources that mentioned in that page is to be found in System-&amp;gt;Administration-&amp;gt;Update Manager-&amp;gt;Setting, and finally add the sources of "&lt;b&gt;ppa:mozillateam/firefox-stable&lt;/b&gt;" in "Other Software".&lt;br /&gt;&lt;br /&gt;cheers</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8772296946607511500/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/update-latest-version-of-firefox-in.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8772296946607511500'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8772296946607511500'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/update-latest-version-of-firefox-in.html' title='update the latest version of firefox in ubuntu'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2328372396376289127</id><published>2011-03-19T15:52:00.002-05:00</published><updated>2011-03-19T15:53:54.206-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>How little you know, and some useful commands</title><content type='html'>All contents below come from &lt;a href="http://www.mnxsolutions.com/quick-tip/how-little-you-know-and-some-useful-commands-for-the-week.html"&gt;here&lt;/a&gt;. &lt;br /&gt;----------------&lt;br /&gt;&lt;br /&gt;Every week, I still find new commands, new methods, and alternate ways to accomplish things. Below are a few items I found this week that you may also find helpful.&lt;br /&gt;&lt;br /&gt;Connect directly to your serial console, and log the session.&lt;br /&gt;# screen -L /dev/ttyS0 9600&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Print a line-number for each line in a text file&lt;br /&gt;$ cat -n file&lt;br /&gt;&lt;br /&gt;Use ‘mtr’ when debugging network issues:&lt;br /&gt;$ mtr www.google.com&lt;br /&gt;&lt;br /&gt;Re-run a command changing a parameter quickly:&lt;br /&gt;$ ls -l 500.*&lt;br /&gt;-rw-r--r-- 1 nwilkens nwilkens 0 2011-03-13 11:32 500.lst&lt;br /&gt;-rw-r--r-- 1 nwilkens nwilkens 0 2011-03-13 11:32 500.txt&lt;br /&gt;$ ^500^600&lt;br /&gt;ls -l 600.*&lt;br /&gt;-rw-r--r-- 1 nwilkens nwilkens 0 2011-03-13 11:32 600.lst&lt;br /&gt;-rw-r--r-- 1 nwilkens nwilkens 0 2011-03-13 11:32 600.txt&lt;br /&gt;&lt;br /&gt;Return your current IP address:&lt;br /&gt;$ curl ifconfig.me&lt;br /&gt;n.n.n.n&lt;br /&gt;&lt;br /&gt;Typing a long command on the command line? Convert it to your favorite editor using:&lt;br /&gt;cntrl-x cntrl-e&lt;br /&gt;&lt;br /&gt;Update the default editor on Ubuntu.&lt;br /&gt;$ sudo update-alternatives --config editor&lt;br /&gt;There are 6 choices for the alternative editor (providing /usr/bin/editor).&lt;br /&gt;&lt;br /&gt;Selection Path Priority Status&lt;br /&gt;------------------------------------------------------------&lt;br /&gt;0 /usr/bin/ng 80 auto mode&lt;br /&gt;1 /bin/ed -100 manual mode&lt;br /&gt;2 /bin/nano 40 manual mode&lt;br /&gt;3 /usr/bin/emacs23 0 manual mode&lt;br /&gt;4 /usr/bin/ng 80 manual mode&lt;br /&gt;* 5 /usr/bin/vim.basic 30 manual mode&lt;br /&gt;6 /usr/bin/vim.tiny 10 manual mode&lt;br /&gt;Press enter to keep the current choice[*], or type selection number:</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2328372396376289127/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/all-contents-below-come-from-here.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2328372396376289127'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2328372396376289127'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/all-contents-below-come-from-here.html' title='How little you know, and some useful commands'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1050027110798546999</id><published>2011-03-19T04:05:00.002-05:00</published><updated>2011-03-19T13:56:36.389-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>Reflections after 15 hours continuous coding</title><content type='html'>a) I love coding, because it is systematic and predictable.&lt;br /&gt;b) Given advanced algorithms, sorting always finds its way in the program:)&lt;br /&gt;c) It feels nice to concentrate for a long period. And every time as I had a break, it is also enjoyable to have a cup of coffee, or just look outside.&lt;br /&gt;d) "C Bible" and "Algorithm" acquire their well-known fame for reasons. Most of the time, they are even better than internet.&lt;br /&gt;e) It is magic that I would never think of taking a cigarette while coding, even when I see the pack. In retrospect, I still cannot understand how or remember exactly when I quit smoking. But, after all, the result is that I quit, and furthermore, have no desire to resume to that habit.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1050027110798546999/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/reflections-after-15-hours-continous.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1050027110798546999'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1050027110798546999'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/reflections-after-15-hours-continous.html' title='Reflections after 15 hours continuous coding'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4589164785276715241</id><published>2011-03-19T03:53:00.002-05:00</published><updated>2011-03-19T03:56:01.123-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>来自《外滩画报》:向安迪・沃霍尔转型</title><content type='html'>&lt;div class="gmail_quote"&gt;&lt;div bgcolor="#FFFFFF"&gt;&lt;div&gt;&lt;div&gt;&lt;h3&gt;专访詹姆斯・弗兰科：&lt;/h3&gt;&lt;h2&gt;向安迪・沃霍尔转型&lt;/h2&gt;&lt;div&gt;&lt;img alt="詹姆斯・弗兰科" border="0" src="http://www.bundpic.com/upload/images/21/320x/325_490_1299593945.jpg" width="320" /&gt;      &lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;i&gt;凭借《127小时》提名奥斯卡影帝，詹姆斯・弗兰科已经证明了自己是一个好演员，一学期62学分、平均3.5以上的绩点，这位耶鲁大学博士生也证明了自己是个好学生。至于小说家、艺术家、画家、导演等这些身份有待证明，恐怕还需要弗兰科好好思考他那篇关于“跨界媒体融合”的博士论文。&lt;/i&gt;&lt;br /&gt;&lt;i&gt;&amp;nbsp;&lt;/i&gt;  &lt;br /&gt;&lt;h5&gt;文/王奇婷,朱宜,翻译/ Edward&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/h5&gt;&lt;h5&gt;&amp;nbsp;&lt;/h5&gt;&lt;/div&gt;&lt;div&gt;“再见，洛杉矶！今晚很有趣，但我必须回去上课了。”詹姆斯・弗兰科在twitter上写道，并附上了一张大头照——嘴咬着吸管，喝着番茄伏特加，眼神迷离，似笑非笑，看起来说不清是疲惫，还是伤感。&lt;br /&gt;&lt;br /&gt;距离第83届奥斯卡颁奖典礼结束不到几个小时，弗兰科便已经坐在飞往纽约的飞机上了。他甚至缺席了自己在好莱坞Supper Club亲手策划的庆功宴。&lt;br /&gt;&lt;br /&gt;也许他已经没什么心情庆祝了。几个小时前，他和搭档安妮・海瑟薇首次担任颁奖典礼的主持，结果被批得伤痕累累——“弗兰科完全不在状态，根本没投入角色”、“安妮・海瑟薇好歹还试图载歌载舞取悦观众，弗兰科呢？感觉像在神游。”&lt;br /&gt;&lt;br /&gt;来看看他俩在整场晚会上的唯一亮点——海瑟薇穿着燕尾服，独自在舞台上唱了一首改编自音乐剧《悲惨世界》里的歌曲：“他留下我一个人，但他那可以伸缩的机械爪子，却深深地留在了我心里。”她调侃的对象是《X战警》中的“金刚狼”休・杰克曼——原本海瑟薇邀请这位81届奥斯卡主持和她同台演唱，却遭到婉拒。一曲完毕，现场掀起了一个小高潮，此时，弗兰科穿着一身红色女装，假扮成“玛丽莲・梦露”走上舞台，冷冷地说了一句“你穿了燕尾服，那我只能穿这个了”。在零星的笑声中，两人匆匆下台。&lt;br /&gt;&lt;br /&gt;按《华盛顿邮报》记者汉克・斯图尔福的说法，弗兰科“经过一段时间的奥斯卡前集训，他只是想在典礼上好好休息一番”。&lt;br /&gt;&lt;br /&gt;弗兰科似乎没有多余的精力对付主持人的工作了。他已经是一名出色的演员，同时也在努力成为出色的小说家、艺术家、画家、导演和诗人。奥斯卡前夕，他刚带着自己去年的新片《嚎叫》出席了柏林电影节，并在那里出席了自己的第一个欧洲艺术展“The Dangerous Four Boys”。去年10月，他出版了一部短篇小说集《帕罗奥多》（Palo Alto）。此外，从去年9月起，弗兰科又开始在耶鲁大学攻读文学博士，并在罗德岛设计学院主修数码艺术。&lt;br /&gt;&lt;br /&gt;奥斯卡颁奖礼后的第二天上午9点，弗兰科出现在耶鲁大学附近的一家星巴克里，拱着身子看书。他每天都离不开咖啡。他上身换上了一件低调的灰色运动衫，腿上还穿着前一天主持时穿的西裤。&lt;br /&gt;&lt;br /&gt;9点25分，弗兰科在同学们惊讶的注视中，走进了教室。&lt;br /&gt;&lt;br /&gt;&lt;b&gt;“表演的关键在于放松”&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;詹姆斯・弗兰科的手臂卡在一块巨石下。&lt;br /&gt;&lt;br /&gt;导演丹尼・博伊尔对他说：“现在我要开机了，你开始吧，别停下来。”&lt;br /&gt;&lt;br /&gt;于是，弗兰科用尽力气，试图将被卡住的手臂从巨石下抽出来。他涨红了脸，努力地拔，或是用力敲打自己的肩膀。整整20分钟过去，他精疲力竭，手臂和肩膀上满是淤青。导演满意地喊了“cut”。&lt;br /&gt;&lt;br /&gt;这是根据真人真事改编的《127小时》中的一幕。电影讲述了登山者阿伦・拉斯顿在犹他州一座峡谷里因右臂被石头压住被困，最终断臂自救的故事。他们拍摄的现场，就在同一座峡谷的巨石下。影片中除了拉斯顿最终断臂那一幕，都是弗兰科亲身体验困境后真实的表现。为此，他也获得了今年奥斯卡最佳男演员的提名。&lt;br /&gt;&lt;br /&gt;影片拍摄前，博伊尔和弗兰科曾专门拜访了阿伦・拉斯顿。拉斯顿给弗兰科看了不少当时他拍的视频素材，还手把手教了他一些救生的基本动作。“这是一个必须接受死亡考验的角色，面对死亡时的心理斗争很复杂也很微妙。我很幸运能和阿伦交谈，并且看到他当时的亲身录影。”弗兰科说。&lt;br /&gt;&lt;br /&gt;《127小时》最具有挑战性的地方在于，大部分时间里，电影只有一个场景、一个角色。弗兰科在那个岩洞足足呆了五个星期，每周六天，每天从早上九点到晚上九点。“除了上厕所，其他时间他都在那里。”博伊尔说道，“当时我很担心他是否还能保持神志清醒。”&lt;br /&gt;&lt;br /&gt;后来，弗兰科告诉记者，他当时保持神志清醒的“秘诀”就是阅读马塞尔・普鲁斯特和学校课本，以此来分散自己的情绪。这一幕，熟悉弗兰科的朋友都不会陌生——他常常在拍戏的间歇阅读陀思妥耶夫斯基、詹姆斯・乔伊斯或是弗兰科・杰斯的小说。剧组人员偶尔会恶作剧般地从背后抽掉他的书，看看书页到底翻过没有。不过那些人从没有机会“得逞”。在拍摄《米尔克》的片场，他读完了《尤利西斯》和品钦的所有小说。“阅读能让我保持冷静。它能让我暂时逃离，让我的内心沉淀下来。” 弗兰科说道。&lt;br /&gt;&lt;br /&gt;作为演员的弗兰科是最近几年才迅速走红的。几年前，他因在《蜘蛛侠》三部曲中扮演主人公彼得・帕克的朋友哈利・奥斯伯恩而广为人知。但事实上，弗兰科出道很早，1997年他在加州大学洛杉矶分校（UCLA）读大学期间，曾辍学去做全职演员，并在电视剧《呆子和怪胎》中给人留下深刻的印象。2001年，他在传记电影《詹姆斯・迪恩》中成功复制了美国上世纪50年代的文化偶像、著名演员詹姆斯・迪恩，获得了他人生中第一个金球奖。&lt;br /&gt;&lt;br /&gt;2001年到2006年，是弗兰科所谓的“太把自己当回事的那几年”。曾在《呆子和怪胎》中与弗兰科搭档、如今的“青蜂侠”塞斯・罗根回忆道：“那些电影公司早就打起了算盘，‘瞧，一个帅小伙，先让他多拍几部动作片，10年后他就是另一个汤姆・克鲁斯。’”为此，弗兰科拍了很多自己不喜欢的动作片，他整天对着剧本苦思冥想，有时还会为了一些鸡毛蒜皮的小事和导演争执。&lt;br /&gt;他根本无意做汤姆・克鲁斯的接班人。既然没有人认可他作为严肃演员的潜力，弗兰科干脆在2006年选择了重返校园。有趣的是，就当弗兰科把演戏当作一种课余爱好之后，他的表演事业却反而成功了。08年起，他凭借《菠萝快车》、《米尔克》、《嚎叫》等一系列影片，奠定了自己好莱坞一线男星的地位。&lt;br /&gt;&lt;br /&gt;弗兰科自己也意识到，如果不是再度回到校园进行写作和学习，他便无法真正享受做演员的乐趣：“当初我太想证明自己适合做一名演员了，作为中途辍学的补偿。但后来发现，这没有用。表演的关键在于放松。”&lt;br /&gt;&lt;br /&gt;&lt;b&gt;“从杰克・吉伦哈尔变成安迪・沃霍尔”&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;T恤、书本、VHS录像带、午餐盒……一个房间内，这些东西被胡乱丢弃在地上，堆成了一座小山，就像一个脏乱不堪的12岁男孩的卧室。据纽约钟楼画廊馆长阿拉娜・海斯称，这些东西是从弗兰科家里原封不动地搬过来的。&lt;br /&gt;&lt;br /&gt;“他试图通过这些来表达自己对从童年过渡到青春期、性与暴力、男性主义以及流行文化的看法。”海斯说。&lt;br /&gt;&lt;br /&gt;这是弗兰科名为“The Dangerous Book Four Boys”艺术展中的一部分。展览的名字来自于一本名叫《The Dangerous Book For Boys》的畅销书，其中介绍了包括如何种水晶、如何根据手表看方向等男孩需要掌握的生活技巧和知识。而弗兰科则通过短片、摄影、随手涂鸦、雕塑和艺术装置等各种艺术形式，表现书中的部分章节。&lt;br /&gt;&lt;br /&gt;如同那个脏乱不堪的卧室，弗兰科此次艺术展的许多作品都令人有些摸不着头脑，其中不乏生猛、先锋的表现方式。《纽约时报》艺术批评家洛贝塔・史密斯认为，这个“充斥着暴力、毁坏和各种性怪癖，并且女性完全缺失”的展览水平，介于无能和小有潜力之间。&lt;br /&gt;&lt;br /&gt;海斯称，她之所以愿意为弗兰科办展览，并不是因为他的名气，而是因为“他特殊的视角——对大众媒体相互关系的理解”。而这也正是弗兰科博士论文的主题——“跨界媒体的融合”。他将要在论文中探讨“不同媒体如何联系”、“它们各自的边界在哪里”、“在每种媒介中如何表现起到的效果最好”等议题。&lt;br /&gt;&lt;br /&gt;事实上，去年上映的《嚎叫》，便是这种“多媒介融合”的产物。弗兰科在片中饰演美国20世纪著名诗人艾伦・金斯堡。电影用动画、剧情，以及弗兰科的朗诵等多场景并行推进，用实验电影的形式诠释了金斯堡的同名诗集《嚎叫》。该片导演曾戏说：“弗兰科就像21世纪版垮掉的一代。从某种意义上来说，他们身上都带有对艺术实验的无限激情。”&lt;br /&gt;&lt;br /&gt;即将满33岁的弗兰科，已经不仅仅满足于当好一个演员。他更想通过层层积累，让自己的内在丰满起来。“就像从杰克・吉伦哈尔变为了安迪・沃霍尔。”《纽约杂志》如此评价，“他的职业生涯已经开始脱离单一的局限，看起来更像一件多元化的艺术品。他已经在流行文化领域占据了自己的一席之地，就像Lady Gaga在流行音乐领域享有的影响力那样。”&lt;br /&gt;&lt;br /&gt;在弗兰科的母亲贝特西看来，他这种“一个都不能少”的好胜心，在幼儿园时就展露无遗，“在搭积木时，他总不满足于手头的现成材料，而是一定要把房间里所有的木块全都拿来”。4岁时，小弗兰科曾因家里的一个朋友去世而难过不已。贝特西安慰他说，“他离开了我们，但这也是生命的一部分。”没想到弗兰科呜咽着说，“可我还不想死，我还有太多的事要做呢！”&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;J= Jan Janssen&lt;/b&gt;&lt;br /&gt;&lt;b&gt;F= 詹姆斯・弗兰科 James Franco&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;“深造学业让我的生活变扎实了”&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;J：你的表演事业又到了一个新的高度，而你去了耶鲁大学选择继续深造。这算不算一种表态？&lt;br /&gt;&lt;br /&gt;F：（笑）除了表演，我得再找些事情来做。在我返回校园前，表演是我生活中唯一的事情，我把所有的精力都投入其中，几乎丧失了私人生活。&lt;br /&gt;但我并不开心，我不喜欢生命中只有工作，我尽量不仅仅通过影片的评价或票房来评判自己。这有点失常，因为作为一个演员，你对于影片最终的成品并没有那么多控制力。当我想更自主地发挥创造力时，总觉得束手束脚。当时我的情绪真的很低落，我决定改变一下了。&lt;br /&gt;继续深造学业让我的生活变扎实了。它让我接触到更多智慧的学者，他们上着我感兴趣的课程。以前，我会对一些不必要的事情感到焦虑，现在，我又重新聚焦在真正有用的东西上。&lt;br /&gt;&lt;br /&gt;J：你一定很忙碌吧。&lt;br /&gt;&lt;br /&gt;F：我的生活非常的繁忙，还有些精神分裂，不过我很喜欢。我对往返纽约和洛杉矶的往返班机时刻表了然于心，而我也学会更好地组织生活。我可没有许多时间浪费。&lt;br /&gt;我不知道自己为什么要这样做。我不知道。我确实有一种古怪的执着个性，喜欢一下子做许多事情。当我还在表演学校时，我总是尽可能多地参与各种剧目。所以，也许我对许多事情都好奇吧。&lt;br /&gt;我也很有精力去应付各种不同的事情。当我在各种不同的规则和媒介间穿插交错时，我发现它们会互相作用，互相传递精力。我现在觉得在自我表达上有了更多有创造力的方式——我导演了几部短片，写了一本书，做了许多不同的事情，仅仅因为我不再被表演事业所裹挟了。&lt;br /&gt;&lt;br /&gt;J：你现在拍电影是不是更放松了？&lt;br /&gt;&lt;br /&gt;F：我如今在片场更好相处了，因为我不再因为每一件事而担心。我的心态已经不同以往了，我不再把所有的压力都放在自己肩上，工作的时候不再可怜兮兮。这真的是很大的改变，我很享受现在的状态。&lt;br /&gt;&lt;br /&gt;J：你是如何做到在纽约大学和耶鲁大学同时深造的同时，还一部接一部地拍戏呢？&lt;br /&gt;&lt;br /&gt;F：冷血般地有效率！（笑）基本上，我往往在暑假里拍电影。2009年夏天我拍了《美食、祈祷与恋爱》，紧接着的寒假我拍了《嚎叫》，2010年夏天则去了《猿族崛起》剧组。我通常不休假，偶尔零星休几天。我没时间！&lt;br /&gt;&lt;br /&gt;J：在《127小时》大部分时间里，你饰演一个完全孤立的人物，基本上镜头前就你一个人，这样的拍摄有多难？&lt;br /&gt;&lt;br /&gt;F：当然，这只是拍电影，所以这种经历无法和阿伦（拉斯顿）的相提并论，但这确实是一部不同寻常的影片。和其他普通电影相比，它的拍摄要难许多。有几场戏我都精疲力竭，难以呼吸。&lt;br /&gt;&lt;br /&gt;J：拍摄前，你见过阿伦・拉斯顿本人吗？&lt;br /&gt;&lt;br /&gt;F：丹尼（博伊尔）、我和（编剧）西蒙・比尤弗伊在拍摄前一起见了阿伦。他和我们分享了那次经历的每一个细节，还给我们看了他当时卡在峡谷里时拍的视频。除了我们，他还没给别人看过那些视频。他当时对着摄像机说话，觉得那是自己的遗言……所以那些视频非常有震撼力，对于我去重现当时他濒临死亡时心里复杂的感情非常有帮助。&lt;br /&gt;&lt;br /&gt;J：你和导演丹尼・博伊尔是如何决定拍摄那场近几年来最骇人听闻的一场戏（拉斯顿用刀自己切除了被卡的手臂）？有几位观众在影片第一次试映时当场就晕了。&lt;br /&gt;&lt;br /&gt;F：丹尼真的已经为那场戏做了平衡。你可以走得很远，把它拍得极度血腥，就好像是部恐怖片。你也可以把它剪掉，让它变得可看性更强些，但那却会减弱原本的震撼力。你不能这么做，因为那是最关键的一场戏，讲述他是如何最终逃离困境自救的。&lt;br /&gt;&lt;br /&gt;J：有没有特效参与？还是你对着一个假手臂在演？&lt;br /&gt;&lt;br /&gt;F：我们有各种不同的假手臂，因为有不同的需求。当我们在拍断臂那段时，他们设计了一些纹理细节非常非常复杂的假肢，表面看上去完全可以以假乱真，而皮肤下面也都是假的肌肉组织。我们当时一共有三个这样的假肢，一个就可以拍10到15分钟的长镜头，因为这些假肢真的做得很像。我记得有一次去储藏室，那里陈列着许多以供使用的手臂，很可怕……就好像《德州电锯杀人狂》里的一幕。&lt;br /&gt;&lt;br /&gt;&lt;b&gt;“通过制造身份混淆的方式，把真实生活拉进了虚构的世界”&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;J：你曾在《美食、祈祷与恋爱》中与茱莉亚-罗伯茨演过对手戏。和她合作感觉如何？&lt;br /&gt;&lt;br /&gt;F：和她相处非常愉快和有趣，如果不是因为她在其中，我也许不会接下这部电影。在影片拍摄前，我们有机会共度几天时光，聊聊天，熟悉彼此，这实在太美妙了。因为有时候，当你和某人拍摄比较私密的对手戏时，你事实上差不多一天前才刚刚见到她。&lt;br /&gt;&lt;br /&gt;J：能谈谈你为什么想到做演员的？&lt;br /&gt;&lt;br /&gt;F：还是小孩时，我总是在画画，而我的几个亲戚又做着和艺术相关的工作，所以我总是渴望成为一个艺术家。我也曾有过成为一名演员的想法，但我童年时成长的帕洛阿尔托距离洛杉矶可很远。当我有了驾驶执照后，我开始对电影产生了兴趣，我那时的女朋友会开车带我去旧金山，看许多艺术院线的电影。&lt;br /&gt;后来，我一度和一群搞涂鸦、入店行窃这类事情的人混在一起，我知道那一定让我惹上大麻烦的。我的意思是，我已经因为醉酒等事被带进过警察局了。所以，我必须想办法走出这个圈子和状态。我问我爸妈是否可以出钱让我去读艺术学校，但他们拒绝了。&lt;br /&gt;最后，我们达成了一致，他们同意送我去UCLA英语系读书。在我住在洛杉矶的那段时间里，我遇到了许多去参加试镜的人，还有一小部分在电视剧或电视电影里出演角色的人，通过他们我也对参加试镜及通过表演赚些生活费产生了兴趣。我在哥伦比亚大学的一位室友曾拿到过一个重要角色，这也间接导致了我后来的退学。我爸妈对我当时的决定可不满意。&lt;br /&gt;&lt;br /&gt;J：当你在享受了作为演员的成功后，再次选择返回校园，是否是为了弥补当初退学的举动呢？&lt;br /&gt;&lt;br /&gt;F：不，我不这么认为。我返回校园，是因为我想学习，通过非常基本的方式扩宽我的视野。我也许确实有点狼吞虎咽，选修了比普通人多许多的课程，还同时读了哥伦比亚和纽约大学的两个学位。我确信的是，作为演员的我想向别人证明，至少是向我的教授们证明，我可以在学业上尽职尽力。&lt;br /&gt;&lt;br /&gt;J：如今你这样忙碌的日程安排，从某种意义上也宣告了你私人生活的结束。你想过结婚生子吗？&lt;br /&gt;&lt;br /&gt;F：当然。我确信结婚需要花许多精力，但我感觉自己一定会经历这个过程。婚姻生活可不是你能计划的部分，它不像规划课程或拍什么电影那么简单。不过，当时机准确时，它自然而然会发生的。&lt;br /&gt;&lt;br /&gt;&lt;b&gt;弗兰科一起在哥大念书&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;第一次见到詹姆斯・弗兰科是在2008年的夏天，我刚入学哥伦比亚大学的戏剧系念编剧硕士。&lt;br /&gt;那天中午，我们刚上完电影理论课，教授是李安的制片人和编剧詹姆斯・沙姆斯。一大群同学一起走下楼，在大厅里，身边一位同学突然说：“看，那人就是蛛蛛侠里的那个男配角。” 我使劲地想了想，隐约记起那个角色。顺着她指的方向望去，我看到一个穿着白色T恤，清瘦而苍白的男生不紧不慢走在人群里，周围的同学并无惊奇或上前搭话，让人觉得那只是一名普通学生罢了。&lt;br /&gt;&lt;br /&gt;我有点不相信，走过去问：“嘿，你是蜘蛛侠里的那个演员？”“是啊。”他笑了笑。然后我俩便分道扬镳。直到出了校门在116街坐地铁，我才发现报刊亭摆着的最新一期GQ杂志封面便是他——那一瞬间才有了几分“我有个同学是明星”的感觉。第二天我得知，他也在哥大念硕士，是写作系的的硕士。&lt;br /&gt;&lt;br /&gt;写作、戏剧、电影、视觉艺术这四个系都隶属于艺术学院，共享一栋名叫道奇的教学楼，所以课间买咖啡或者上下楼时经常能够遇到弗兰科。像哥大这样的常春藤盟校，又在艺术学院，学生们多少都有些自命不凡，指不定以后谁比谁更红。所以但凡和弗兰科打照面，都带着一份“同学+同行”的矜持。&lt;br /&gt;&lt;br /&gt;然而，我也好几次目睹过这样的情景。同学们冷静地买完咖啡，离开，上楼，冲刺进教室后把门一关，对着旁边人就喊：“我刚刚遇到了詹姆斯・弗兰科！太帅了！”艺术学院的每个人都有一个和詹姆斯・弗兰科邂逅的故事，而这些故事都有一个共同点——当事人虽然心中万分激动，脸上却无穷克制。就连哥大校刊有一期谈论“Twitter的10项趣用”的文章中，其中一项竟然是“追踪詹姆斯・弗兰科”。即他每到一个教室上课，班上的同学便把教室号发上Twitter，这样大家就能掌握他一天的行程。&lt;br /&gt;&lt;br /&gt;尽管有如此深厚的群众基础，但大家那时提起他，依然还习惯用“蜘蛛侠男配角”这个称呼。&lt;br /&gt;渐渐半个学期过去了，当大家再谈论起这名半红不红的小明星时，语气突然开始有些不一样了。首先是他的学业传奇。他在UCLA时一学期修62个学分（规定是最多19个学分），并且以3.5以上的绩点毕业的故事本身就足够震撼，此后，他在哥大念写作MFA（艺术硕士）的同时，还在纽约大学的天赤(Tisch)学院念电影制作MFA，在布鲁克林学院念小说写作，还不时去北卡罗来纳州的华伦・威尔森学院作诗歌交流。一个普通人完成以上的任何一项，都得累个半死，熬夜赶作业是家常便饭，而他居然在一个个学位修完的同时，还拍了那么多电影。“他写得怎么样？”有一次和他写作系的同班同学一起吃饭时我问起。“真的很棒！”那个女生说。在纽约大学学电影的一个朋友说，弗兰科在入学面试时提前了一个小时，认认真真地在门口作准备。&lt;br /&gt;&lt;br /&gt;大家对他完全刮目相看了，这绝不是一个在演艺事业低潮期跑到校园里来镀个金的“蜘蛛侠男配角”。与此同时，弗兰科的演艺事业也开始出现转机。先是他的巨型照片在纽约城的心脏——时代广场张贴了起来，那是他为Gucci代言的广告。然后，他又出演了《菠萝快线》、《米尔克》、《美食，祈祷与恋爱》等多部有影响力的影片，凭借《127小时》获今年奥斯卡男主角提名，并担任了主持人。我们目睹了他升起的整个过程，作为“矜持”的校友，在看奥斯卡直播时我们依然毒舌地嘲笑他的表现，但心里怀着的却是一种“村里那个和我们一起玩大的狗娃子出息了！”的亲切和自豪感。&lt;br /&gt;&lt;br /&gt;我一直记得2009年春天，艺术学院的全体学生拍合影。大家高高兴兴地走到道奇大楼门前的空地上集合在一起，各系的人互相打招呼，整着队形。就在摄影师喊“CHEESE!”的时候，我抬头看见四楼教室里，弗兰科站在落地玻璃窗后，远远地望着我们。&lt;br /&gt;&lt;br /&gt;如今他已毕业离校，我们这些人也在筹备毕业作品，虽然资金和规模都很小，但一个个都铆着劲。我偶尔想起那天的情景，感到那就像是一个隐喻：他远远地站在高处，偶尔上下楼之间与我们相遇；我们还在楼下整队，一切早晚就绪，而我们也将带着向上的志气前行。&lt;br /&gt;&lt;br /&gt;（翻译/ Edward）&lt;/div&gt;&lt;div&gt;2011-03-10 总第 428 期&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4589164785276715241/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/blog-post.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4589164785276715241'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4589164785276715241'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/blog-post.html' title='来自《外滩画报》:向安迪・沃霍尔转型'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-870071862724370922</id><published>2011-03-19T01:29:00.001-05:00</published><updated>2011-03-19T01:29:58.336-05:00</updated><app:control xmlns:app='http://purl.org/atom/app#'><app:draft>yes</app:draft></app:control><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>～～～</title><content type='html'>Now there are something that might matter:&lt;br&gt;1. clean and straightforward code;&lt;br&gt;2. necessary comments in the code;&lt;br&gt;111110101100111010110000000011&lt;br&gt;1051962371&lt;br&gt;4024634677651&lt;br&gt;&lt;br&gt;test cases: &lt;a href="http://www.azndezign.com/misc/sophie-examples.zip"&gt;http://www.azndezign.com/misc/sophie-examples.zip&lt;/a&gt;&lt;br&gt;  another test case: &lt;a href="http://pravin.insanitybegins.com/files/sophie.tar.gz"&gt;http://pravin.insanitybegins.com/files/sophie.tar.gz&lt;/a&gt;&lt;br&gt;&lt;br&gt;The Sophie problem can be define as minimum spanning tree. So, the greedy algorithms, such as Kruskal and Prim, should achieve destination with O(ElgV) computation time.&lt;br&gt;  &lt;br&gt;The Bellman-Ford algorithm solves the single-source shortest-paths problem in the general case in which edge weights may be negative. Dijkstra's algorithm solves the single-source shortest-paths problem on a weighted, directed graph G = (V, E) for the case in which all edge weights are nonnegative. With a good implementation, the running time of Dijkstra's algorithm is lower than that of the Bellman-Ford algorithm. -- That&amp;#39;s might be what I am looking for.&lt;br&gt;  &lt;br&gt;If I begin the search from the maximum probability location, I should be much closer to the optimal choice. --This is not included in the cpp file. KEEP IN MIND. --Yes!!!!!!!!!!&lt;br&gt;&lt;br&gt;It do have the possibility that some node with nonzero probability has never been reached. But this could only be determined until the search has completed.--DONE&lt;br&gt;  &lt;br&gt;&lt;br&gt;Finally, I need to rearrange the code!!&lt;br&gt; </content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/870071862724370922'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/870071862724370922'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2434178642515694120</id><published>2011-03-19T00:25:00.000-05:00</published><updated>2011-03-25T10:45:45.622-05:00</updated><app:control xmlns:app='http://purl.org/atom/app#'><app:draft>yes</app:draft></app:control><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>fb's sophie</title><content type='html'>An unofficial guide to the Facebook Engineering Puzzles (beta) &lt;a href="http://www.davideisenstat.com/fbpfaq/#cc"&gt;http://www.davideisenstat.com/fbpfaq/#cc&lt;/a&gt;&lt;br /&gt;sophie's question: &lt;br /&gt;&lt;a href="http://vincentwoo.com/2011/03/05/facebook-puzzle-sophie/"&gt;http://vincentwoo.com/2011/03/05/facebook-puzzle-sophie/&lt;/a&gt;&lt;br /&gt;&lt;a href="http://tungwaiyip.info/blog/2010/07/22/find_sophie_solution_facebook_programming_puzzle"&gt;http://tungwaiyip.info/blog/2010/07/22/find_sophie_solution_facebook_programming_puzzle&lt;/a&gt;&lt;br /&gt;&lt;a href="http://longho.wordpress.com/2010/04/23/how-to-find-sophie-facebook-puzzle/"&gt;http://longho.wordpress.com/2010/04/23/how-to-find-sophie-facebook-puzzle/&lt;/a&gt;&lt;br /&gt;&lt;a href="http://pravin.insanitybegins.com/posts/facebook-puzzle-find-sophie"&gt;http://pravin.insanitybegins.com/posts/facebook-puzzle-find-sophie&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;related knowledge:&lt;br /&gt;Floyd–Warshall algorithm: &lt;a href="http://en.wikipedia.org/wiki/Floyd-Warshall"&gt;http://en.wikipedia.org/wiki/Floyd-Warshall&lt;/a&gt;&lt;br /&gt;Dijkstra's algorithm: &lt;a href="http://en.wikipedia.org/wiki/Dijkstra%27s_algorithm"&gt;http://en.wikipedia.org/wiki/Dijkstra%27s_algorithm&lt;/a&gt;&lt;br /&gt;Johnson's algorithm: &lt;a href="http://en.wikipedia.org/wiki/Johnson%27s_algorithm"&gt;http://en.wikipedia.org/wiki/Johnson%27s_algorithm&lt;/a&gt;&lt;br /&gt;Travelling salesman problem: &lt;a href="http://en.wikipedia.org/wiki/Travelling_salesman_problem"&gt;http://en.wikipedia.org/wiki/Travelling_salesman_problem&lt;/a&gt;&lt;br /&gt;Backtracking algorithm: &lt;a href="http://en.wikipedia.org/wiki/Backtracking"&gt;http://en.wikipedia.org/wiki/Backtracking&lt;/a&gt;&lt;br /&gt;A star algorithm http://en.wikipedia.org/wiki/A*_search_algorithm&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; and its comprehensive reference http://theory.stanford.edu/~amitp/GameProgramming/&lt;br /&gt;by reading it, I found the Dijsktra's algorithm is a special case of it, in which the heuristic function h(x)=0.&lt;br /&gt;More generally, the graph traversal and its special case tree traversal are sited here:&lt;br /&gt;http://en.wikipedia.org/wiki/Graph_traversal &lt;br /&gt;http://en.wikipedia.org/wiki/Tree_traversal&lt;br /&gt;&amp;nbsp; &lt;br /&gt;In general, these two problems are NP-complete, which is a concept in computational complexity theory. In computational complexity theory, the complexity class NP-complete (abbreviated NP-C or NPC) is a class of decision problems. A problem L is NP-complete if it has two properties:&lt;br /&gt;&lt;br /&gt;1) It is in the set of NP (nondeterministic polynomial time) problems: Any given solution to L can be verified quickly (in polynomial time).&lt;br /&gt;2) It is also in the set of NP-hard problems: Any NP problem can be converted into L by a transformation of the inputs in polynomial time.&lt;br /&gt;&lt;br /&gt;Although any given solution to such a problem can be verified quickly, there is no known efficient way to locate a solution in the first place; indeed, the most notable characteristic of NP-complete problems is that no fast solution to them is known. That is, the time required to solve the problem using any currently known algorithm increases very quickly as the size of the problem grows. As a result, the time required to solve even moderately large versions of many of these problems easily reaches into the billions or trillions of years, using any amount of computing power available today, which then are often addressed by using approximation algorithms. More comprehensive introduction can be found at:&lt;br /&gt;http://en.wikipedia.org/wiki/NP-complete&lt;br /&gt;http://en.wikipedia.org/wiki/NP-hard</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2434178642515694120'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2434178642515694120'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7883739088004063942</id><published>2011-03-15T13:33:00.001-05:00</published><updated>2011-03-15T13:33:24.357-05:00</updated><app:control xmlns:app='http://purl.org/atom/app#'><app:draft>yes</app:draft></app:control><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>search tree (part 3)</title><content type='html'>1. Check if a tree is balanced.&lt;br&gt;Define: a balanced tree is a tree such that no two leaf nodes differ in distance from the root by more than one.&lt;br&gt;The idea of solution is very simple: the difference of min depth and max depth should not exceed 1, since the difference of the min and the max depth is the maximum distance difference possible in the tree.&lt;br&gt;  &lt;br&gt;2. Given a directed graph, design an algorithm to find out whether there is a route between two nodes.&lt;br&gt;This problem can be solved by just simple graph traversal, such as depth first search or breadth first search. On the other hand, two kinds of algorithms both suffer one direct drawback which is relevant with the size of stack that is used to store either the peer nodes as we are visiting a given level of the graph, or the way that we have visited in DFS. Assuming the size of the tree is unknown, the presumption of the size will suffer the danger of overflow, and only solution of it is to check the upper bound of the stack everytime it saves elements. Of course, if the language is Java, there would be no concern about this.&lt;br&gt;  &lt;br&gt; </content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7883739088004063942'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7883739088004063942'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7653029458283595068</id><published>2011-03-15T13:20:00.001-05:00</published><updated>2011-03-15T13:20:58.318-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>Lisp</title><content type='html'>&lt;a href="http://pschombe.wordpress.com/2006/03/11/a-comparison-between-scheme-and-common-lisp/"&gt;A comparison between Scheme and Common Lisp&lt;/a&gt;--the author perfer scheme:)&lt;br /&gt;To be fair enough, &lt;a href="http://community.schemewiki.org/?scheme-vs-common-lisp"&gt;here&lt;/a&gt; is a comparison in favor of Common Lisp:)&lt;br /&gt;An introductory article about Lisp: &lt;a href="http://abhishek.geek.nz/docs/features-of-common-lisp/"&gt;Features of Common Lisp&lt;/a&gt;. The &lt;a href="http://gigamonkeys.com/book/"&gt;next step&lt;/a&gt; will be comprehensive and advanced learning in this language.&lt;br /&gt;Besides, via google searching, there are lots of comparison articles/ discussions and excellent introductions for both dialect languages. At last, I made up my mind: CL will be the next language after I conquer Clojure:)&lt;br /&gt;&lt;br /&gt;ps. &lt;a href="http://code.google.com/apis/language/translate/v2/using_rest.html"&gt;here&lt;/a&gt; is the Google Translate API. Furthermore, other APIs can be looked up in this &lt;a href="https://code.google.com/apis/explorer/"&gt;Explorer&lt;/a&gt;.&lt;br /&gt;&lt;a href="http://p.ps/"&gt;p.ps&lt;/a&gt;. best paper awards &lt;a href="http://jeffhuang.com/best_paper_awards.html#sigir"&gt;list&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;Update: A little bit digression, below is the digest of an interesting discussion about genius in&lt;a href="http://news.ycombinator.com/"&gt; Hacker News&lt;/a&gt;:&lt;br /&gt;Genius is the act of solving a problem in a way no one has solved it before. It has nothing to do with winning a Nobel prize in physics or certain levels of schooling. It's about using human insight and initiative to find original solutions that matter.&lt;br /&gt;Genius is actually the eventual public recognition of dozens (or hundreds) of failed attempts at solving a problem. Sometimes we fail in public, often we fail in private, but people who are doing creative work are constantly failing.&lt;br /&gt;When the lizard brain kicks in and the resistance slows you down, the only correct response is to push back again and again and again with one failure after another. Sooner or later, the lizard will get bored and give up.&lt;br /&gt;&lt;br /&gt;ps. sth about unix and bash file.&lt;br /&gt;The basic bash file introduction could refer to &lt;a href="http://tldp.org/HOWTO/Bash-Prog-Intro-HOWTO.html"&gt;here&lt;/a&gt;. &lt;br /&gt;&lt;a href="http://www.ibm.com/developerworks/aix/library/au-badunixhabits.html"&gt;UNIX tips: Learn 10 good UNIX usage habits&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.ibm.com/developerworks/aix/library/au-unixtips/?S_CMP=cn-a-aix&amp;amp;S_TACT=105AGX52"&gt;UNIX tips: Learn 10 more good UNIX usage habits&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;pps. sth about Graphviz&lt;br /&gt;1) &lt;a href="http://www.linux.com/archive/feed/49655"&gt;First step&lt;/a&gt; is to install it and know the basic syntax of the command line;&lt;br /&gt;2) Then, the &lt;a href="http://graphviz.org/Documentation/neatoguide.pdf"&gt;2nd step reading&lt;/a&gt; is also referred in the web page above;&lt;br /&gt;Besides, "&lt;a href="http://www.linuxjournal.com/article/7275"&gt;How to draw hash table&lt;/a&gt;" and &lt;a href="http://www.karakas-online.de/forum/viewtopic.php?t=2647"&gt;some other complicated graphs&lt;/a&gt; are both good start points to learn its software and language.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7653029458283595068/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/lisp.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7653029458283595068'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7653029458283595068'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/lisp.html' title='Lisp'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1468717986420347338</id><published>2011-03-10T12:45:00.000-06:00</published><updated>2011-03-10T12:45:02.870-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>Plan for the Spring break</title><content type='html'>Formal methods:&lt;br /&gt;1. Complete the 3rd homework before next Tuesday;&lt;br /&gt;2. Learn the basic syntax and methods about coding in Clojure;&lt;br /&gt;3. Check the relationship between Clojure and data flow programming;&lt;br /&gt;4. Write at least the abstract and introduction sections of the term paper.&lt;br /&gt;&lt;br /&gt;Computer vision:&lt;br /&gt;1. Learn how to run OpenCV and the codes from Josh and Birgi;&lt;br /&gt;2. Figure out the inputs and outputs of each program; &lt;br /&gt;3. Figure out how to deal with the video, such as: how to extract image? how to label or highlight some part of it? how to reproduce the stream of video via processed images? and etc.&lt;br /&gt;&lt;br /&gt;Communication Network:&lt;br /&gt;1. Rewrite the code of hw1 and hw2;&lt;br /&gt;2. Begin to read the TCP/IP book.&lt;br /&gt;&lt;br /&gt;sth should be done before on-site intv &lt;br /&gt;&lt;br /&gt;1. Read Coding Interview twice;&lt;br /&gt;2. Summarize Algorithm;&lt;br /&gt;3. Try hard to complete the Effective C++;&lt;br /&gt;4. Complete the writeup of self-intro;&lt;br /&gt;5. Grab the main idea about operating system and compiler;&lt;br /&gt;6. Look over the basic concepts about ComNtwk and DSP.&lt;br /&gt;--if this is your shot, you have to perform perfect.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1468717986420347338/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/plan-for-spring-break.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1468717986420347338'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1468717986420347338'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/plan-for-spring-break.html' title='Plan for the Spring break'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3668080781719156780</id><published>2011-03-10T01:26:00.001-06:00</published><updated>2011-03-10T01:26:37.756-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Work'/><title type='text'>fixed point arithmetic</title><content type='html'>There is a good introduction in &lt;a href="http://en.wikipedia.org/wiki/Fixed-point_arithmetic"&gt;wikipedia&lt;/a&gt;, which includes several useful external links at the end of the article. The &lt;a href="http://www.mathworks.com/help/toolbox/fixedpoint/ug/f6312.html"&gt;MATLAB&lt;/a&gt; also has quite a few functions dealing with this kind of problems, as well as a thorough introductory article. Besides, the &lt;a href="http://groups.google.com/group/comp.lang.c/browse_thread/thread/16fc49e7e6efe383?hl=en"&gt;comp.lang.c&lt;/a&gt; happen to take one inspiring discussion about it. All these things adding together shall definitely let me understand sufficient knowledge about this field of study.&lt;br /&gt;&lt;br /&gt;In addition, there are other resources from &lt;a href="http://www.edn.com/archives/1996/101096/21df_04.htm"&gt;TI&lt;/a&gt; and &lt;a href="http://www.eetimes.com/discussion/other/4024639/Fixed-point-math-in-C"&gt;article written by Joe Lemieux&lt;/a&gt; directly concerning the fixed point C programming.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3668080781719156780/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/fixed-point-arithmetic.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3668080781719156780'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3668080781719156780'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/fixed-point-arithmetic.html' title='fixed point arithmetic'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1675467013243021274</id><published>2011-03-08T10:46:00.006-06:00</published><updated>2011-03-10T12:36:26.354-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='jobhunting'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>some reflections</title><content type='html'>These days, I did lots of parallel programming. Although sometimes this activity does suffer from low efficiency, it do help me a lot  for further preparing and studying of coding. Like other routine work,  the more both of us prepared, the more efficient work we will have.  Besides, there are several points worth mentioning in retrospect:&lt;br /&gt;&lt;br /&gt;1) Format matters. Tab is a much better choice than several blanks. &lt;br /&gt;2) Comments also matter. It will help others know why I wrote in this manner and what the underlying idea for some blocks of code.&lt;br /&gt;3) Multiple screens are necessary: put severl UI in one screen, references in one, and debug windows in one. Cross referring among different dialogs and different screens is one way to improve efficiency. &lt;br /&gt;4) As long as employ oneself in the subject, it will be more  straightforward to achieve goals. After all, coding is only  time-consuming in one aspect.&lt;br /&gt;5) The use of short-cuts in vim definitely will improve the efficiency, and also seems like more professional:)&lt;br /&gt;6) People will only accept suggestions when they know nothing about it. So, at most of the time, the better choice is just keeping quite and getting your own work done. &lt;br /&gt;7) Reading more, practice more, improve faster.&lt;br /&gt;&lt;br /&gt;Update:&lt;br /&gt;&lt;br /&gt;Below is something I read from a &lt;a href="http://jacquesmattheij.com/The+need+to+code"&gt;programmer's blog&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;At the time I was a fanatic chess player and my 'dream' was to  build a  chess program. Of course that was a fairly advanced thing to  do, in the  end my knowledge of computer programming, and my theoretical  knowledge  of chess, the memory of the computer, and the available  time, they all  limited me to writing a program that could do one of two  end games (KQ  vs K and KR vs K). &lt;br /&gt;Looking back over all those  years (I'm 45 now), I don't think there  ever was a time when I wasn't  programming or thinking about programming  in some way or another since I  gained that first little bit of insight  into what makes a computer  tick.&lt;br /&gt;&lt;br /&gt;It's like a drug. I'm still fascinated by it, even almost 30  years to  the day later I still read about languages, new ways to solve  old  problems, all kinds of developments in software and hardware, as  though  it is the first time that I hear about these things. It is a  fascinating  world, the world of software. &lt;br /&gt;It has changed  tremendously over that time, our 'small' computers of  today are more  powerful than the biggest 'big iron' that you could buy  when I was a  kid. Your average cell phone has more storage, computing  power, and  bandwidth available to it than a mainframe of 30 years ago.  Programming  itself has changed, from 'batch' programming to more and  more  interactive code, 'web' development and so on. But it has also - in   essence - remained the same, small building blocks are piled on top of   each other to create more complex constructs, which in turn can be used   to create yet more complex constructs, and so on.&lt;br /&gt;&lt;br /&gt;That process, the act of programming, is something that I &lt;i&gt;need&lt;/i&gt;   to do. Whether to make a living or to be fooling around with some  idea,  the bug is in my system and I highly doubt that it will ever  leave me  permanently. I can see myself taking a break, but I can't see  myself  ever stopping. All I'll end up doing then is to change my mode  from work  to play and eventually that will lead back to some form of  work.&lt;br /&gt;&lt;br /&gt;If you can't program yet, or if you think that it is  'complex', rest  assured, there is nothing that can't be learned.  Programming is not like  playing a musical instrument, and it is not  something that you have to  have a genetic disposition for. The pay-off  is in how much time you  spend plugging away at it. Over time you'll get  better, and at some  point it will click. It may take a while (it took  me more than a year to  learn 'BASIC', which is a very simple language)  and I gave up several  times only to go back to it once more.  Eventually, I got it, and I'm  sure that everybody that can do basic  arithmetic and that is able to put  together a precise list of  instructions on how to make coffee or a  pizza can learn how to program.&lt;br /&gt;&lt;br /&gt;Maybe you won't be the next Donald Knuth, but that's not what it   takes, all you need to be is a little bit better than you were  yesterday  and to keep doing that for a long time.&lt;br /&gt;&lt;br /&gt;Beware of that bug though, once it bites you, you'll be hooked for life.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1675467013243021274/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/these-days-i-did-lots-of-parallel.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1675467013243021274'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1675467013243021274'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/these-days-i-did-lots-of-parallel.html' title='some reflections'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2991402729680455962</id><published>2011-03-07T11:55:00.001-06:00</published><updated>2011-03-07T11:56:11.665-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='jobhunting'/><title type='text'>advices about resume</title><content type='html'>Reading the articles written by &lt;a href="http://www.joelonsoftware.com/articles/ResumeRead.html"&gt;Joel&lt;/a&gt; sometimes feels frustrated. But, anyway, they are also illustrated. Here is another post about how to write readable resume:&lt;br /&gt;======&lt;br /&gt;&lt;br /&gt;# Proofread everything a hundred times and have one other person proofread it. Someone who got really good grades in English.&lt;br /&gt;&lt;br /&gt;# Write a personal cover letter that is customized for the job you are applying for. Try to sound like a human in the cover letter. You want people to think of you as a human being. &lt;br /&gt;&lt;br /&gt;# Don't apply for too many jobs. I don't think there's ever a reason to apply for more than three or four jobs at a time. Résuméspam, or any sign that you're applying for 100 jobs, just makes you look desperate which makes you look unqualified. You want to look like you are good enough to be in heavy demand. You're going to decide where you want to work, because you're smart enough to have a choice in the matter, so you only need to apply for one or two jobs. A personalized cover letter that shows that you understand what the company does goes a long way to proving that you care enough to deserve a chance. &lt;br /&gt;&lt;br /&gt;# What we're really looking for when we look at résumés is someone who is passionate and successful at whatever they try to do. We like people who are passionate about software. Writing a shareware app when you're a teenager is just as good a qualification to us as getting into MIT. This is your life story, and by the time you're applying for a job it's probably too late to change that.&lt;br /&gt;&lt;br /&gt;# The number one best way to get someone to look at your resume closely: come across as a human being, not a list of jobs and programming languages.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2991402729680455962/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/advices-about-resume.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2991402729680455962'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2991402729680455962'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/advices-about-resume.html' title='advices about resume'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-865933168134854226</id><published>2011-03-06T10:42:00.000-06:00</published><updated>2011-03-06T10:42:14.320-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><category scheme='http://www.blogger.com/atom/ns#' term='Work'/><title type='text'>Comparing file diff in Ubuntu</title><content type='html'>I am still familiar with the highlighted view for differences rather than the "diff" command, which produces the results in a "+/-" form. After a easy google, the Meld turns out be one good alternative solution for this purpose. &lt;a href="http://meld.sourceforge.net/"&gt;Here&lt;/a&gt; is its web page.&lt;br /&gt;&lt;br /&gt;Just one step to do:&lt;br /&gt;$ sudo apt-get install meld&lt;br /&gt;&lt;br /&gt;Then, you will find the Meld in Application-&amp;gt;Programming directory.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Have fun.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/865933168134854226/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/comparing-file-diff-in-ubuntu.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/865933168134854226'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/865933168134854226'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/comparing-file-diff-in-ubuntu.html' title='Comparing file diff in Ubuntu'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4805326380079004670</id><published>2011-03-04T10:07:00.000-06:00</published><updated>2011-03-04T10:07:00.435-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='jobhunting'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>some basic C/C++ questions</title><content type='html'>&lt;span id="internal-source-marker_0.4999975798251227" style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;1) What are some of the main differences between a linked list and an array?&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Arrays are faster in access than a link list for random access with index.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Arrays are not dynamic while a link list is.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Arrays are easier to sort than a link list.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;The elements of link list can be deleted/inserted while arrays cannot.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Arrays occupy the same block of memory, while a link list is distributed.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Array objects are automatically created by a compiler, while link lists are not.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Arrays are part of most compilers, while link lists are not.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Arrays are syntactically simple to read.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;2) What are the differences between struct, class and union?&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Struct,  class and union all contain data members and methods. However, a struct  and union have their member’s public by default, while the class  members are private by default. Also, a struct cannot contain an  instance of itself. A union cannot be used as a base class in  inheritance. None of a union's data members can be declared static and  none of its functions can be virtual.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;3) What are virtual functions?&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Virtual  functions are functions whose behavior is known at runtime rather than  at compile time. Due to this behavior, it can be said that virtual  functions implement Polymorphism. In other words, preceding a function  name with virtual in the base class means that that function is intended  to be re-implemented (overridden) in the sub-class.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;4) Explain the mechanism of virtual functions and virtual function tables.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Whenever  a class member function is declared as virtual, the compiler creates a  virtual table in memory which contains all function pointers that are  declared as virtual in that class. This enables run time polymorphism  (i.e. finding out the desired function at run time). Virtual function  tables also have an additional pointer in the object to the vtable. As  this additional pointer and the vtable increases the size of the object,  a class designer needs to be judicious about declaring functions  virtual. The sequence of events upon calling a method on the base object  pointer is:&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Get vtable pointer (this vtable pointer points to the beginning of the vtable).&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Get the function pointers in the vtable using offset.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Invoke the function indirectly through the vtable pointer.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;5) Given a singly linked list and a pointer to a certain node in the list, how would you delete that node in constant time?&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;First  of all, check if this node is the last node in the list. If not, copy  the contents of the next node to the current node, and delete the next  node.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;6) What are recursive functions? What are the advantages and disadvantages of recursive algorithms?&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;A  function that calls itself repeatedly, satisfying some condition, is  called a Recursive Function. In my point of view, the recursive  functions should be avioded at most of the time via the "while" loop  sentence. However, on the other hand, some problems inherently are  better suited for recursion, such as Fibonacci series generation.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Some  advantages of recursive algorithms are: concise in terms of source  code; and looking more elegant. The disadvantages of recursion include:  requiring more of stack than non-recursive algorithms, due to several  activation stacks for each call of the function; and correcting or  testing recursive functions would require a lot of careful thinking.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;7) What leads to code-bloating in C++?&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Inline  functions and templates, if not used properly, may lead to code  bloating. Multiple Inheritance may also lead to code bloating (this is  because the sub classes will end up getting members from all the base  classes even if only few members will suffice).&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Inline  is great. Reasons: They look like functions, they act like functions,  they're ever so much better than macros (Whenever you write a macro, you  have to remember to parenthesize all the arguments in the macro body.  Otherwise you can run into trouble when somebody calls the macro with an  expression. On the contrary, inline funtions do not have that kind of  troubles), and you can call them without having to incur the overhead of  a function call. Moreover, as inlining a function, it may enable  compilers to perform context-specific optimizations on the body of the  function. Most compilers never perform such optimizations on "outlined"  function calls.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;However,  the idea behind an inline function is to replace each call of that  function with its code body, which is likely to increase the size of  your object code. On machines with limited memory, overzealous inlining  can give rise to programs that are too big for the available space. Even  with virtual memory, inline-induced code bloat can lead to additional  paging, a reduced instruction cache hit rate, and the performance  penalties that accompany these things.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Solution:  Initially, don't inline anything, or at least limit your inlining to  those functions that must be inline (eg. functions defined inside a  class which are implicitly declared inline) or are truly trivial (such  as Person::age). By employing inlines cautiously, you facilitate your  use of a debugger, but you also put inlining in its proper place: as a  hand-applied optimization. Don't forget the empirically determined rule  of 80-20, which states that a typical program spends 80% of its time  executing only 20% of its code. It's an important rule, because it  reminds you that your goal as a software developer is to identify the  20% of your code that can increase your program's overall performance.  You can inline and otherwise tweak your functions until the cows come  home, but it's wasted effort unless you're focusing on the right  functions.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;8) What are references in C++? Why do you need them when you have pointers?&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Reference  variables are internally implemented as a pointer; it’s just that  programmers can't use it the way they use pointers. As a side note, a  reference must refer to some object at all times, but a pointer can  point to NULL. In this way, references can be more efficient when you  know that you'll always have an object to point to, because you don't  have to check against NULL.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;9)  How do you do dynamic memory allocation in C applications? List  advantages and disadvantages of dynamic memory allocation vs. static  memory allocation.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;In C, malloc, calloc and realloc are used to allocate memory dynamically. In C++, new(), is usually used to allocate objects.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Advantage  is that memory is allocated on an as-needed basis, which helps remove  the inefficiencies inherent to static memory allocation, that is when  the amount of memory needed is not known at compile time and one has to  make a guess.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Disadvantages:  1) dynamic memory allocation is slower than static memory allocation,  because dynamic memory allocation happens in the heap area; 2) dynamic  memory needs to be carefully deleted after use, because they are created  in non-contiguous area of memory segment, and if not properly handled,  the operations would cause memory fragmentation; 3) dynamic memory  allocation causes contention between threads, so it degrades performance  when it happens in a thread.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;10) What are constructors and destructors?&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Constructors and destructors are provisions for initialization and cleanup of objects.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;A  constructor is a special member function with the same name as the  Class. It is invoked automatically when the object is created. It  usually contains initialization code for member variables and allocation  of memory. There can be multiple overloaded constructors, with  different input arguments, used to initialize the object in a variety of  ways.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;A  destructor is a special member function that is called just before an  object is destroyed. For example, when the object variable goes out of  scope. It is used to perform cleanup. There can be only one destructor.  Its name is ‘~’ followed by the class name.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;11) What happens if an error occurs in a constructor or destructor?&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Constructors  don't have a return type, so it's not possible to use error codes. The  best way to signal constructor failure is therefore to throw an  exception. However, keep in mind that the memory for the object itself  is released, and the destructors for all sub-objects (i.e. members and  base classes) whose constructors have successfully run to completion  will be called, which will consquently cause memory leak by the object  pointer.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;12) Differentiate between a copy constructor and an assignment operator.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;The  copy constructor is used to copy an object to a newly created object.  This is used during initialization and not during ordinary assignment.  The copy constructor is invoked whenever a new object is created and  initialized to an existing object of the same kind.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;In  other words, the assignment operator handles assigning one object to  another of the same class. If a statement creates a new object it is  using initialization. If it alters the value of an existing object it is  assignment.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;13) What are virtual destructors?&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Destructor  implemented by declaring a base class’s destructor with the keyword  virtual is called a virtual destructor. A virtual destructor ensures  that, when delete is applied to a base class pointer or reference, it  calls the destructor implemented in the derived class, if an  implementation exists.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Let’s  take the simplest polymorphic relation: A - base class, B - class  derived from A. If we've got a pointer (or reference) to class A, but  under the hood it is an object of type B, and we're trying to delete the  object, declaration of virtual destructor in class A ensures that the  destructor of class B will be called.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;B* b = new B;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;A* a = b //due to polymorphism!&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;delete a; // both A and B destructors are called.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;14)  What is multiple inheritance? What are the potential pitfalls of  multiple inheritance? How would you avoid multiple inheritance?&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Deriving  a class from more than one direct base class is called multiple  inheritance. Note that the order of derivation is relevant only to  determine the order of default initialization by constructors and  cleanup by destructors.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Potential  pitfalls of Multiple Inheritance are: 1) Ambiguity; 2) slow; 3) The  “Common Ancestor” problem: For example, if class B and class C derived  from class A and if class D derived from class B and class C, then class  D will have 2 copies of class A that might lead to inconsistency, as  the class doesn't know which copy it is viewing.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;15) What is exception handling? What are the advantages of exception handling?&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Exceptions  are an alternative to function return values. The big differences are:  1) Exceptions cannot be ignored. They must be caught or the app will  crash. It is a way of forcing the caller of a function to deal with an  exceptional condition. 2) It is also an improvement over return values,  because you can put all possible values of your return type to good use,  instead of having to dedicate one or more values as the "invalid"  value. 3) In addition, exceptions allow you to jump out of deeply nested  function calls conveniently, avoiding a lot of return type checking and  conditional statements.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;16) What is the difference between new()/delete() and malloc()/free ()?&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;The  main difference is that malloc() and free() don't know anything about  constructors and destructors, where as new and delete do. The following  lists the main differences: 1) new automatically computes the size of  the data object. In malloc you would have to use the sizeof operator. 2)  new automatically returns the correct pointer type. In malloc you would  have to use a type cast. 3) with new you can initialize the object  while creating the object. 4) new and delete can be overloaded. 5) It's  safe to delete a NULL pointer, but you'll get core dump to free a NULL  pointer.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;17) Describe different types of polymorphism available in C++.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;1.  Compile time polymorphism; 2. Runtime Polymorphism. Operator  overloading and Function Overloading are the examples for compile time  polymorphism. Using Virtual Functions we will achieve run time  polymorphism.&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;Computer Network&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="background-color: transparent; color: black; font-family: Arial; font-size: 11pt; font-style: normal; font-weight: normal; text-decoration: none; vertical-align: baseline;"&gt;The  Internet Protocol (IP) is a key part of the mechanism for transferring  data across the internet. Information is broken into small packets, and  the IP is responsible for relaying and routing them around the system by  identifying and locating hosts. The current version is IPv4, and  because it is made up in sets of 32 bits, it is limited to having just  under 4.3 billion addresses. It seems like a lot but they are almost all  used up.&lt;/span&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4805326380079004670/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/some-basic-cc-questions.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4805326380079004670'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4805326380079004670'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/some-basic-cc-questions.html' title='some basic C/C++ questions'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5903165289488497112</id><published>2011-03-03T15:40:00.000-06:00</published><updated>2011-03-03T15:40:08.586-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>interview at the point of interviewer</title><content type='html'>also comes from&amp;nbsp;&lt;a href="http://www.joelonsoftware.com/articles/GuerrillaInterviewing3.html"&gt;Joel on software&lt;/a&gt; &lt;br /&gt;&lt;br /&gt;How do you detect smart in an interview? The first good sign is that you don’t have to explain things over and over again. The conversation just flows. Often, the candidate says something that shows real insight, or brains, or mental acuity. So an important part of the interview is creating a situation where someone can show you how smart they are. Remember, smart does not mean “knows the answer to trivia questions.” Anyway, software teams want to hire people with aptitude, not a particular skill set. Any skill set that people can bring to the job will be technologically obsolete in a couple of years, anyway, so it’s better to hire people that are going to be able to learn any new technology rather than people who happen to know how to make JDBC talk to a MySQL database right this minute. In general, the way to learn the most about a person is to let them do the talking. Give them open-ended questions and problems.&lt;br /&gt;&lt;br /&gt;That’s just a list of questions that I want to ask. Here’s a typical plan for interviewing a programmer:&lt;br /&gt;&lt;br /&gt;1. Introduction&lt;br /&gt;2. Question about recent project candidate worked on&lt;br /&gt;3. Easy Programming Question&lt;br /&gt;4. Pointer/Recursion Question&lt;br /&gt;5. Are you satisfied?&lt;br /&gt;6. Do you have any questions? &lt;br /&gt;&lt;br /&gt;What should you look for during the open ended questions?&lt;br /&gt;&lt;br /&gt;One: Look for passion. Smart people are passionate about the projects they work on. They get very excited talking about the subject. They talk quickly, and get animated. Being passionately negative can be just as good a sign. “My last boss wanted to do everything on VAX computers because it was all he understood. What a dope!” There are far too many people around that can work on something and not really care one way or the other. It’s hard to get people like this motivated about anything.&lt;br /&gt;&lt;br /&gt;Bad candidates just don’t care and will not get enthusiastic at all during the interview. A really good sign that a candidate is passionate about something is that when they are talking about it, they will forget for a moment that they are in an interview. Sometimes a candidate comes in who is very nervous about being in an interview situation—this is normal, of course, and I always ignore it. But then when you get them talking about Computational Monochromatic Art they will get extremely excited and lose all signs of nervousness. Good. I like passionate people who really care. (To see an example of Computational Monochromatic Art try unplugging your monitor.) You can challenge them on something (try it—wait for them to say something that’s probably true and say “that couldn’t be true”) and they will defend themselves, even if they were sweating five minutes ago, because they care so much they forget that you are going to be making Major Decisions About Their Life soon.&lt;br /&gt;&lt;br /&gt;Two: Good candidates are careful to explain things well, at whatever level. I have rejected candidates because when they talked about their previous project, they couldn’t explain it in terms that a normal person could understand. Often CS majors will just assume that everyone knows what Bates Theorem is or what O(log n) means. If they start doing this, stop them for a minute and say, “could you do me a favor, just for the sake of the exercise, could you please explain this in terms my grandmother could understand.” At this point many people will still continue to use jargon and will completely fail to make themselves understood. Gong! You don’t want to hire them, basically, because they are not smart enough to comprehend what it takes to make other people understand their ideas.&lt;br /&gt;&lt;br /&gt;Three: If the project was a team project, look for signs that they took a leadership role. A candidate might say, “We were working on X, but the boss said Y and the client said Z.” I’ll ask, “So what did you do?” A good answer to this might be “I got together with the other members of the team and wrote a proposal…” A bad answer might be, “Well, there was nothing I could do. It was an impossible situation.” Remember, Smart and Gets Things Done. The only way you’re going to be able to tell if somebody Gets Things Done is to see if historically they have tended to get things done in the past. In fact, you can even ask them directly to give you an example from their recent past when they took a leadership role and got something done—overcoming some institutional inertia, for example.&lt;br /&gt;&lt;br /&gt;Most of the time in the interview, though, should be spent letting the candidate prove that they can write code. Reassure candidates that you understand that it’s hard to write code without an editor, and you will forgive them if the whiteboard gets really messy. Also you understand that it’s hard to write bug-free code without a compiler, and you will take that into account.&lt;br /&gt;&lt;br /&gt;These softball questions seem too easy, so when I first started asking them, I had to admit that I really expected everyone to sail right through them. What I discovered was that everybody solved the problem, but there was a lot of variation in how long it took them to solve. That reminded me of why I couldn’t trade bonds for a living (http://www.joelonsoftware.com/articles/GuerrillaInterviewing3.html), which means that if the basic concepts aren’t so easy that you don’t even have to think about them, you’re not going to get the big concepts. You see, if you can’t whiz through the easy stuff at 100 m.p.h., you’re never gonna get the advanced stuff.&lt;br /&gt;&lt;br /&gt;15 years of experience interviewing programmers has convinced me that the best programmers all have an easy aptitude for dealing with multiple levels of abstraction simultaneously. In programming, that means specifically that they have no problem with recursion (which involves holding in your head multiple levels of the call stack at the same time) or complex pointer-based algorithms (where the address of an object is sort of like an abstract representation of the object itself). Furthermore, I’ve come to realize that understanding pointers in C is not a skill, it’s an aptitude. Pointers require a complex form of doubly-indirected thinking that some people just can’t do, and it’s pretty crucial to good programming. A lot of the “script jocks” who started programming by copying JavaScript snippets into their web pages and went on to learn Perl never learned about pointers, and they can never quite produce code of the quality you need.&lt;br /&gt;&lt;br /&gt;That’s the source of all these famous interview questions you hear about, like “reversing a linked list” or “detect loops in a tree structure.” Even though the format of the interview is, superficially, just a candidate writing some code on the whiteboard, my real goal here is to have a conversation about it. “Why did you do it that way?” “What are the performance characteristics of your algorithm?” “What did you forget?” “Where’s your bug?”&lt;br /&gt;&lt;br /&gt;That means I don’t really mind giving programming problems that are too hard, as long as the candidate has some chance of starting out, and then I’m happy to dole out little hints along the way, little toeholds, so to speak. I might ask someone, say, to project a triangle onto a plane, a typical graphics problem, and I don’t mind helping them with the trig (SOH-CAH-TOA, baby!), and when I ask them how to speed it up, I might drop little hints about look-up tables. Notice that the kinds of hints I’m happy to provide are really just answers to trivia questions—the kinds of things that you find on Google.&lt;br /&gt;&lt;br /&gt;Inevitably, you will see a bug in their function. So we come to question five from my interview plan: “Are you satisfied with that code?” You may want to ask, “OK, so where’s the bug?” The quintessential Open Ended Question From Hell. All programmers make mistakes, there’s nothing wrong with that, they just have to be able to find them. With string functions in C, most college kids forget to null-terminate the new string. With almost any function, they are likely to have off-by-one errors. They will forget semicolons sometimes. Their function won’t work correctly on 0 length strings, or it will GPF if malloc fails… Very, very rarely, you will find a candidate that doesn’t have any bugs the first time. In this case, this question is even more fun. When you say, “There’s a bug in that code,” they will review their code carefully, and then you get to see if they can be diplomatic yet firm in asserting that the code is perfect.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5903165289488497112/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/interview-at-point-of-interviewer.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5903165289488497112'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5903165289488497112'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/interview-at-point-of-interviewer.html' title='interview at the point of interviewer'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4239658780640406420</id><published>2011-03-03T12:26:00.008-06:00</published><updated>2011-03-03T12:54:20.703-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>XML is a Dumb Format For Storing Data</title><content type='html'>originally wrote by&amp;nbsp;&lt;a href="http://www.joelonsoftware.com/articles/fog0000000296.html"&gt;Joel Spolsky&lt;/a&gt; &lt;br /&gt;&lt;br /&gt;I'm not sure why XML got so sexy. It has its advantages; it's sure a good idea for data interchange or for all those little files you need to store settings. But for real work it just can't do what a solid, multiuser, relational database can do. The next time some uninformed analyst at Gartner or Giga or Forrester tells you "in the future, everything will be XML," ask them how to do "SELECT author FROM books" fast with XML. Hint: you can't. It has to be slow. XML is not the way to store a lot of data. Now tell me how to insert a new book at the beginning of the table without massive bitblts. Of course, I doubt if there is an analyst in one of those companies who would even understand that sentence, but that's life. Now lets look at the books table in XML.&lt;br /&gt;&lt;br /&gt;&amp;lt;?xml blah blah&amp;gt;&lt;br /&gt;&amp;lt;books&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;book&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;title&amp;gt;UI Design for Programmers&amp;lt;/title&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;author&amp;gt;Joel Spolsky&amp;lt;/author&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/book&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;book&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;title&amp;gt;The Chop Suey Club&amp;lt;/title&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;author&amp;gt;Bruce Weber&amp;lt;/author&amp;gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;lt;/book&amp;gt;&lt;br /&gt;&amp;lt;/books&amp;gt;&lt;br /&gt;&lt;br /&gt;Quick question. What is the code to move to the next record?&lt;br /&gt;&lt;br /&gt;Uh...&lt;br /&gt;&lt;br /&gt;At this point a good programmer would say, well, let's parse the XML into a tree in memory so that we can operate on it reasonably quickly. The amount of work that has to be done here by the CPU to SELECT author FROM books will bore you absolutely to tears. As every compiler writer knows, lexing and parsing are the slowest part of compiling. Suffice it to say that it involves a lot of string stuff, which we discovered is slow, and a lot of memory allocation stuff, which we discovered is slow, as we lex, parse, and build an abstract syntax tree in memory. That assumes that you have enough memory to load the whole thing at once. With relational databases, the performance of moving from record to record is fixed and is, in fact, one CPU instruction. That's very much by design. And thanks to memory mapped files you only have to load the pages of disk that you are actually going to use. With XML, if you preparse, the performance of moving from record to record is fixed but there's a huge startup time, and if you don't preparse, the performance of moving from record to record varies based on the length of the record before it and is still hundreds of CPU instructions long.&lt;br /&gt;&lt;br /&gt;What this means to me is that you can't use XML if you need performance and have lots of data. If you have a little bit of data, or if what you're doing doesn't have to be fast, XML is a fine format. And if you really want the best of both worlds, you have to come up with a way to store metadata next to your XML, something like Pascal strings' byte count, which give you hints about where things are in the file so that you don't have to parse and scan for them. But of course then you can't use text editors to edit the file because that messes up the metadata, so it's not really XML anymore.&lt;br /&gt;&lt;br /&gt;------ &lt;br /&gt;By the way, when I published this digest from Joel, I have no idea how to put the HTML code in my blog contents. Here is the &lt;a href="http://www.digipassion.com/2009/02/writing-html-code-inside-post.html"&gt;solution&lt;/a&gt;, and the full table of escape characters are &lt;a href="http://www.theukwebdesigncompany.com/articles/entity-escape-characters.php"&gt;here&lt;/a&gt;.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4239658780640406420/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/xml-is-dumb-format-for-storing-data.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4239658780640406420'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4239658780640406420'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/xml-is-dumb-format-for-storing-data.html' title='XML is a Dumb Format For Storing Data'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1574889541589004365</id><published>2011-03-02T10:37:00.002-06:00</published><updated>2011-03-03T12:17:13.619-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>some advices about low-level programming</title><content type='html'>see also &amp;lt;&lt;a href="http://www.joelonsoftware.com/articles/fog0000000319.html"&gt;Back to Basic&lt;/a&gt;&amp;gt;&lt;br /&gt;reference &amp;lt;&lt;a href="http://www.joelonsoftware.com/articles/CollegeAdvice.html"&gt;Advice for Computer Science College Students&lt;/a&gt;&amp;gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Learn how to write&lt;br /&gt;&lt;br /&gt;The difference between a tolerable programmer and a great programmer is not how many programming languages they know, and it's not whether they prefer Python or Java. It's whether they can communicate their ideas. By persuading other people, they get leverage. By writing clear comments and technical specs, they let other programmers understand their code, which means other programmers can use and work with their code instead of rewriting it. Absent this, their code is worthless. By writing clear technical documentation for end users, they allow people to figure out what their code is supposed to do, which is the only way those users can see the value in their code. There's a lot of wonderful, useful code buried on sourceforge somewhere that nobody uses because it was created by programmers who don't write very well (or don't write at all), and so nobody knows what they've done and their brilliant code languishes.&lt;br /&gt;&lt;br /&gt;If you can write, wherever you get hired, you'll soon find that you're getting asked to write the specifications and that means you're already leveraging your influence and getting noticed by management. Start a journal or weblog. The more you write, the easier it will be, and the easier it is to write, the more you'll write, in a virtuous circle.&lt;br /&gt;&lt;br /&gt;Learn C&lt;br /&gt;&lt;br /&gt;C. Notice I didn't say C++. Although C is becoming increasingly rare, it is still the lingua franca of working programmers. It is the language they use to communicate with one another, and, more importantly, it is much closer to the machine than "modern" languages that you'll be taught in college like ML, Java, Python, whatever trendy junk they teach these days. You need to spend at least a semester getting close to the machine or you'll never be able to create efficient code in higher level languages. You'll never be able to work on compilers and operating systems, which are some of the best programming jobs around. You'll never be trusted to create architectures for large scale projects. I don't care how much you know about continuations and closures and exception handling: if you can't explain why "while (*s++ = *t++);" copies a string, or if that isn't the most natural thing in the world to you, well, you're programming based on superstition, as far as I'm concerned: a medical doctor who doesn't know basic anatomy, passing out prescriptions based on what the pharma sales babe said would work.&lt;br /&gt;&lt;br /&gt;some special cases to indicate this point&lt;br /&gt;char bigString[1000];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; /* I never know how much to allocate... */ &lt;br /&gt;bigString[0] = '\0';&lt;br /&gt;strcat(bigString,"John, ");&lt;br /&gt;strcat(bigString,"Paul, "); &lt;br /&gt;strcat(bigString,"George, "); &lt;br /&gt;strcat(bigString,"Joel ");&lt;br /&gt;&lt;br /&gt;The time consumption will increase as the n^2, where n indicates the number of characters that have already in the char array, for the reason that every time the strcat will begin to search at the beginning of the array. To reduce the runtime decrease as linear as input number of values:&lt;br /&gt;char* mystrcat( char* dest, char* src ) &lt;br /&gt;{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; while (*dest) dest++; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; while (*dest++ = *src++);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; return --dest;&lt;br /&gt;}&lt;br /&gt;char bigString[1000];&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; /* I never know how much to allocate... */&lt;br /&gt;char *p = bigString; &lt;br /&gt;bigString[0] = '\0'; &lt;br /&gt;p = mystrcat(p,"John, ");&lt;br /&gt;p = mystrcat(p,"Paul, "); &lt;br /&gt;p = mystrcat(p,"George, ");&lt;br /&gt;p = mystrcat(p,"Joel ");&lt;br /&gt;&lt;br /&gt;The designers of Pascal were aware of this problem and "fixed" it by storing a byte count in the first byte of the string. These are called Pascal Strings. They can contain zeros and are not null terminated. Because a byte can only store numbers between 0 and 255, Pascal strings are limited to 255 bytes in length, but because they are not null terminated they occupy the same amount of memory as ASCIZ strings. The great thing about Pascal strings is that you never have to have a loop just to figure out the length of your string. Finding the length of a string in Pascal is one assembly instruction instead of a whole loop. It is monumentally faster.&lt;br /&gt;&lt;br /&gt;The old Macintosh operating system used Pascal strings everywhere. Many C programmers on other platforms used Pascal strings for speed. Excel uses Pascal strings internally which is why strings in many places in Excel are limited to 255 bytes, and it's also one reason Excel is blazingly fast.&lt;br /&gt;&lt;br /&gt;For a long time, if you wanted to put a Pascal string literal in your C code, you had to write:&lt;br /&gt;&lt;br /&gt;char* str = "\006Hello!";&lt;br /&gt;&lt;br /&gt;Yep, you had to count the bytes by hand, yourself, and hardcode it into the first byte of your string. Lazy programmers would do this, and have slow programs:&lt;br /&gt;&lt;br /&gt;char* str = "*Hello!";&lt;br /&gt;str[0] = strlen(str) - 1;&lt;br /&gt;&lt;br /&gt;Notice in this case you've got a string that is null terminated (the compiler did that) as well as a Pascal string. I used to call these fucked strings because it's easier than calling them null terminated pascal strings but this is a rated-G channel so you will have use the longer name.&lt;br /&gt;&lt;br /&gt;Well, since we're looking at the bits today I shouldn't have ignored this. I should have done this correctly: figured out how many bytes I needed and allocated the right amount of memory. Shouldn't I have?&lt;br /&gt;&lt;br /&gt;Because otherwise, you see, a clever hacker will read my code and notice that I'm only allocating 1000 bytes and hoping it will be enough, and they'll find some clever way to trick me into strcatting a 1100 byte string into my 1000 bytes of memory, thus overwriting the stack frame and changing the return address so that when this function returns, it executes some code which the hacker himself wrote. This is what they're talking about when they say that a particular program has a buffer overflow susceptibility. It was the number one cause of hacks and worms in the olden days before Microsoft Outlook made hacking easy enough for teenagers to do.&lt;br /&gt;&lt;br /&gt;(bold malloc...)How does the malloc work? The nature of malloc is that it has a long linked list of available blocks of memory called the free chain. When you call malloc, it walks the linked list looking for a block of memory that is big enough for your request. Then it cuts that block into two blocks -- one the size you asked for, the other with the extra bytes, and gives you the block you asked for, and puts the leftover block (if any) back into the linked list. When you call free, it adds the block you freed onto the free chain. Eventually, the free chain gets chopped up into little pieces and you ask for a big piece and there are no big pieces available the size you want. So malloc calls a timeout and starts rummaging around the free chain, sorting things out, and merging adjacent small free blocks into larger blocks. This takes 3 1/2 days. The end result of all this mess is that the performance characteristic of malloc is that it's never very fast (it always walks the free chain), and sometimes, unpredictably, it's shockingly slow while it cleans up. (This is, incidentally, the same performance characteristic of garbage collected systems, surprise surprise, so all the claims people make about how garbage collection imposes a performance penalty are not entirely true, since typical malloc implementations had the same kind of performance penalty, albeit milder.)&lt;br /&gt;&lt;br /&gt;Smart programmers minimize the potential distruption of malloc by always allocating blocks of memory that are powers of 2 in size. You know, 4 bytes, 8 bytes, 16 bytes, 18446744073709551616 bytes, etc. For reasons that should be intuitive to anyone who plays with Lego, this minimizes the amount of weird fragmentation that goes on in the free chain. Although it may seem like this wastes space, it is also easy to see how it never wastes more than 50% of the space. So your program uses no more than twice as much memory as it needs to, which is not that big a deal. Furthermore, when you call realloc, you should always double the size of memory that was previously allocated. That means that you never have to call realloc more than lg n times, which has decent performance characteristics even for huge strings, and you never waste more than 50% of your memory.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1574889541589004365/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/some-advices.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1574889541589004365'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1574889541589004365'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/some-advices.html' title='some advices about low-level programming'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7385147181623761921</id><published>2011-03-01T22:45:00.004-06:00</published><updated>2011-03-15T11:44:15.500-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='jobhunting'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>tree search algorithm (cont.)</title><content type='html'>&amp;nbsp;The previous post is &lt;a href="http://creasywuqiong.blogspot.com/2011/02/tree-search-algorithms.html"&gt;here&lt;/a&gt;&lt;br /&gt;============ &lt;br /&gt;struct treeNode{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; int element;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; struct treeNode *left;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; struct treeNode *right;&lt;br /&gt;}:&lt;br /&gt;typedef struct treeNode *searchTree;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;searchTree makeEmpty(searchTree T){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(T!=NULL){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; MakeEmpty(T-&amp;gt;left);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; MakeEmpty(T-&amp;gt;right);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; free(T);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; return NULL;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;searchTree findVal(int val, searchTree T){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(T==NULL)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; return NULL;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(val&lt;t-&gt;element)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; return findVal(val, T-&amp;gt;left);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; else if(val&amp;gt;T-&amp;gt;element)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; return findVal(val, T-&amp;gt;right);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; return T;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;searchTree findMin(searchTree T){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(T!=NULL)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; while(T-&amp;gt;left!=NULL)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; T = T-&amp;gt;left;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; return T;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;searchTree insertVal(int val, searchTree T){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(T==NULL){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; T=(searchTree)malloc(sizeof(struct treeNode));&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if(T==NULL){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; printf("Error! There is no new memory to allocate.\n");&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; exit(0);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; T-&amp;gt;element = val;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; T-&amp;gt;left = T-&amp;gt;right = NULL;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; else{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if(val&lt;t-&gt;element)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; T-&amp;gt;left = insertVal(val, T-&amp;gt;left);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; else if(val&amp;gt;T-&amp;gt;element)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; T-&amp;gt;right = insertVal(val, T-&amp;gt;right);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; printf("The element has already in this tree.\n");&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; return T;&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;searchTree deleteVal( int val, searchTree T){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; searchTree temp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(T==NULL){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; printf("The element is not found.\n");&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; return NULL;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; else if(val&lt;t-&gt;element)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; T-&amp;gt;left = deleteVal(val, T-&amp;gt;left);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; else if(val&amp;gt;T-&amp;gt;element)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; T-&amp;gt;right = deleteVal(val, T-&amp;gt;right);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; else{&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; // here, find the specific element&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if(T-&amp;gt;left &amp;amp;&amp;amp; T-&amp;gt;right){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; temp = findMin(T-&amp;gt;right);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; T-&amp;gt;element = tmp-&amp;gt;element;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; T-&amp;gt;right = deleteVal(tmp-&amp;gt;element, T-&amp;gt;right);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; else{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; temp = T;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if(T-&amp;gt;left == NULL)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; T = T-&amp;gt;right;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; else if(T-&amp;gt;right==NULL)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; T = T-&amp;gt;left;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; free(temp);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; return T;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;// the functions below returns node which element is closest&lt;br /&gt;// and larger in the Tree. We could call it "next"&lt;br /&gt;// assumption1: the inputs are inquiry val and the root node&lt;br /&gt;searchTree nextLarger(int val, searchTree T){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; searchTree temp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(T==NULL){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; printf("There is no tree.\n");&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; return NULL;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(val&lt;t-&gt;element){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if(T-&amp;gt;left!=NULL){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; temp = T-&amp;gt;left;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; while(val&lt;temp-&gt;element &amp;amp;&amp;amp; temp-&amp;gt;left!=NULL){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; T = temp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; temp = temp-&amp;gt;left;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; // This case indicate "temp-&amp;gt;left==NULL" causes stop&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; // so temp should be the return value&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if(val&lt;temp-&gt;element)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; T = temp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; // otherwise, result might in a new right tree&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; // . or the parent node in this layer&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; else{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if (temp-&amp;gt;right!=NULL){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; temp = nextLarger(val, temp-&amp;gt;right);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if (temp!=NULL)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; T = temp;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; return T;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; else{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; while(val&amp;gt;=T-&amp;gt;element &amp;amp;&amp;amp; T-&amp;gt;right!=NULL)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; T = T-&amp;gt;right;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if(val&lt;t-&gt;element){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; T = nextLarger(val, T);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; return T;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; return NULL;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;// assumption2: the input value is a given node in the tree.&lt;br /&gt;// In this case, we might have to trace back.&lt;br /&gt;// As a resutl, the original struct needs a little modification&lt;br /&gt;struct treeNode{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; int element;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; struct treeNode *left;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; struct treeNode *right;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; struct treeNode *parenet;&amp;nbsp;&amp;nbsp;&amp;nbsp; // to trace back&lt;br /&gt;}:&lt;br /&gt;typedef struct treeNode *searchTree;&lt;br /&gt;&lt;br /&gt;searchTree nextLarger2(searchTree start){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; searchTree temp, record;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(start==NULL){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; printf("There is not a valid input.\n");&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; return NULL;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; if(start-&amp;gt;right!=NULL){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; start = findMin(start-&amp;gt;right);&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; return start;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; else if(start-&amp;gt;parent!=NULL){&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if(start == start-&amp;gt;parent-&amp;gt;left)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; return start;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; else{&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; while(start-&amp;gt;parent!=NULL &amp;amp;&amp;amp; start!=start-&amp;gt;parent-&amp;gt;left)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; start = start-&amp;gt;parent;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; if(start==start-&amp;gt;parent-&amp;gt;left)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; return start;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; else&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; return NULL;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;br /&gt;}&lt;/t-&gt;&lt;/temp-&gt;&lt;/temp-&gt;&lt;/t-&gt;&lt;/t-&gt;&lt;/t-&gt;&lt;/t-&gt;&lt;br /&gt;&lt;t-&gt;&lt;t-&gt;&lt;t-&gt;&lt;t-&gt;&lt;temp-&gt;&lt;temp-&gt;&lt;t-&gt;&lt;br /&gt;&lt;/t-&gt;&lt;/temp-&gt;&lt;/temp-&gt;&lt;/t-&gt;&lt;/t-&gt;&lt;/t-&gt;&lt;/t-&gt;&lt;br /&gt;&lt;t-&gt;&lt;t-&gt;&lt;t-&gt;&lt;t-&gt;&lt;temp-&gt;&lt;temp-&gt;&lt;t-&gt; // references: &amp;lt;&lt;a href="http://www.amazon.com/Introduction-Algorithms-Third-Thomas-Cormen/dp/0262033844/ref=sr_1_1?ie=UTF8&amp;amp;qid=1299041213&amp;amp;sr=8-1"&gt;Introduction to algorithms&lt;/a&gt;&amp;gt;, &amp;lt;&lt;a href="http://www.amazon.com/Cracking-Coding-Interview-Fourth-Programming/dp/145157827X/ref=sr_1_1?s=books&amp;amp;ie=UTF8&amp;amp;qid=1299041239&amp;amp;sr=1-1"&gt;Coding Interviews&lt;/a&gt;&amp;gt; &lt;/t-&gt;&lt;/temp-&gt;&lt;/temp-&gt;&lt;/t-&gt;&lt;/t-&gt;&lt;/t-&gt;&lt;/t-&gt;&lt;br /&gt;&lt;br /&gt;&lt;t-&gt;&lt;t-&gt;&lt;t-&gt;&lt;t-&gt;&lt;temp-&gt;&lt;temp-&gt;&lt;t-&gt;// I just did some terrible interviews these days. Yes, some, and terrible.&lt;br /&gt;// So, I wanna record everything here,&amp;nbsp;&lt;/t-&gt;&lt;/temp-&gt;&lt;/temp-&gt;&lt;/t-&gt;&lt;/t-&gt;&lt;/t-&gt;&lt;/t-&gt;&lt;br /&gt;&lt;t-&gt;&lt;t-&gt;&lt;t-&gt;&lt;t-&gt;&lt;temp-&gt;&lt;temp-&gt;&lt;t-&gt;// no matter how stupid and rudimentary it is.&lt;br /&gt;// Also as a means to push myself, everyday a step further.&lt;br /&gt;&lt;/t-&gt;&lt;/temp-&gt;&lt;/temp-&gt;&lt;/t-&gt;&lt;/t-&gt;&lt;/t-&gt;&lt;/t-&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7385147181623761921/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/tree-search-algorithm-cont.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7385147181623761921'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7385147181623761921'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/03/tree-search-algorithm-cont.html' title='tree search algorithm (cont.)'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6721677418403944969</id><published>2011-02-28T14:12:00.001-06:00</published><updated>2011-03-15T11:45:23.200-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>tree search algorithms</title><content type='html'>// Breadth-First Search &lt;br /&gt;// The tricky part is that we have to know the entire info. about &lt;br /&gt;// the graph, which indicates in the link-matrix graphmatrix &lt;br /&gt;&lt;br /&gt;struct node{ &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;int color;&amp;nbsp;&amp;nbsp; &amp;nbsp;// 0-white, 1-grey, 2-black &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;int index;&amp;nbsp;&amp;nbsp; &amp;nbsp;// fount order &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;int d; &amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;// distance to the root &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;struct node *parent; &lt;br /&gt;}; &lt;br /&gt;typedef struct node* Node; &lt;br /&gt;&lt;br /&gt;void buildBFS1(int *graphmatrix, Node graph, Node start){ &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;int i=0, n, head, tail; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;Node queue;&amp;nbsp;&amp;nbsp; &amp;nbsp;// used as stack to do BFS &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;Node temp; &lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;while(graph[i]!=NULL){ &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[i].color = 0; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[i].index = i; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[i].parent = NULL; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[i].d = 0; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;i++; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;} &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;n = i; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;start-&amp;gt;color = 1; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;queue = (Node)malloc(n*sizeof(Node));&amp;nbsp;&amp;nbsp; &amp;nbsp;// not sure here... &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;head = tail = 0; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;enqueue(queue, &amp;amp;tail, start); &lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;while(!isEmpty(head, tail)){ &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;temp = dequeue(queue, &amp;amp;head); &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;for (i=0; i&lt;n; i++){=""&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(graphMatrix[temp-&amp;gt;index][i]!=0){ &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(graph[i].color==0){ &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[i].color = 1; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[i].d = temp-&amp;gt;d+1; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[i].parent = temp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;enqueue(queue, &amp;amp;tail, graph[i]); &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;} &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;} &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;} &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;temp-&amp;gt;color = 2; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;} &lt;br /&gt;} &lt;br /&gt;&lt;br /&gt;void initQueue(int *head, int *tail){ &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;*head = *tail =0; &lt;br /&gt;} &lt;br /&gt;&lt;br /&gt;void enqueue(Node q, int *tail, Node element){ &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;q[(*tail)++]=element; &lt;br /&gt;} &lt;br /&gt;&lt;br /&gt;Node dequeue(Node q, int *head){ &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;return q[(*head)++]; &lt;br /&gt;} &lt;br /&gt;&lt;br /&gt;int isEmpty(int head, int tail){ &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;return head==tail? 1:0; &lt;br /&gt;} &lt;br /&gt;&lt;br /&gt;int isFull(int tail, const int size){ &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;return tail==size? 1:0; &lt;br /&gt;} &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;// Depth-First Search &lt;br /&gt;// has more knowledge about the structure of the tree &lt;br /&gt;// at the cost of a more complicated struct &lt;br /&gt;&lt;br /&gt;struct node{ &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;int index; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;int color; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;int detected; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;int finished; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;struct node *parent; &lt;br /&gt;} &lt;br /&gt;typedef struct node* Node; &lt;br /&gt;&lt;br /&gt;// the original algorithm in the textbook is a little bit wierd&lt;br /&gt;// cause it is different from BFS by no need of starting point&lt;br /&gt;// while it is obvious that starting with different points will &lt;br /&gt;// generate trees with different structures, given the same link-matrix &lt;br /&gt;void buildDFS(int *graphMatrx, Node graph, Node start){ &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;int i=0, n, time;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;Node temp; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;while(graph[i]!=NULL){ &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[i].color = 0; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[i].parent = NULL; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[i].detected = graph[i].finished = 0; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[i].index = i; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;i++; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;n = i; &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;time = 0;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[1] = temp;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[1] = start;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;start = temp;&amp;nbsp;&amp;nbsp; &amp;nbsp;// just want to start at the beginning of the array &lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;while(i&amp;gt;=0){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(graph[i].color == 0)&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;visitDFS(graphMatrix, graph, i, &amp;amp;time, n);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;i--;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;void visitDFS(int *graphMatrix, Node graph, int i, int *time, int length){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[i].color = 1;&amp;nbsp;&amp;nbsp; &amp;nbsp;// grey, begin to visit&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[i].detected = ++(*time);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;for (int j=0; j&lt;length; j++){=""&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(graphMatrix[graph[i].index][j]!=0){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;if(graph[j].color == 0){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[j].parent = &amp;amp;graph[i];&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;visitDFS(graphMatrix, graph, j, time, length);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;}&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[i].color = 2;&amp;nbsp;&amp;nbsp; &amp;nbsp;// black, conclude the visiting&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;graph[i].finished = ++(*time);&lt;br /&gt;}&lt;/length;&gt;&lt;/n;&gt;&lt;br /&gt;&lt;br /&gt;&lt;n; i++){=""&gt;&lt;length; j++){=""&gt;(&lt;a href="http://creasywuqiong.blogspot.com/2011/03/tree-search-algorithm-cont.html"&gt;to be continued&lt;/a&gt;) &amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; &lt;/length;&gt;&lt;/n;&gt;&lt;br /&gt;=========&lt;br /&gt;&lt;br /&gt;reference: &amp;lt;&lt;a href="http://www.amazon.com/Introduction-Algorithms-Third-Thomas-Cormen/dp/0262033844/ref=sr_1_2?ie=UTF8&amp;amp;qid=1298923887&amp;amp;sr=8-2"&gt;Introduction to algorithms&lt;/a&gt;&amp;gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/6721677418403944969/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/02/tree-search-algorithms.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6721677418403944969'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6721677418403944969'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/02/tree-search-algorithms.html' title='tree search algorithms'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4427592198782840389</id><published>2011-02-21T15:53:00.002-06:00</published><updated>2011-02-28T14:15:03.539-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>some abstract</title><content type='html'>说到Unix为我们所带来的软件开发的哲学，我必需要说一说。Unix遵循的原则是KISS（Keep it simple, stupid）。在http://en.wikipedia.org/wiki/Unix_philosophy 上有很多的基本上大同小异的Unix哲学，都是很经典的。&lt;br /&gt;&lt;br /&gt;Doug McIlroy 是认为UNIX的哲学是这样的：三条哲学，简明扼要，就是这三条哲学贯穿着整个Unix世界。尤其是第一条“do one thing and do it well”真是相当精彩！&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Write programs that do one thing and do it well.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Write programs to work together.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Write programs to handle text streams, because that is a universal interface.&lt;br /&gt;&lt;br /&gt;只要是Unix的程序员，他们会比别的程序员在任何时候都会不停地强调着这三条哲学。&lt;br /&gt;&lt;br /&gt;而《The Art of Unix Programming》总结了下面这些哲学，都是至理名言啊。&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Rule of Modularity: Write simple parts connected by clean interfaces.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Rule of Clarity: Clarity is better than cleverness.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Rule of Composition: Design programs to be connected to other programs.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Rule of Separation: Separate policy from mechanism; separate interfaces from engines.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Rule of Simplicity: Design for simplicity; add complexity only where you must.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Rule of Parsimony: Write a big program only when it is clear by demonstration that nothing else will do.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Rule of Transparency: Design for visibility to make inspection and debugging easier.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Rule of Robustness: Robustness is the child of transparency and simplicity.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Rule of Representation: Fold knowledge into data so program logic can be stupid and robust.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Rule of Least Surprise: In interface design, always do the least surprising thing.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Rule of Silence: When a program has nothing surprising to say, it should say nothing.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Rule of Repair: When you must fail, fail noisily and as soon as possible.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Rule of Economy: Programmer time is expensive; conserve it in preference to machine time.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Rule of Generation: Avoid hand-hacking; write programs to write programs when you can.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Rule of Optimization: Prototype before polishing. Get it working before you optimize it.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Rule of Diversity: Distrust all claims for “one true way”.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; * Rule of Extensibility: Design for the future, because it will be here sooner than you think.&lt;br /&gt;&lt;br /&gt;X Windows 的设计者 Mike Gancarz 给出了下面九条哲学思想&lt;br /&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; 1. Small is beautiful.&lt;br /&gt;&amp;nbsp;&amp;nbsp; 2. Make each program do one thing well.&lt;br /&gt;&amp;nbsp;&amp;nbsp; 3. Build a prototype as soon as possible.&lt;br /&gt;&amp;nbsp;&amp;nbsp; 4. Choose portability over efficiency.&lt;br /&gt;&amp;nbsp;&amp;nbsp; 5. Store data in flat text files.&lt;br /&gt;&amp;nbsp;&amp;nbsp; 6. Use software leverage to your advantage.&lt;br /&gt;&amp;nbsp;&amp;nbsp; 7. Use shell scripts to increase leverage and portability.&lt;br /&gt;&amp;nbsp;&amp;nbsp; 8. Avoid captive user interfaces.&lt;br /&gt;&amp;nbsp;&amp;nbsp; 9. Make every program a filter.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;十条不错的编程观点&lt;br /&gt;1） The only “best practice” you should be using all the time is “Use Your Brain”, rather than some so-called "famous" frameworks, methods, classes, or prototypes.&lt;br /&gt;2）Programmers who don’t code in their spare time for fun will never become as good as those that do.&lt;br /&gt;3）Most comments in code are in fact a pernicious form of code duplication, which should explain "why", rather than "how" and "what".&lt;br /&gt;4）XML is highly overrated&lt;br /&gt;5）Not all programmers are created equal&lt;br /&gt;6）”Googling it” is okay!&lt;br /&gt;7）If you only know one language, no matter how well you know it, you’re not a great programmer.&lt;br /&gt;8）Your job is to put yourself out of work. Or, saying, if you can’t be replaced then you can’t be promoted!&lt;br /&gt;9）Design patterns are hurting good design more than they’re helping it.&lt;br /&gt;10）Unit Testing won’t help you write good code</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4427592198782840389/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/02/some-abstract.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4427592198782840389'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4427592198782840389'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/02/some-abstract.html' title='some abstract'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1987675562251671993</id><published>2011-01-08T13:23:00.000-06:00</published><updated>2011-02-28T14:15:50.874-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='jobhunting'/><title type='text'>job hunting</title><content type='html'>need to read:&lt;br /&gt;thinking in Java&lt;br /&gt;coding interviews&lt;br /&gt;thinking in C++&lt;br /&gt;CLRS and K&amp;amp;R, again...&lt;br /&gt;&lt;br /&gt;in one month?.. ok, i will try.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1987675562251671993/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2011/01/job-hunting.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1987675562251671993'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1987675562251671993'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2011/01/job-hunting.html' title='job hunting'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4425178958968746932</id><published>2010-12-18T18:42:00.004-06:00</published><updated>2010-12-18T18:44:14.366-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>Reply: 这七个月</title><content type='html'>&amp;nbsp;&amp;nbsp;&lt;br /&gt;其实我应该好好享受最后一个人过的日子&lt;br /&gt;me: 嗯，其实我也是。&lt;br /&gt;&lt;br /&gt;参加不靠谱的活动&lt;br /&gt;me: ok~ &lt;br /&gt;&lt;br /&gt;读不靠谱的书&lt;br /&gt;me: of course, you can&lt;br /&gt;&lt;br /&gt;穿不靠谱的衣服&lt;br /&gt;me: 好吧…… &lt;br /&gt;&lt;br /&gt;学不靠谱的知识。&lt;br /&gt;me: 没问题～&lt;br /&gt;&lt;br /&gt;勾引可爱的小学弟&lt;br /&gt;me: 不行！&lt;br /&gt;&lt;br /&gt;然后再勾引学长&lt;br /&gt;me: 不行！！&lt;br /&gt;&lt;br /&gt;再勾引单身的男老师&lt;br /&gt;me: 必然不行！！！ &lt;br /&gt;&lt;br /&gt;或者，只是一个人安静一会儿不去想你。&lt;br /&gt;me: 嗯:) &lt;br /&gt;&lt;br /&gt;嗯哼～</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4425178958968746932/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/12/reply.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4425178958968746932'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4425178958968746932'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/12/reply.html' title='Reply: 这七个月'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5145366646741859584</id><published>2010-12-18T15:59:00.001-06:00</published><updated>2010-12-18T16:11:58.258-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>c/c++ input/ouput functions</title><content type='html'>&lt;b&gt;int open(char * filename, int flags)&lt;br /&gt;int open(char * filename, int flags, int mode)&lt;/b&gt;&lt;br /&gt;include: fcntl.h&lt;br /&gt;flags = bitwise | or of any of the following:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; O_RDONLY&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Only read operations permitted&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; O_WRONLY&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Only write operations permitted&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; O_RDWR&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Read and Write operations both permitted&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; O_NONBLOCK&amp;nbsp;&amp;nbsp;&amp;nbsp; Non-blocking, applies to open operation only&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; O_APPEND&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; All writes go to end of file&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; O_CREAT&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Create file if it doesn't already exist&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; O_TRUNC&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Delete existing contents of file&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; O_EXCL&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Open fails if file already exists&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; O_SHLOCK&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Get a "shared lock" on the file&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; O_EXLOCK&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Get an "exclusive lock" on the file&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; O_DIRECT&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Try to avoid all caching of operations&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; O_FSYNC&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; All writes immediately effective, no buffering&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; O_NOFOLLOW&amp;nbsp;&amp;nbsp;&amp;nbsp; If file is symbolic link, open it, don't follow it&lt;br /&gt;mode required if file is created, ignored otherwise.&lt;br /&gt;mode specifies the protection bits, e.g. 0644 = rw-r--r--&lt;br /&gt;returns &amp;lt;0 for error, or integer file descriptor.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;int close(int fd)&lt;/b&gt;&lt;br /&gt;include: unistd.h&lt;br /&gt;fd = file descriptor as returned by open&lt;br /&gt;returns &amp;lt;0 for error, 0 for success.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;int read(int fd, void * ptr, int numbytes)&lt;/b&gt;&lt;br /&gt;include: unistd.h&lt;br /&gt;fd = file descriptor as returned by open&lt;br /&gt;ptr = address in memory where data is to be stored;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; may be a pointer of any type.&lt;br /&gt;numbytes = number of bytes to attempt to read&lt;br /&gt;returns &amp;lt;0 for error, 0 for end-of-file,or number of bytes successfully read. (for a non-blocking interactive file, that may be zero).&lt;br /&gt;&lt;br /&gt;&lt;b&gt;int write(int fd, void * ptr, int numbytes)&lt;/b&gt;&lt;br /&gt;include: unistd.h&lt;br /&gt;fd = file descriptor as returned by open&lt;br /&gt;ptr = address in memory where data already is;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; may be a pointer of any type.&lt;br /&gt;numbytes = number of bytes to attempt to write&lt;br /&gt;returns &amp;lt;=0 for error, or number of bytes successfully written. (for a non-blocking file, that may be less than the number attempted without any errors having occurred).&lt;br /&gt;&lt;br /&gt;&lt;b&gt;int lseek(int fd, int position, int startpoint)&lt;/b&gt;&lt;br /&gt;include: unistd.h&lt;br /&gt;Sets the file position effective for the next read or write operation.&lt;br /&gt;fd = file descriptor as returned by open&lt;br /&gt;position = position within file: number of bytes between startpoint and the desired position, may be negative.&lt;br /&gt;startpoint = location in file that position is relative to, one of:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; SEEK_SET: Position is number of bytes from beginning of file&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; SEEK_END: Position is number of bytes after end of file&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; SEEK_CUR: Position is number of bytes after current position&lt;br /&gt;returns &amp;lt;0 for error, or resulting file position relative to beginning of file. Moving beyond the end of the file is permitted; the file is extended in length only if a write occurs beyond the current end of file. Moveing before the beginning of a file is not permitted. A write operation after a move only overwrites the number of bytes actually written.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;int stat(char * file, struct stat * info)&lt;/b&gt;&lt;br /&gt;include: sys/types.h&lt;br /&gt;include: sys/stat.h&lt;br /&gt;Finds information about a file.&lt;br /&gt;file = The name (or path) for the file.&lt;br /&gt;info = A pointer to an uninitialised stat structure. Even in C++, the type must be "struct stat *" because of the name clash. Information about the file is stored in the info object.&lt;br /&gt;returns &amp;lt;0 for error (including file does not exist), or 0&amp;nbsp; for success.&lt;br /&gt;The useful fields of a stat object are as follows. All have types that behave like ints, although they may be 16, 32, or 64 bits long.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; st_size: size in bytes&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; st_ino: inode number&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; st_mode: protection or mode (see below)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; st_nlink: number of hard links&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; st_uid: file's owner's identification number&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; st_gid: file's group identification number&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; st_birthtime: date and time of file creation (see below)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; st_mtime: date and time of last modification (see below)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; st_atime: date and time of last access (see below)&lt;br /&gt;All times are stored as time_t values, as described here. Mode and Protection. st_mode is the logical-or of a number of bits each representing different properties. The named constants for these bits, and their values in octal are:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; S_ISUID&amp;nbsp; 0004000&amp;nbsp; set user id on execution&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; S_IRUSR&amp;nbsp; 0000400&amp;nbsp; protection: readable by owner&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; S_IWUSR&amp;nbsp; 0000200&amp;nbsp; writable by owner&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; S_IXUSR&amp;nbsp; 0000100&amp;nbsp; executable by owner&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; S_IRGRP&amp;nbsp; 0000040&amp;nbsp; readable by group&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; S_IWGRP&amp;nbsp; 0000020&amp;nbsp; writable by group&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; S_IXGRP&amp;nbsp; 0000010&amp;nbsp; executable by group&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; S_IROTH&amp;nbsp; 0000004&amp;nbsp; readable by all&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; S_IWOTH&amp;nbsp; 0000002&amp;nbsp; writable by all&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; S_IXOTH&amp;nbsp; 0000001&amp;nbsp; executable by all&lt;br /&gt;Four bits of the mode give the file type. The mask for type is S_IFMT = 0170000&lt;br /&gt;if (mode &amp;amp; S_IFMT) is S_IFREG = 0100000,&amp;nbsp; type = perfectly ordinary file&lt;br /&gt;if (mode &amp;amp; S_IFMT) is S_IFDIR = 0040000,&amp;nbsp; type = directory&lt;br /&gt;if (mode &amp;amp; S_IFMT) is S_IFLNK = 0120000,&amp;nbsp; type = symbolic link&lt;br /&gt;if (mode &amp;amp; S_IFMT) is S_IFIFO = 0010000,&amp;nbsp; type = named pipe&lt;br /&gt;if (mode &amp;amp; S_IFMT) is S_IFSOCK = 0140000,&amp;nbsp; type = named socket&lt;br /&gt;&lt;br /&gt;&lt;b&gt;File Mode or Protection Bits&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;A file's mode or protection is usually specified visually by 9 characters, for example rw-r--r-- or rwxr-x--x. Each of the letters are (nearly always) 'r' for read permitted, 'w' for write permitted, or 'x' for execute permitted.&lt;br /&gt;&lt;br /&gt;The letters always appear in groups of three. Within a group, the order is always 'rwx'. The first group of three indicate operations permitted to the owner of the file; the second group of three indicates operations permitted to other users in the same group as the owner; the third group of three indicates operations permitted to all users who can access the file.&lt;br /&gt;&lt;br /&gt;If the file is a directory, 'x' means that files in the directory may be accessed if referred to directly by name, but wildcard substitutions ('*') and ls operations will not be permitted.&lt;br /&gt;&lt;br /&gt;Modes are usually represented inside programs by a sequence of three octal digits. each octal digit represents one of the groups of three characters, 4 for 'r' plus 2 for 'w' plus 1 for 'x'. In C and C++ programs remember that numbers with leading zeros are always assumed to be in octal, so the mode 0751 represents rwxr-x--x.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5145366646741859584/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/12/cc-open-file.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5145366646741859584'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5145366646741859584'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/12/cc-open-file.html' title='c/c++ input/ouput functions'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-148032904868665597</id><published>2010-12-18T13:21:00.000-06:00</published><updated>2010-12-18T13:21:46.278-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>vim setup</title><content type='html'>The configuration should be done in the file named "vimrc".&lt;br /&gt;&lt;br /&gt;For linux os, the directory should be: /etc/vim/vimrc.&amp;nbsp;For Unix, without root privilege, just as I am..., it needs to make a new file named ".vimrc" in the $HOME/ directory. As the vim starting, it will automatically read this file for configuration. And, the punctuation quotes " is the sign for comment.&lt;br /&gt;&lt;br /&gt;" syntax highlighting&lt;br /&gt;syntax on&lt;br /&gt;" automatic&amp;nbsp;indentation&lt;br /&gt;set autoindent&lt;br /&gt;" specifically c/c++ indentation&lt;br /&gt;set cindent&lt;br /&gt;" to show the line number for each line&lt;br /&gt;set nu&lt;br /&gt;&lt;br /&gt;Have fun:)</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/148032904868665597/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/12/vim-setup.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/148032904868665597'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/148032904868665597'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/12/vim-setup.html' title='vim setup'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-749940530382931786</id><published>2010-12-12T12:52:00.000-06:00</published><updated>2010-12-12T12:52:26.179-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>为什么Lisp语言如此先进？（译文）</title><content type='html'>&lt;div class="asset-meta"&gt;&lt;div class="vcard author"&gt;作者： &lt;a class="fn url" href="http://www.ruanyifeng.com/"&gt;阮一峰&lt;/a&gt;&lt;/div&gt;日期： &lt;a href="http://www.ruanyifeng.com/blog/2010/10/"&gt;&lt;abbr class="published" title="2010-10-14T11:40:09+08:00"&gt;2010年10月14日&lt;/abbr&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="asset-body"&gt;上周，《黑客与画家》总算翻译完成，已经交给出版社了。&lt;/div&gt;翻译完这本书，累得像生了一场大病。把书稿交出去的时候，心里空荡荡的，也不知道自己得到了什么，失去了什么。&lt;br /&gt;希望这个中译本和我的努力，能得到读者认同和肯定。&lt;br /&gt;下面是此书中非常棒的一篇文章，原文写于八年前，至今仍然具有启发性，作者眼光之超前令人佩服。由于我不懂Lisp语言，所以&lt;a href="http://tianchunbinghe.blog.163.com/" target="_blank"&gt;田春&lt;/a&gt;同学帮忙校读了一遍，纠正了一些翻译不当之处，在此表示衷心感谢。&lt;br /&gt;&lt;br /&gt;============================&lt;br /&gt;&lt;br /&gt;&lt;b&gt;为什么Lisp语言如此先进？&lt;/b&gt;&lt;br /&gt;作者：Paul Graham&lt;br /&gt;译者：阮一峰&lt;br /&gt;英文原文：&lt;i&gt;&lt;a href="http://www.paulgraham.com/icad.html" target="_blank"&gt;Revenge of the Nerds&lt;/a&gt;&lt;/i&gt;&lt;br /&gt;（节选自即将出版的《黑客与画家》中译本）&lt;br /&gt;&lt;br /&gt;一、&lt;br /&gt;如果我们把流行的编程语言，以这样的顺序排列：Java、Perl、Python、Ruby。你会发现，排在越后面的语言，越像Lisp。&lt;br /&gt;Python模仿Lisp，甚至把许多Lisp黑客认为属于设计错误的功能，也一起模仿了。至于Ruby，如果回到1975年，你声称它是一种Lisp方言，没有人会反对。&lt;br /&gt;编程语言现在的发展，不过刚刚赶上1958年Lisp语言的水平。&lt;br /&gt;&lt;br /&gt;二、&lt;br /&gt;1958年，John McCarthy设计了Lisp语言。我认为，当前最新潮的编程语言，只是实现了他在1958年的设想而已。 &lt;br /&gt;这怎么可能呢？计算机技术的发展，不是日新月异吗？1958年的技术，怎么可能超过今天的水平呢？&lt;br /&gt;让我告诉你原因。&lt;br /&gt;这是因为John McCarthy本来没打算把Lisp设计成编程语言，至少不是我们现在意义上的编程语言。他的原意只是想做一种理论演算，用更简洁的方式定义图灵机。&lt;br /&gt;所以，为什么上个世纪50年代的编程语言，到现在还没有过时？简单说，因为这种语言本质上不是一种技术，而是数学。数学是不会过时的。你不应该把 Lisp语言与50年代的硬件联系在一起，而是应该把它与快速排序（Quicksort）算法进行类比。这种算法是1960年提出的，至今仍然是最快的通 用排序方法。&lt;br /&gt;&lt;br /&gt;三、&lt;br /&gt;Fortran语言也是上个世纪50年代出现的，并且一直使用至今。它代表了语言设计的一种完全不同的方向。Lisp是无意中从纯理论发展为编程语 言，而Fortran从一开始就是作为编程语言设计出来的。但是，今天我们把Lisp看成高级语言，而把Fortran看成一种相当低层次的语言。 &lt;br /&gt;1956年，Fortran刚诞生的时候，叫做Fortran I，与今天的Fortran语言差别极大。Fortran I实际上是汇编语言加上数学，在某些方面，还不如今天的汇编语言强大。比如，它不支持子程序，只有分支跳转结构（branch）。&lt;br /&gt;Lisp和Fortran代表了编程语言发展的两大方向。前者的基础是数学，后者的基础是硬件架构。从那时起，这两大方向一直在互相靠拢。Lisp 刚设计出来的时候，就很强大，接下来的二十年，它提高了自己的运行速度。而那些所谓的主流语言，把更快的运行速度作为设计的出发点，然后再用超过四十年的 时间，一步步变得更强大。&lt;br /&gt;直到今天，最高级的主流语言，也只是刚刚接近Lisp的水平。虽然已经很接近了，但还是没有Lisp那样强大。&lt;br /&gt;&lt;br /&gt;四、 &lt;br /&gt;Lisp语言诞生的时候，就包含了9种新思想。其中一些我们今天已经习以为常，另一些则刚刚在其他高级语言中出现，至今还有2种是Lisp独有的。按照被大众接受的程度，这9种思想依次是：&lt;br /&gt;&lt;br /&gt;1. 条件结构（即"if-then-else"结构）。现在大家都觉得这是理所当然的，但是Fortran I就没有这个结构，它只有基于底层机器指令的goto结构。&lt;br /&gt;2. 函数也是一种数据类型。在Lisp语言中，函数与整数或字符串一样，也属于数据类型的一种。它有自己的字面表示形式（literal representation），能够储存在变量中，也能当作参数传递。一种数据类型应该有的功能，它都有。 &lt;br /&gt;3. 递归。Lisp是第一种支持递归函数的高级语言。 &lt;br /&gt;4. 变量的动态类型。在Lisp语言中，所有变量实际上都是指针，所指向的值有类型之分，而变量本身没有。复制变量就相当于复制指针，而不是复制它们指向的数据。&lt;br /&gt;5. 垃圾回收机制。 &lt;br /&gt;6. 程序由表达式（expression）组成。Lisp程序是一些表达式区块的集合，每个表达式都返回一个值。这与Fortran和大多数后来的语言都截然不同，它们的程序由表达式和语句（statement）组成。&lt;br /&gt;区分表达式和语句，在Fortran I中是很自然的，因为它不支持语句嵌套。所以，如果你需要用数学式子计算一个值，那就只有用表达式返回这个值，没有其他语法结构可用，因为否则就无法处理这个值。 &lt;br /&gt;后来，新的编程语言支持区块结构（block），这种限制当然也就不存在了。但是为时已晚，表达式和语句的区分已经根深蒂固。它从Fortran扩散到Algol语言，接着又扩散到它们两者的后继语言。 &lt;br /&gt;7. 符号（symbol）类型。符号实际上是一种指针，指向储存在哈希表中的字符串。所以，比较两个符号是否相等，只要看它们的指针是否一样就行了，不用逐个字符地比较。 &lt;br /&gt;8. 代码使用符号和常量组成的树形表示法（notation）。 &lt;br /&gt;9. 无论什么时候，整个语言都是可用的。Lisp并不真正区分读取期、编译期和运行期。你可以在读取期编译或运行代码；也可以在编译期读取或运行代码；还可以在运行期读取或者编译代码。 &lt;br /&gt;在读取期运行代码，使得用户可以重新调整（reprogram）Lisp的语法；在编译期运行代码，则是Lisp宏的工作基础；在运行期编译代码， 使得Lisp可以在Emacs这样的程序中，充当扩展语言（extension language）；在运行期读取代码，使得程序之间可以用S-表达式（S-expression）通信，近来XML格式的出现使得这个概念被重新"发 明"出来了。&lt;br /&gt;&lt;br /&gt;五、&lt;br /&gt;Lisp语言刚出现的时候，它的思想与其他编程语言大相径庭。后者的设计思想主要由50年代后期的硬件决定。随着时间流逝，流行的编程语言不断更新换代，语言设计思想逐渐向Lisp靠拢。&lt;br /&gt;思想1到思想5已经被广泛接受，思想6开始在主流编程语言中出现，思想7在Python语言中有所实现，不过似乎没有专用的语法。&lt;br /&gt;思想8可能是最有意思的一点。它与思想9只是由于偶然原因，才成为Lisp语言的一部分，因为它们不属于John McCarthy的原始构想，是由他的学生Steve Russell自行添加的。它们从此使得Lisp看上去很古怪，但也成为了这种语言最独一无二的特点。Lisp古怪的形式，倒不是因为它的语法很古怪，而 是因为它根本没有语法，程序直接以解析树（parse tree）的形式表达出来。在其他语言中，这种形式只是经过解析在后台产生，但是Lisp直接采用它作为表达形式。它由列表构成，而列表则是Lisp的基 本数据结构。 &lt;br /&gt;用一门语言自己的数据结构来表达该语言，这被证明是非常强大的功能。思想8和思想9，意味着你可以写出一种能够自己编程的程序。这可能听起来很怪异，但是对于Lisp语言却是再普通不过。最常用的做法就是使用宏。 &lt;br /&gt;术语"宏"在Lisp语言中，与其他语言中的意思不一样。Lisp宏无所不包，它既可能是某样表达式的缩略形式，也可能是一种新语言的编译器。如果你想真正地理解Lisp语言，或者想拓宽你的编程视野，那么你必须学习宏。 &lt;br /&gt;就我所知，宏（采用Lisp语言的定义）目前仍然是Lisp独有的。一个原因是为了使用宏，你大概不得不让你的语言看上去像Lisp一样古怪。另一 个可能的原因是，如果你想为自己的语言添上这种终极武器，你从此就不能声称自己发明了新语言，只能说发明了一种Lisp的新方言。&lt;br /&gt;我把这件事当作笑话说出来，但是事实就是如此。如果你创造了一种新语言，其中有car、cdr、cons、quote、cond、atom、eq这 样的功能，还有一种把函数写成列表的表示方法，那么在它们的基础上，你完全可以推导出Lisp语言的所有其他部分。事实上，Lisp语言就是这样定义 的，John McCarthy把语言设计成这个样子，就是为了让这种推导成为可能。&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;六、&lt;br /&gt;就算Lisp确实代表了目前主流编程语言不断靠近的一个方向，这是否意味着你就应该用它编程呢？&lt;br /&gt;如果使用一种不那么强大的语言，你又会有多少损失呢？有时不采用最尖端的技术，不也是一种明智的选择吗？这么多人使用主流编程语言，这本身不也说明那些语言有可取之处吗？&lt;br /&gt;另一方面，选择哪一种编程语言，许多项目是无所谓的，反正不同的语言都能完成工作。一般来说，条件越苛刻的项目，强大的编程语言就越能发挥作用。但 是，无数的项目根本没有苛刻条件的限制。大多数的编程任务，可能只要写一些很小的程序，然后用胶水语言把这些小程序连起来就行了。你可以用自己熟悉的编程 语言，或者用对于特定项目来说有着最强大函数库的语言，来写这些小程序。如果你只是需要在Windows应用程序之间传递数据，使用Visual Basic照样能达到目的。&lt;br /&gt;那么，Lisp的编程优势体现在哪里呢？&lt;br /&gt;&lt;br /&gt;七、&lt;br /&gt;语言的编程能力越强大，写出来的程序就越短（当然不是指字符数量，而是指独立的语法单位）。 &lt;br /&gt;代码的数量很重要，因为开发一个程序耗费的时间，主要取决于程序的长度。如果同一个软件，一种语言写出来的代码比另一种语言长三倍，这意味着你开发 它耗费的时间也会多三倍。而且即使你多雇佣人手，也无助于减少开发时间，因为当团队规模超过某个门槛时，再增加人手只会带来净损失。Fred Brooks在他的名著《人月神话》（The Mythical Man-Month）中，描述了这种现象，我的所见所闻印证了他的说法。&lt;br /&gt;如果使用Lisp语言，能让程序变得多短？以Lisp和C的比较为例，我听到的大多数说法是C代码的长度是Lisp的7倍到10倍。但是最 近，New Architect杂志上有一篇介绍ITA软件公司的文章，里面说"一行Lisp代码相当于20行C代码"，因为此文都是引用ITA总裁的话，所以我想这 个数字来自ITA的编程实践。 如果真是这样，那么我们可以相信这句话。ITA的软件，不仅使用Lisp语言，还同时大量使用C和C++，所以这是他们的经验谈。&lt;br /&gt;根据上面的这个数字，如果你与ITA竞争，而且你使用C语言开发软件，那么ITA的开发速度将比你快20倍。如果你需要一年时间实现某个功能，它只需要不到三星期。反过来说，如果某个新功能，它开发了三个月，那么你需要五年才能做出来。 &lt;br /&gt;你知道吗？上面的对比，还只是考虑到最好的情况。当我们只比较代码数量的时候，言下之意就是假设使用功能较弱的语言，也能开发出同样的软件。但是事 实上，程序员使用某种语言能做到的事情，是有极限的。如果你想用一种低层次的语言，解决一个很难的问题，那么你将会面临各种情况极其复杂、乃至想不清楚的 窘境。&lt;br /&gt;所以，当我说假定你与ITA竞争，你用五年时间做出的东西，ITA在Lisp语言的帮助下只用三个月就完成了，我指的五年还是一切顺利、没有犯错误、也没有遇到太大麻烦的五年。事实上，按照大多数公司的实际情况，计划中五年完成的项目，很可能永远都不会完成。 &lt;br /&gt;我承认，上面的例子太极端。ITA似乎有一批非常聪明的黑客，而C语言又是一种很低层次的语言。但是，在一个高度竞争的市场中，即使开发速度只相差两三倍，也足以使得你永远处在落后的位置。&lt;br /&gt;&lt;b&gt;附录：编程能力&lt;/b&gt;&lt;br /&gt;为了解释我所说的语言编程能力不一样，请考虑下面的问题。我们需要写一个函数，它能够生成累加器，即这个函数接受一个参数n，然后返回另一个函数，后者接受参数i，然后返回n增加（increment）了i后的值。&lt;br /&gt;Common Lisp的写法如下： &lt;br /&gt;&lt;blockquote&gt;(defun foo (n)&lt;br /&gt;(lambda (i) (incf n i)))&lt;/blockquote&gt;Ruby的写法几乎完全相同： &lt;br /&gt;&lt;blockquote&gt;def foo (n)&lt;br /&gt;lambda {|i| n += i } end&lt;/blockquote&gt;Perl 5的写法则是：&lt;br /&gt;&lt;blockquote&gt;sub foo {&lt;br /&gt;my ($n) = @_;&lt;br /&gt;sub {$n += shift}&lt;br /&gt;}&lt;/blockquote&gt;这比Lisp和Ruby的版本，有更多的语法元素，因为在Perl语言中，你不得不手工提取参数。&lt;br /&gt;Smalltalk的写法稍微比Lisp和Ruby的长一点：&lt;br /&gt;&lt;blockquote&gt;foo: n&lt;br /&gt;|s|&lt;br /&gt;s := n.&lt;br /&gt;^[:i| s := s+i. ]&lt;/blockquote&gt;因为在Smalltalk中，局部变量（lexical variable）是有效的，但是你无法给一个参数赋值，因此不得不设置了一个新变量，接受累加后的值。&lt;br /&gt;Javascript的写法也比Lisp和Ruby稍微长一点，因为Javascript依然区分语句和表达式，所以你需要明确指定return语句，来返回一个值： &lt;br /&gt;&lt;blockquote&gt;function foo (n) {&lt;br /&gt;return function (i) {&lt;br /&gt;return n += i } }&lt;/blockquote&gt;（实事求是地说，Perl也保留了语句和表达式的区别，但是使用了典型的Perl方式处理，使你可以省略return。） &lt;br /&gt;如果想把Lisp/Ruby/Perl/Smalltalk/Javascript的版本改成Python，你会遇到一些限制。因为Python并 不完全支持局部变量，你不得不创造一种数据结构，来接受n的值。而且尽管Python确实支持函数数据类型，但是没有一种字面量的表示方式 （literal representation）可以生成函数（除非函数体只有一个表达式），所以你需要创造一个命名函数，把它返回。最后的写法如下：&lt;br /&gt;&lt;blockquote&gt;def foo (n):&lt;br /&gt;s = [n]&lt;br /&gt;def bar (i):&lt;br /&gt;s[0] += i&lt;br /&gt;return s[0]&lt;br /&gt;return bar&lt;/blockquote&gt;Python用户完全可以合理地质疑，为什么不能写成下面这样： &lt;br /&gt;&lt;blockquote&gt;def foo (n):&lt;br /&gt;return lambda i: return n += i&lt;/blockquote&gt;或者： &lt;br /&gt;&lt;blockquote&gt;def foo (n):&lt;br /&gt;lambda i: n += i&lt;/blockquote&gt;我猜想，Python有一天会支持这样的写法。（如果你不想等到Python慢慢进化到更像Lisp，你总是可以直接......） &lt;br /&gt;在面向对象编程的语言中，你能够在有限程度上模拟一个闭包（即一个函数，通过它可以引用由包含这个函数的代码所定义的变量）。你定义一个类 （class），里面有一个方法和一个属性，用于替换封闭作用域（enclosing scope）中的所有变量。这有点类似于让程序员自己做代码分析，本来这应该是由支持局部作用域的编译器完成的。如果有多个函数，同时指向相同的变量，那 么这种方法就会失效，但是在这个简单的例子中，它已经足够了。 &lt;br /&gt;Python高手看来也同意，这是解决这个问题的比较好的方法，写法如下： &lt;br /&gt;&lt;blockquote&gt;def foo (n):&lt;br /&gt;class acc:&lt;br /&gt;def _ _init_ _ (self, s):&lt;br /&gt;self.s = s&lt;br /&gt;def inc (self, i):&lt;br /&gt;self.s += i&lt;br /&gt;return self.s&lt;br /&gt;return acc (n).inc&lt;/blockquote&gt;或者&lt;br /&gt;&lt;blockquote&gt;class foo:&lt;br /&gt;def _ _init_ _ (self, n):&lt;br /&gt;self.n = n&lt;br /&gt;def _ _call_ _ (self, i):&lt;br /&gt;self.n += i&lt;br /&gt;return self.n&lt;/blockquote&gt;我添加这一段，原因是想避免Python爱好者说我误解这种语言。但是，在我看来，这两种写法好像都比第一个版本更复杂。你实际上就是在做同样的 事，只不过划出了一个独立的区域，保存累加器函数，区别只是保存在对象的一个属性中，而不是保存在列表（list）的头（head）中。使用这些特殊的内 部属性名（尤其是__call__），看上去并不像常规的解法，更像是一种破解。&lt;br /&gt;在Perl和Python的较量中，Python黑客的观点似乎是认为Python比Perl更优雅，但是这个例子表明，最终来说，编程能力决定了优雅。Perl的写法更简单（包含更少的语法元素），尽管它的语法有一点丑陋。&lt;br /&gt;其他语言怎么样？前文曾经提到过Fortran、C、C++、Java和Visual Basic，看上去使用它们，根本无法解决这个问题。Ken Anderson说，Java只能写出一个近似的解法： &lt;br /&gt;&lt;blockquote&gt;public interface Inttoint {&lt;br /&gt;public int call (int i);&lt;br /&gt;}&lt;br /&gt;public static Inttoint foo (final int n) {&lt;br /&gt;return new Inttoint () {&lt;br /&gt;int s = n;&lt;br /&gt;public int call (int i) {&lt;br /&gt;s = s + i;&lt;br /&gt;return s;&lt;br /&gt;}};&lt;br /&gt;}&lt;/blockquote&gt;这种写法不符合题目要求，因为它只对整数有效。&lt;br /&gt;当然，我说使用其他语言无法解决这个问题，这句话并不完全正确。所有这些语言都是图灵等价的，这意味着严格地说，你能使用它们之中的任何一种语言， 写出任何一个程序。那么，怎样才能做到这一点呢？就这个小小的例子而言，你可以使用这些不那么强大的语言，写一个Lisp解释器就行了。&lt;br /&gt;这样做听上去好像开玩笑，但是在大型编程项目中，却不同程度地广泛存在。因此，有人把它总结出来，起名为"格林斯潘第十定律"（Greenspun's Tenth Rule）：&lt;br /&gt;&lt;blockquote&gt;"任何C或Fortran程序复杂到一定程度之后，都会包含一个临时开发的、只有一半功能的、不完全符合规格的、到处都是bug的、运行速度很慢的Common Lisp实现。"&lt;/blockquote&gt;如果你想解决一个困难的问题，关键不是你使用的语言是否强大，而是好几个因素同时发挥作用（a）使用一种强大的语言，（b）为这个难题写一个事实上 的解释器，或者（c）你自己变成这个难题的人肉编译器。在Python的例子中，这样的处理方法已经开始出现了，我们实际上就是自己写代码，模拟出编译器 实现局部变量的功能。&lt;br /&gt;这种实践不仅很普遍，而且已经制度化了。举例来说，在面向对象编程的世界中，我们大量听到"模式"（pattern）这个词，我觉得那些"模式"就 是现实中的因素（c），也就是人肉编译器。 当我在自己的程序中，发现用到了模式，我觉得这就表明某个地方出错了。程序的形式，应该仅仅反映它所要解决的问题。代码中其他任何外加的形式，都是一个信 号，（至少对我来说）表明我对问题的抽象还不够深，也经常提醒我，自己正在手工完成的事情，本应该写代码，通过宏的扩展自动实现。&lt;br /&gt;（完）</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/749940530382931786/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/12/lisp.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/749940530382931786'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/749940530382931786'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/12/lisp.html' title='为什么Lisp语言如此先进？（译文）'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4175323232942875088</id><published>2010-12-12T12:50:00.002-06:00</published><updated>2010-12-12T12:50:55.060-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>What are the differences between a union and a structure in C?</title><content type='html'>original webpage&amp;nbsp;&lt;a href="http://wiki.answers.com/Q/What_are_the_differences_between_a_union_and_a_structure_in_C#ixzz17ecYS9zC"&gt;click&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;div&gt;&lt;a href="http://wiki.answers.com/Q/What_are_the_differences_between_a_union_and_a_structure_in_C#ixzz17ecYS9zC"&gt;&lt;/a&gt;&lt;br /&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-family: Verdana,sans-serif; font-size: 12px;"&gt;&lt;h2 style="font-size: 16px; margin: 0px; padding: 0px;"&gt;&lt;a class="h2heading answer h2" href="" name="Answer" style="color: black; font-size: 16px; outline-style: none; padding: 0px; text-decoration: none;"&gt;Answer&lt;/a&gt;&lt;/h2&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;A union is a way of providing an alternate way of describing the same memory area. In this way, you could have a struct that contains a union, so that the "static", or similar portion of the data is described first, and the portion that changes is described by the union. The idea of a union could be handled in a different way by having 2 different structs defined, and making a pointer to each kind of struct. The pointer to struct "a" could be assigned to the value of a buffer, and the pointer to struct "b" could be assigned to the same buffer, but now a-&amp;gt;somefield and b-&amp;gt;someotherfield are both located in the same buffer. That is the idea behind a union. It gives different ways to break down the same buffer area.&lt;/div&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;&lt;/div&gt;&lt;h2 style="font-size: 16px; margin: 0px; padding: 0px;"&gt;&lt;a class="h2heading h2" href="" name="Answer:" style="color: black; font-size: 16px; outline-style: none; padding: 0px; text-decoration: none;"&gt;Answer:&lt;/a&gt;&lt;/h2&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;The difference between structure and union in c are: 1. union allocates the memory equal to the maximum memory required by the member of the union but structure allocates the memory equal to the total memory required by the members. 2. In union, one block is used by all the member of the union but in case of structure, each member have their own memory space&lt;/div&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;&lt;/div&gt;&lt;h2 style="font-size: 16px; margin: 0px; padding: 0px;"&gt;&lt;a class="h2heading h2" href="" name="Difference_in_their_Usage:" style="color: black; font-size: 16px; outline-style: none; padding: 0px; text-decoration: none;"&gt;Difference in their Usage:&lt;/a&gt;&lt;/h2&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;While structure enables us treat a number of different variables stored at different in memory , a union enables us to treat the same space in memory as a number of different variables. That is a Union offers a way for a section of memory to be treated as a variable of one type on one occasion and as a different variable of a different type on another occasion.&lt;/div&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;There is frequent rwquirement while interacting with hardware to&amp;nbsp;&lt;a class="iAs" href="http://wiki.answers.com/Q/What_are_the_differences_between_a_union_and_a_structure_in_C#" style="background-color: transparent ! important; border-bottom: 0.1em solid rgb(0, 100, 0) ! important; border-left-style: none; border-right-style: none; border-top-style: none; bottom: auto; color: rgb(0, 100, 0) ! important; display: inline; float: none; font-family: inherit ! important; font-size: 12px; font-weight: normal ! important; left: auto; line-height: normal; margin: 0px; outline-style: none; padding-bottom: 1px ! important; padding-left: 0px; padding-right: 0px; padding-top: 0px; position: static ! important; right: auto; text-align: left; text-decoration: underline ! important; top: auto;" target="_blank"&gt;access&lt;/a&gt;&amp;nbsp;access a byte or group of bytes simultaneously and sometimes each byte individually. Usually union is the answer.&lt;/div&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;=======Difference With example***** Lets say a structure containing an int,char and float is created and a union containing int char float are declared. struct TT{ int a; float b; char c; } Union UU{ int a; float b; char c; }&lt;/div&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;sizeof TT(struct) would be &amp;gt;9 bytes (compiler dependent-if int,float, char are taken as 4,4,1)&lt;/div&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;sizeof UU(Union) would be 4 bytes as supposed from above.If a variable in double exists in union then the size of union and struct would be 8 bytes and cumulative size of all variables in struct.&lt;/div&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;&lt;/div&gt;&lt;h2 style="font-size: 16px; margin: 0px; padding: 0px;"&gt;&lt;a class="h2heading h2" href="" name="Detailed_Example:" style="color: black; font-size: 16px; outline-style: none; padding: 0px; text-decoration: none;"&gt;Detailed Example:&lt;/a&gt;&lt;/h2&gt;&lt;div style="margin: 0px; padding: 0px;"&gt;struct foo&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  {&amp;nbsp;&lt;br style="padding: 0px;" /&gt;char c;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;long l;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  char *p;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;};&amp;nbsp;&lt;br style="padding: 0px;" /&gt;&lt;br style="padding: 0px;" /&gt;  union bar&amp;nbsp;&lt;br style="padding: 0px;" /&gt;{&amp;nbsp;&lt;br style="padding: 0px;" /&gt;char c;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  long l;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;char *p;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;};&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  &lt;br style="padding: 0px;" /&gt;A struct foo contains all of the elements c, l, and p. Each element is&amp;nbsp;separate and distinct.&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  &lt;br style="padding: 0px;" /&gt;A union bar contains only one of the elements c, l, and p at any given&amp;nbsp;time. Each element is stored in the same memory location (well, they all&amp;nbsp;start at the same memory location), and you can only refer to the element&amp;nbsp;which was last stored. (ie: after "barptr-&amp;gt;c = 2;" you cannot reference&amp;nbsp;any of the other elements, such as "barptr-&amp;gt;p" without invoking undefined&amp;nbsp;behavior.)&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  &lt;br style="padding: 0px;" /&gt;Try the following program. (Yes, I know it invokes the above-mentioned&amp;nbsp;"undefined behavior", but most likely will give some sort of output on&amp;nbsp;most computers.)&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  &lt;br style="padding: 0px;" /&gt;==========&amp;nbsp;&lt;br style="padding: 0px;" /&gt;#include&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  &lt;br style="padding: 0px;" /&gt;struct foo&amp;nbsp;&lt;br style="padding: 0px;" /&gt;{&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  char c;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;long l;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;char *p;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  };&amp;nbsp;&lt;br style="padding: 0px;" /&gt;&lt;br style="padding: 0px;" /&gt;union bar&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  {&amp;nbsp;&lt;br style="padding: 0px;" /&gt;char c;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;long l;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  char *p;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;};&amp;nbsp;&lt;br style="padding: 0px;" /&gt;&lt;br style="padding: 0px;" /&gt;  int main(int argc,char *argv[])&amp;nbsp;&lt;br style="padding: 0px;" /&gt;{&amp;nbsp;&lt;br style="padding: 0px;" /&gt;struct foo myfoo;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  union bar mybar;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;&lt;br style="padding: 0px;" /&gt;myfoo.c = 1;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  myfoo.l = 2L;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;myfoo.p = "This is myfoo";&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  &lt;br style="padding: 0px;" /&gt;mybar.c = 1;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;mybar.l = 2L;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  mybar.p = "This is mybar";&amp;nbsp;&lt;br style="padding: 0px;" /&gt;&lt;br style="padding: 0px;" /&gt;printf("myfoo: %d %ld %s\n",myfoo.c,myfoo.l,myfoo.p);&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  printf("mybar: %d %ld %s\n",mybar.c,mybar.l,mybar.p);&amp;nbsp;&lt;br style="padding: 0px;" /&gt;&lt;br style="padding: 0px;" /&gt;  return 0;&amp;nbsp;&lt;br style="padding: 0px;" /&gt;}&amp;nbsp;&lt;br style="padding: 0px;" /&gt;&lt;br style="padding: 0px;" /&gt;  ==========&amp;nbsp;&lt;br style="padding: 0px;" /&gt;&lt;br style="padding: 0px;" /&gt;On my system, I get:&amp;nbsp;&lt;br style="padding: 0px;" /&gt;  &lt;br style="padding: 0px;" /&gt;myfoo: 1 2 This is myfoo&amp;nbsp;&lt;br style="padding: 0px;" /&gt;mybar: 100 4197476 This is mybar&lt;/div&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4175323232942875088/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/12/what-are-differences-between-union-and.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4175323232942875088'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4175323232942875088'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/12/what-are-differences-between-union-and.html' title='What are the differences between a union and a structure in C?'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7243492491652124092</id><published>2010-12-04T15:22:00.000-06:00</published><updated>2010-12-04T15:22:21.190-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Network'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>140 Google Interview Questions</title><content type='html'>&lt;div&gt;&lt;div&gt;&lt;b&gt;original site:&lt;a href="http://blog.seattleinterviewcoach.com/2009/02/140-google-interview-questions.html"&gt;click&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Google Interview Questions: Product Marketing Manager&lt;/b&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Why do you want to join Google?&lt;br /&gt;&lt;/li&gt;&lt;li&gt;What do you know about Google's product and technology?&lt;br /&gt;&lt;/li&gt;&lt;li&gt;If you are Product Manager for Google's Adwords, how do you plan to market this?&lt;br /&gt;&lt;/li&gt;&lt;li&gt;What would you say during an AdWords or AdSense product seminar?&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Who are Google's competitors, and how does Google compete with them?&lt;br /&gt;&lt;/li&gt;&lt;li&gt;Have you ever used Google's products? Gmail?&lt;br /&gt;&lt;/li&gt;&lt;li&gt;What's a creative way of marketing Google's brand name and product?&lt;br /&gt;&lt;/li&gt;&lt;li&gt;If  you are the product marketing manager for Google's Gmail product, how  do you plan to market it so as to achieve 100 million customers in 6  months?&lt;/li&gt;&lt;li&gt;How much money you think Google makes daily from Gmail ads?&lt;/li&gt;&lt;li&gt;Name a piece of technology you've read about recently. Now tell me your own creative execution for an ad for that product.&lt;/li&gt;&lt;li&gt;Say  an advertiser makes $0.10 every time someone clicks on their ad.  Only  20% of people who visit the site click on their ad.  How many people  need to visit the site for the advertiser to make $20?&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;/li&gt;&lt;li&gt;Estimate  the number of students who are college seniors, attend four-year  schools, and graduate with a job in the United States every year.&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;a href="" name="product_manager"&gt;Google Interview Questions: Product Manager&lt;/a&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;How would you boost the GMail subscription base?&lt;/li&gt;&lt;li&gt;What is the most efficient way to sort a million integers?&lt;/li&gt;&lt;li&gt;How would you re-position Google's offerings to counteract competitive threats from Microsoft?&lt;/li&gt;&lt;li&gt;How many golf balls can fit in a school bus?&lt;/li&gt;&lt;li&gt;You  are shrunk to the height of a nickel and your mass is proportionally  reduced so as to maintain your original density. You are then thrown  into an empty glass blender. The blades will start moving in 60 seconds.  What do you do?&lt;/li&gt;&lt;li&gt;How much should you charge to wash all the windows in Seattle?&lt;/li&gt;&lt;li&gt;How would you find out if a machine's stack grows up or down in memory?&lt;/li&gt;&lt;li&gt;Explain a database in three sentences to your eight-year-old nephew.&lt;/li&gt;&lt;li&gt;How many times a day does a clock's hands overlap?&lt;/li&gt;&lt;li&gt;You have to get from point A to point B. You don't know if you can get there. What would you do?&lt;/li&gt;&lt;li&gt;Imagine  you have a closet full of shirts. It's very hard to find a shirt. So  what can you do to organize your shirts for easy retrieval?&lt;/li&gt;&lt;li&gt;Every  man in a village of 100 married couples has cheated on his wife. Every  wife in the village instantly knows when a man other than her husband  has cheated, but does not know when her own husband has. The village has  a law that does not allow for adultery. Any wife who can prove that her  husband is unfaithful must kill him that very day. The women of the  village would never disobey this law. One day, the queen of the village  visits and announces that at least one husband has been unfaithful. What  happens?&lt;/li&gt;&lt;li&gt;In a country in which people only want boys, every  family continues to have children until they have a boy. If they have a  girl, they have another child. If they have a boy, they stop. What is  the proportion of boys to girls in the country?&lt;/li&gt;&lt;li&gt;If the  probability of observing a car in 30 minutes on a highway is 0.95, what  is the probability of observing a car in 10 minutes (assuming constant  default probability)?&lt;/li&gt;&lt;li&gt;If you look at a clock and the time is  3:15, what is the angle between the hour and the minute hands? (The  answer to this is not zero!)&lt;/li&gt;&lt;li&gt;Four people need to cross a rickety  rope bridge to get back to their camp at night. Unfortunately, they  only have one flashlight and it only has enough light left for seventeen  minutes. The bridge is too dangerous to cross without a flashlight, and  it's only strong enough to support two people at any given time. Each  of the campers walks at a different speed. One can cross the bridge in 1  minute, another in 2 minutes, the third in 5 minutes, and the slow poke  takes 10 minutes to cross. How do the campers make it across in 17  minutes?&lt;/li&gt;&lt;li&gt;You are at a party with a friend and 10 people are  present including you and the friend. your friend makes you a wager that  for every person you find that has the same birthday as you, you get  $1; for every person he finds that does not have the same birthday as  you, he gets $2. would you accept the wager?&lt;/li&gt;&lt;li&gt;How many piano tuners are there in the entire world?&lt;/li&gt;&lt;li&gt;You  have eight balls all of the same size. 7 of them weigh the same, and  one of them weighs slightly more. How can you find the ball that is  heavier by using a balance and only two weighings?&lt;/li&gt;&lt;li&gt;You have five  pirates, ranked from 5 to 1 in descending order. The top pirate has the  right to propose how 100 gold coins should be divided among them. But  the others get to vote on his plan, and if fewer than half agree with  him, he gets killed. How should he allocate the gold in order to  maximize his share but live to enjoy it? (Hint: One pirate ends up with  98 percent of the gold.)&lt;/li&gt;&lt;li&gt;You are given 2 eggs. You have access  to a 100-story building. Eggs can be very hard or very fragile means it  may break if dropped from the first floor or may not even break if  dropped from 100th floor. Both eggs are identical. You need to figure  out the highest floor of a 100-story building an egg can be dropped  without breaking. The question is how many drops you need to make. You  are allowed to break 2 eggs in the process.&lt;/li&gt;&lt;li&gt;Describe a technical problem you had and how you solved it.&lt;/li&gt;&lt;li&gt;How would you design a simple search engine?&lt;/li&gt;&lt;li&gt;Design an evacuation plan for San Francisco.&lt;/li&gt;&lt;li&gt;There's a latency problem in South Africa. Diagnose it.&lt;/li&gt;&lt;li&gt;What are three long term challenges facing Google?&lt;/li&gt;&lt;li&gt;Name  three non-Google websites that you visit often and like.  What do you  like about the user interface and design?  Choose one of the three sites  and comment on what new feature or project you would work on.  How  would you design it?&lt;/li&gt;&lt;li&gt;If there is only one elevator in the  building, how would you change the design?  How about if there are only  two elevators in the building?&lt;/li&gt;&lt;li&gt;How many vacuum's are made per year in USA?&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;b&gt;&lt;a href="" name="software_engineer"&gt;Google Interview Questions: Software Engineer&lt;/a&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;  Why are manhole covers round?&lt;/li&gt;&lt;li&gt;What is the difference between a mutex and a semaphore?  Which one would you use to protect access to an increment operation?&lt;/li&gt;&lt;li&gt;A man pushed his car to a hotel and lost his fortune. What happened?&lt;/li&gt;&lt;li&gt;Explain the significance of "dead beef".&lt;/li&gt;&lt;li&gt;Write a C program which measures the the speed of a context switch on a UNIX/Linux system.&lt;/li&gt;&lt;li&gt;Given  a function which produces a random integer in the range 1 to 5, write a  function which produces a random integer in the range 1 to 7.&lt;/li&gt;&lt;li&gt;Describe the algorithm for a depth-first graph traversal.&lt;/li&gt;&lt;li&gt;Design a class library for writing card games.&lt;/li&gt;&lt;li&gt;You  need to check that your friend, Bob, has your correct phone number, but  you cannot ask him directly. You must write a the question on a card  which and give it to Eve who will take the card to Bob and return the  answer to you. What must you write on the card, besides the question, to  ensure Bob can encode the message so that Eve cannot read your phone  number?&lt;/li&gt;&lt;li&gt;How are cookies passed in the HTTP protocol?&lt;/li&gt;&lt;li&gt;Design the SQL database tables for a car rental database.&lt;/li&gt;&lt;li&gt;Write a regular expression which matches a email address.&lt;/li&gt;&lt;li&gt;Write  a function f(a, b) which takes two character string arguments and  returns a string containing only the characters found in both strings in  the order of a. Write a version which is order N-squared and one which  is order N.&lt;/li&gt;&lt;li&gt;You are given a the source to a application which is  crashing when run. After running it 10 times in a debugger, you find it  never crashes in the same place. The application is single threaded,  and uses only the C standard library. What programming errors could be  causing this crash? How would you test each one?&lt;/li&gt;&lt;li&gt;Explain how congestion control works in the TCP protocol.&lt;/li&gt;&lt;li&gt;In Java, what is the difference between final, finally, and finalize?&lt;/li&gt;&lt;li&gt;What is multithreaded programming? What is a deadlock?&lt;/li&gt;&lt;li&gt;Write  a function (with helper functions if needed) called to Excel that takes  an excel column value (A,B,C,D…AA,AB,AC,… AAA..) and returns a  corresponding integer value (A=1,B=2,… AA=26..).&lt;/li&gt;&lt;li&gt;You have a  stream of infinite queries (ie: real time Google search queries that  people are entering). Describe how you would go about finding a good  estimate of 1000 samples from this never ending set of data and then  write code for it.&lt;/li&gt;&lt;li&gt;Tree search algorithms. Write BFS and DFS  code, explain run time and space requirements. Modify the code to handle  trees with weighted edges and loops with BFS and DFS, make the code  print out path to goal state.&lt;/li&gt;&lt;li&gt;You are given a list of numbers.  When you reach the end of the list you will come back to the beginning  of the list (a circular list). Write the most efficient algorithm to  find the minimum # in this list. Find any given # in the list. The  numbers in the list are always increasing but you don't know where the  circular list begins, ie: 38, 40, 55, 89, 6, 13, 20, 23, 36.&lt;/li&gt;&lt;li&gt;Describe the data structure that is used to manage memory. (stack)&lt;/li&gt;&lt;li&gt;What's the difference between local and global variables?&lt;/li&gt;&lt;li&gt;If you have 1 million integers, how would you sort them efficiently? (modify a specific sorting algorithm to solve this)&lt;/li&gt;&lt;li&gt;In  Java, what is the difference between static, final, and const. (if you  don't know Java they will ask something similar for C or C++).&lt;/li&gt;&lt;li&gt;Talk  about your class projects or work projects (pick something easy)… then  describe how you could make them more efficient (in terms of  algorithms).&lt;/li&gt;&lt;li&gt;Suppose you have an NxN matrix of positive and  negative integers. Write some code that finds the sub-matrix with the  maximum sum of its elements.&lt;/li&gt;&lt;li&gt;Write some code to reverse a string.&lt;/li&gt;&lt;li&gt;Implement division (without using the divide operator, obviously).&lt;/li&gt;&lt;li&gt;Write some code to find all permutations of the letters in a particular string.&lt;/li&gt;&lt;li&gt;What method would you use to look up a word in a dictionary?&lt;/li&gt;&lt;li&gt;Imagine  you have a closet full of shirts. It's very hard to find a shirt. So  what can you do to organize your shirts for easy retrieval?&lt;/li&gt;&lt;li&gt;You  have eight balls all of the same size. 7 of them weigh the same, and one  of them weighs slightly more. How can you fine the ball that is heavier  by using a balance and only two weighings?&lt;/li&gt;&lt;li&gt;What is the C-language command for opening a connection with a foreign host over the internet?&lt;/li&gt;&lt;li&gt;Design  and describe a system/application that will most efficiently produce a  report of the top 1 million Google search requests. These are the  particulars: 1) You are given 12 servers to work with. They are all  dual-processor machines with 4Gb of RAM, 4x400GB hard drives and  networked together.(Basically, nothing more than high-end PC's) 2) The  log data has already been cleaned for you. It consists of 100 Billion  log lines, broken down into 12 320 GB files of 40-byte search terms per  line. 3) You can use only custom written applications or available free  open-source software.&lt;/li&gt;&lt;li&gt;There is an array A[N] of N numbers. You  have to compose an array Output[N] such that Output[i] will be equal to  multiplication of all the elements of A[N] except A[i]. For example  Output[0] will be multiplication of A[1] to A[N-1] and Output[1] will be  multiplication of A[0] and from A[2] to A[N-1]. Solve it without  division operator and in O(n).&lt;/li&gt;&lt;li&gt;There is a linked list of numbers  of length N. N is very large and you don't know N. You have to write a  function that will return k random numbers from the list. Numbers should  be completely random. Hint: 1. Use random function rand() (returns a  number between 0 and 1) and irand() (return either 0 or 1) 2. It should  be done in O(n).&lt;/li&gt;&lt;li&gt;Find or determine non existence of a number in a  sorted list of N numbers where the numbers range over M, M&amp;gt;&amp;gt; N  and N large enough to span multiple disks. Algorithm to beat O(log n)  bonus points for constant time algorithm.&lt;/li&gt;&lt;li&gt;You are given a game  of Tic Tac Toe. You have to write a function in which you pass the whole  game and name of a player. The function will return whether the player  has won the game or not. First you to decide which data structure you  will use for the game. You need to tell the algorithm first and then  need to write the code. Note: Some position may be blank in the game। So  your data structure should consider this condition also.&lt;/li&gt;&lt;li&gt;You  are given an array [a1 To an] and we have to construct another array [b1  To bn] where bi = a1*a2*...*an/ai. you are allowed to use only constant  space and the time complexity is O(n). No divisions are allowed.&lt;/li&gt;&lt;li&gt;How  do you put a Binary Search Tree in an array in a efficient manner. Hint  :: If the node is stored at the ith position and its children are at 2i  and 2i+1(I mean level order wise)Its not the most efficient way.&lt;/li&gt;&lt;li&gt;How  do you find out the fifth maximum element in an Binary Search Tree in  efficient manner. Note: You should not use use any extra space. i.e  sorting Binary Search Tree and storing the results in an array and  listing out the fifth element.&lt;/li&gt;&lt;li&gt;Given a Data Structure having  first n integers and next n chars. A = i1 i2 i3 ... iN c1 c2 c3 ...  cN.Write an in-place algorithm to rearrange the elements of the array  ass A = i1 c1 i2 c2 ... in cn&lt;/li&gt;&lt;li&gt;Given two sequences of items, find  the items whose absolute number increases or decreases the most when  comparing one sequence with the other by reading the sequence only once.&lt;/li&gt;&lt;li&gt;Given  That One of the strings is very very long , and the other one could be  of various sizes. Windowing will result in O(N+M) solution but could it  be better? May be NlogM or even better?&lt;/li&gt;&lt;li&gt;How many lines can be drawn in a 2D plane such that they are equidistant from 3 non-collinear points?&lt;/li&gt;&lt;li&gt;Let's  say you have to construct Google maps from scratch and guide a person  standing on Gateway of India (Mumbai) to India Gate(Delhi). How do you  do the same?&lt;/li&gt;&lt;li&gt;Given that you have one string of length N and M  small strings of length L. How do you efficiently find the occurrence of  each small string in the larger one?&lt;/li&gt;&lt;li&gt;Given a binary tree, programmatically you need to prove it is a binary search tree.&lt;/li&gt;&lt;li&gt;You  are given a small sorted list of numbers, and a very very long sorted  list of numbers - so long that it had to be put on a disk in different  blocks. How would you find those short list numbers in the bigger one?&lt;/li&gt;&lt;li&gt;Suppose  you have given N companies, and we want to eventually merge them into  one big company. How many ways are theres to merge?&lt;/li&gt;&lt;li&gt;Given a file of 4 billion 32-bit integers, how to find one that appears at least twice?&lt;/li&gt;&lt;li&gt;Write  a program for displaying the ten most frequent words in a file such  that your program should be efficient in all complexity measures.&lt;/li&gt;&lt;li&gt;Design a stack. We want to push, pop, and also, retrieve the minimum element in constant time.&lt;/li&gt;&lt;li&gt;Given a set of coin denominators, find the minimum number of coins to give a certain amount of change.&lt;/li&gt;&lt;li&gt;Given an array, i) find the longest continuous increasing subsequence. ii) find the longest increasing subsequence.&lt;/li&gt;&lt;li&gt;Suppose we have N companies, and we want to eventually merge them into one big company. How many ways are there to merge?&lt;/li&gt;&lt;li&gt;Write a function to find the middle node of a single link list.&lt;/li&gt;&lt;li&gt;Given  two binary trees, write a compare function to check if they are equal  or not. Being equal means that they have the same value and same  structure.&lt;/li&gt;&lt;li&gt;Implement put/get methods of a fixed size cache with LRU replacement algorithm.&lt;/li&gt;&lt;li&gt;You  are given with three sorted arrays ( in ascending order), you are  required to find a triplet ( one element from each array) such that  distance is minimum.&lt;/li&gt;&lt;li&gt;Distance is defined like this : If a[i],  b[j] and c[k] are three elements then  distance=max(abs(a[i]-b[j]),abs(a[i]-c[k]),abs(b[j]-c[k]))" Please give a  solution in O(n) time complexity&lt;/li&gt;&lt;li&gt;How does C++ deal with constructors and deconstructors of a class and its child class?&lt;/li&gt;&lt;li&gt;Write  a function that flips the bits inside a byte (either in C++ or Java).  Write an algorithm that take a list of n words, and an integer m, and  retrieves the mth most frequent word in that list.&lt;/li&gt;&lt;li&gt;What's 2 to the power of 64?&lt;/li&gt;&lt;li&gt;Given  that you have one string of length N and M small strings of length L.  How do you efficiently find the occurrence of each small string in the  larger one?&lt;/li&gt;&lt;li&gt;How do you find out the fifth maximum element in an Binary Search Tree in efficient manner.&lt;/li&gt;&lt;li&gt;Suppose we have N companies, and we want to eventually merge them into one big company. How many ways are there to merge? &lt;/li&gt;&lt;li&gt;There  is linked list of millions of node and you do not know the length of  it. Write a function which will return a random number from the list.&lt;/li&gt;&lt;li&gt;You  need to check that your friend, Bob, has your correct phone number, but  you cannot ask him directly. You must write a the question on a card  which and give it to Eve who will take the card to Bob and return the  answer to you. What must you write on the card, besides the question, to  ensure Bob can encode the message so that Eve cannot read your phone  number? &lt;/li&gt;&lt;li&gt;How long it would take to sort 1 trillion numbers? Come up with a good estimate.&lt;/li&gt;&lt;li&gt;Order the functions in order of their asymptotic performance: 1) 2^n 2) n^100 3) n! 4) n^n&lt;/li&gt;&lt;li&gt;There  are some data represented by(x,y,z). Now we want to find the Kth least  data. We say (x1, y1, z1) &amp;gt; (x2, y2, z2) when value(x1, y1, z1) &amp;gt;  value(x2, y2, z2) where value(x,y,z) = (2^x)*(3^y)*(5^z). Now we can not  get it by calculating value(x,y,z) or through other indirect  calculations as lg(value(x,y,z)). How to solve it?&lt;/li&gt;&lt;li&gt;How many degrees are there in the angle between the hour and minute hands of a clock when the time is a quarter past three?&lt;/li&gt;&lt;li&gt;Given  an array whose elements are sorted, return the index of a the first  occurrence of a specific integer. Do this in sub-linear time. I.e. do  not just go through each element searching for that element.&lt;/li&gt;&lt;li&gt;Given  two linked lists, return the intersection of the two lists: i.e. return  a list containing only the elements that occur in both of the input  lists.&lt;/li&gt;&lt;li&gt;What's the difference between a hashtable and a hashmap?&lt;/li&gt;&lt;li&gt;If  a person dials a sequence of numbers on the telephone, what possible  words/strings can be formed from the letters associated with those  numbers?&lt;/li&gt;&lt;li&gt;How would you reverse the image on an n by n matrix where each pixel is represented by a bit?&lt;/li&gt;&lt;li&gt;Create  a fast cached storage mechanism that, given a limitation on the amount  of cache memory, will ensure that only the least recently used items are  discarded when the cache memory is reached when inserting a new item.  It supports 2 functions: String get(T t) and void put(String k, T t).&lt;/li&gt;&lt;li&gt;Create  a cost model that allows Google to make purchasing decisions on to  compare the cost of purchasing more RAM memory for their servers vs.  buying more disk space.&lt;/li&gt;&lt;li&gt;Design an algorithm to play a game of  Frogger and then code the solution. The object of the game is to direct a  frog to avoid cars while crossing a busy road. You may represent a road  lane via an array. Generalize the solution for an N-lane road.&lt;/li&gt;&lt;li&gt;What sort would you use if you had a large data set on disk and a small amount of ram to work with?&lt;/li&gt;&lt;li&gt;What sort would you use if you required tight max time bounds and wanted highly regular performance.&lt;/li&gt;&lt;li&gt;How would you store 1 million phone numbers?&lt;/li&gt;&lt;li&gt;Design  a 2D dungeon crawling game. It must allow for various items in the maze  - walls, objects, and computer-controlled characters. (The focus was on  the class structures, and how to optimize the experience for the user  as s/he travels through the dungeon.)&lt;/li&gt;&lt;li&gt;What is the size of the C structure below on a 32-bit system? On a 64-bit?&lt;/li&gt;&lt;/ul&gt;struct foo {&lt;br /&gt;&lt;div&gt;char a;&lt;/div&gt;&lt;div&gt;char* b;&lt;/div&gt;&lt;div&gt;};&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;a href="" name="software_engineer_in_test"&gt;Google Interview: Software Engineer in Test&lt;/a&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;Efficiently implement 3 stacks in a single array.&lt;/li&gt;&lt;li&gt;Given an array of integers which is circularly sorted, how do you find a given integer.&lt;/li&gt;&lt;li&gt;Write a program to find depth of binary search tree without using recursion.&lt;/li&gt;&lt;li&gt;Find the maximum rectangle (in terms of area) under a histogram in linear time.&lt;/li&gt;&lt;li&gt;Most  phones now have full keyboards. Before there there three letters mapped  to a number button. Describe how you would go about implementing  spelling and word suggestions as people type.&lt;/li&gt;&lt;li&gt;Describe recursive mergesort and its runtime. Write an iterative version in C++/Java/Python.&lt;/li&gt;&lt;li&gt;How would you determine if someone has won a game of tic-tac-toe on a board of any size?&lt;/li&gt;&lt;li&gt;Given  an array of numbers, replace each number with the product of all the  numbers in the array except the number itself *without* using division.&lt;/li&gt;&lt;li&gt;Create a cache with fast look up that only stores the N most recently accessed items.&lt;/li&gt;&lt;li&gt;How  to design a search engine? If each document contains a set of keywords,  and is associated with a numeric attribute, how to build indices?&lt;/li&gt;&lt;li&gt;Given two files that has list of words (one per line), write a program to show the intersection.&lt;/li&gt;&lt;li&gt;What  kind of data structure would you use to index annagrams of words? e.g.  if there exists the word "top" in the database, the query for "pot"  should list that.&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;&lt;a href="" name="quantitative_compensation_analyst"&gt;Google Interview: Quantitative Compensation Analyst&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;What is the yearly standard deviation of a stock given the monthly standard deviation?&lt;/li&gt;&lt;li&gt;How many resumes does Google receive each year for software engineering?&lt;/li&gt;&lt;li&gt;Anywhere  in the world, where would you open up a new Google office and how would  you figure out compensation for all the employees at this new office?&lt;/li&gt;&lt;li&gt;What is the probability of breaking a stick into 3 pieces and forming a triangle?&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;a href="" name="engineering_manager"&gt;Google Interview: Engineering Manager&lt;/a&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;You're  the captain of a pirate ship, and your crew gets to vote on how the  gold is divided up. If fewer than half of the pirates agree with you,  you die. How do you recommend apportioning the gold in such a way that  you get a good share of the booty, but still survive?&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;&lt;a href="" name="adwords_associate"&gt;Google Interview: AdWords Associate&lt;/a&gt;&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;ul&gt;&lt;li&gt;How would you work with an advertiser who was not seeing the benefits of the AdWords relationship due to poor conversions?&lt;/li&gt;&lt;li&gt;How would you deal with an angry or frustrated advertisers on the phone?&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-size: small;"&gt;&lt;i&gt;Sources&lt;/i&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"&gt;&lt;span class="Apple-style-span" style="font-size: small;"&gt;&lt;a href="http://news.ycombinator.com/item?id=266663"&gt;http://news.ycombinator.com/item?id=266663&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-size: small;"&gt;&lt;a href="http://tihomir.org/crazy-questions-at-google-job-interview/"&gt;http://tihomir.org/crazy-questions-at-google-job-interview/&lt;/a&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-size: small;"&gt;&lt;a href="http://www.drizzle.com/%7Ejpaint/google.html"&gt;http://www.drizzle.com/~jpaint/google.html&lt;/a&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-size: small;"&gt;&lt;a href="http://www.gamedev.net/community/forums/topic.asp?topic_id=299692"&gt;http://www.gamedev.net/community/forums/topic.asp?topic_id=299692&lt;/a&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-size: small;"&gt;&lt;a href="http://careers.cse.sc.edu/googleinterview"&gt;http://careers.cse.sc.edu/googleinterview&lt;/a&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-size: small;"&gt;&lt;a href="http://job-interview.blogspot.com/2005/02/google-interview-product-marketing.html"&gt;http://job-interview.blogspot.com/2005/02/google-interview-product-marketing.html&lt;/a&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-size: small;"&gt;&lt;a href="http://www.theregister.co.uk/2007/01/05/google_interview_tales/"&gt;http://www.theregister.co.uk/2007/01/05/google_interview_tales/&lt;/a&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-size: small;"&gt;&lt;a href="http://money.cnn.com/2007/08/29/technology/brain_teasers.biz2/index.htm"&gt;http://money.cnn.com/2007/08/29/technology/brain_teasers.biz2/index.htm&lt;/a&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-size: small;"&gt;&lt;a href="http://blogs.lessthandot.com/index.php/ITProfessionals/EthicsIT/google-interview-questions"&gt;http://blogs.lessthandot.com/index.php/ITProfessionals/EthicsIT/google-interview-questions&lt;/a&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-size: small;"&gt;&lt;a href="http://placementsindia.blogspot.com/2007/09/google-top-interview-puzzles.html"&gt;http://placementsindia.blogspot.com/2007/09/google-top-interview-puzzles.html&lt;/a&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-size: small;"&gt;&lt;a href="http://linkmingle.com/user/interview_questions/google_interview_questions"&gt;http://linkmingle.com/user/interview_questions/google_interview_questions&lt;/a&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-size: small;"&gt;&lt;a href="http://discuss.joelonsoftware.com/default.asp?interview.11.626758.33"&gt;http://discuss.joelonsoftware.com/default.asp?interview.11.626758.33&lt;/a&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-size: small;"&gt;&lt;a href="http://mindcipher.com/puzzle/78-clock-works"&gt;http://mindcipher.com/puzzle/78-clock-works&lt;/a&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"&gt;&lt;span class="Apple-style-span" style="font-size: small;"&gt;&lt;a href="http://www.glassdoor.com/"&gt;http://www.glassdoor.com&lt;/a&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-size: small;"&gt;&lt;a href="http://bluepixel.ca/blog/?p=69"&gt;http://bluepixel.ca/blog/?p=69&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-size: small;"&gt;&lt;a href="http://www.businessinsider.com/my-nightmare-interviews-with-google-2009-11"&gt;http://www.businessinsider.com/my-nightmare-interviews-with-google-2009-11&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7243492491652124092/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/12/140-google-interview-questions.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7243492491652124092'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7243492491652124092'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/12/140-google-interview-questions.html' title='140 Google Interview Questions'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2427784016735337827</id><published>2010-12-04T15:21:00.001-06:00</published><updated>2010-12-04T15:21:55.905-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>Programmer Competency Matrix</title><content type='html'>&lt;a href="http://www.indiangeek.net/wp-content/uploads/Programmer%20competency%20matrix.htm"&gt;here&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2427784016735337827/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/12/programmer-competency-matrix.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2427784016735337827'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2427784016735337827'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/12/programmer-competency-matrix.html' title='Programmer Competency Matrix'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8291013721347229008</id><published>2010-12-04T15:20:00.000-06:00</published><updated>2010-12-04T15:20:50.052-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>it really does not matter for choosing among languages</title><content type='html'>the original webpage:&amp;nbsp;&lt;a href="http://sd.csdn.net/a/20101020/280710.html"&gt;click&lt;/a&gt; &lt;br /&gt;&lt;br /&gt;Lisp被许多资深程序员视为编程语言中的圣杯，因为学起来很难。著名程序员、最热门的技术问答网站StackOverflow创始人Joel Spolsky曾经在&lt;a href="http://www.ruanyifeng.com/blog/2008/12/the_perils_of_javaschools.html"&gt;"Java语言学校的危险性"&lt;/a&gt;一 文中说，自己当年在大学里学习用Lisp的导论课程也是苦不堪言，而Lisp这样的函数式语言实际开发中并不常用，但是一旦到了体现优势的时候，你如果不 懂，将失之千里。他还认为，Google的核心技术之一MapReduce就来自函数式语言，而且使Google领先微软多年。请注意，Spolsky曾 经1990年代微软的Excel项目经理，VBA的主要创造者。&lt;br /&gt;&lt;br /&gt;《Unix编程艺术》的作者Eric Raymond也在&lt;a href="http://www.aka.org.cn/Docs/hacker-howto_2001.html"&gt;"如何成为黑客"&lt;/a&gt;（&lt;a href="http://www.catb.org/%7Eesr/faqs/hacker-howto.html"&gt;英文版&lt;/a&gt;）中说过，Lisp是对黑客特别重要的语言，"掌握了之后，你会得到丰富的启迪和经验。 即使实际上很少使用Lisp，这些经验也会使你在以后的日子里成为更好的程序员。"&lt;br /&gt;&lt;br /&gt;而Paul Graham更是Lisp的头号吹鼓手，他曾与蠕虫病毒发明者Robert Morris一起，成功地用Lisp开发历史上第一个Web应用――ViaWeb，并高价卖给Yahoo致富。他在2001年写了一篇宣传Lisp的名文&lt;a href="http://www.paulgraham.com/avg.html"&gt;"Beating the Averages"&lt;/a&gt;&lt;span style="font-size: smaller;"&gt;（英文）&lt;/span&gt;，其中说到："Lisp之所以极为优秀，并不是因为只有铁杆粉丝才知道的某些魔术般的性质，而在于它确实是最强大的编程语言。大家不用它的原因，在于编程语言不只是技术，而且也是思维习惯，这是改变起来最慢的东西。"&lt;br /&gt;&lt;br /&gt;有意思的是，美国时间10月18日，著名技术新闻网站Hacker News上，名为kung-fu-master的用户发了一篇名为&lt;a href="http://news.ycombinator.com/item?id=1803351"&gt;"问PG: Lisp与Python (2010)"&lt;/a&gt;的帖子，内容很简单："好像许多Lisp老枪都开始转而用Python的（比如Peter Norvig）。今天你怎么看Lisp与Python？"&lt;br /&gt;&lt;br /&gt;这里的PG就是指Hacker News的创始人、著名Lisp程序员与吹鼓手Paul Graham。而其中提到的Peter Norvig则是另一个著名Lisp程序员，现任Google研发总监。他有一篇经典的文章&lt;a href="http://daiyuwen.freeshell.org/gb/misc/21-days-cn.html"&gt;"十年学会编程"&lt;/a&gt;（&lt;a href="http://www.norvig.com/21-days.html"&gt;英文版&lt;/a&gt;），相信大家都已经看过，他的首选推荐语言当然也是Lisp（更准确的说是Lisp的方言Scheme）。&lt;br /&gt;&lt;br /&gt;面对这样直接的问题，专家们是怎么回答的呢？&lt;br /&gt;Paul Graham说：&lt;br /&gt;&lt;table align="center" border="0" cellpadding="6" cellspacing="0" style="border: 1px dotted rgb(204, 204, 204); table-layout: fixed;"&gt;&lt;tbody&gt;&lt;tr&gt;             &lt;td bgcolor="#fdfddf" style="word-wrap: break-word;"&gt;这问题好像来自2005年而不是2010年。Lisp现在由于Clojure（Lisp的现代方言，可以运行在JVM&lt;a href="http://xn--0tr.net/"&gt;和.NET&lt;/a&gt;上――CSDN编者注）的出现，已经又变得时髦了。当然Python也有很好的库，但是我觉得用缺乏宏的语言编程很受局限。&lt;/td&gt;           &lt;/tr&gt;&lt;/tbody&gt; &lt;/table&gt;&lt;br /&gt;许多网友对Python没有宏的问题进行了讨论。有人说不支持宏是出于代码可读性的考虑。而更多的人则认同宏是一种抽象工具，任何工具都会被误用、滥用，但并不表示工具本身有问题。&lt;br /&gt;&lt;br /&gt;另一Lisp专家，《Coder at Work》和《Practical Common Lisp》作者&amp;gt;Peter Seibel也加入了讨论（他最近忙于编辑一种杂志&lt;a href="http://www.codequarterly.com/"&gt;Code Quarterly&lt;/a&gt;）。他说：自己与Peter Norvig有类似的体验。虽然自己Lisp非常熟练，但是在表达算法方面Python是最佳选择。不过，相比Lisp实现，CPython的运行速度慢得惊人，甚至差5-10倍。&lt;br /&gt;&lt;br /&gt;而Peter Norvig也罕见地现出真身，给出了自己的回答，内容一如既往地经典：&lt;br /&gt;&lt;table align="center" border="0" cellpadding="6" cellspacing="0" style="border: 1px dotted rgb(204, 204, 204); table-layout: fixed;"&gt;&lt;tbody&gt;&lt;tr&gt;             &lt;td bgcolor="#fdfddf" style="word-wrap: break-word;"&gt;我 是Peter Norvig。我转向Python不是因为它比Lisp更好、更令人满意、更实用，而是因为它用作伪代码更合适。许多学生说，在《人工智 能》（Norvig与Russell合著的经典教材）一书中的伪代码与我们在网上提供的Lisp代码之间进行转换太难了。于是我要寻找一种更近似伪代码的 语言，发现Python是最合适的。然后我就自学了Python，熟练到足以实现教材中示例的地步。我发现Python对于一些类型的小问题非常合适，有 些库也是我与其他的一些代码（包括在Google内和网上其他地方的代码）集成非常需要的。 我认为Lisp对更大的项目和编译速度很重要的应用而言仍然具有优势。但是在主要目的是交流而非编程的时候（比如针对数量众多的学生），Python更有 优势。&lt;br /&gt;&lt;br /&gt;就更一般意义上的编程而言，在Google和其他地方，&lt;b&gt;我认为语言的选择并不如其他方面的选择那么重要&lt;/b&gt;：如果你有了正确的总体架构、正确的程序员团队、正确的开发过程（能够快速开发、持续改善），那么很多语言都能胜任；但如果以上的东西你没有，那无论选择什么语言，你都会陷入一团糟。&lt;/td&gt;         &lt;/tr&gt;&lt;/tbody&gt; &lt;/table&gt;&lt;br /&gt;还有人找出今年2月Norvig在&lt;a href="http://www.youtube.com/watch?v=hE7k0_9k0VA#t=03m20s"&gt;一次采访&lt;/a&gt;&lt;span class="Apple-style-span" style="font-size: 12px;"&gt;（无法直接访问）&lt;/span&gt;中类似的话，透露了Google内部的一些信息：&lt;br /&gt;&lt;table align="center" border="0" cellpadding="6" cellspacing="0" style="border: 1px dotted rgb(204, 204, 204); table-layout: fixed;"&gt;&lt;tbody&gt;&lt;tr&gt;             &lt;td bgcolor="#fdfddf" style="word-wrap: break-word;"&gt;(1) Google最开始似乎核心程序员都是用C++的，效率很高。这部分形成了公司的文化。&lt;br /&gt;(2) Google早期的Lisp程序员(Erann Gat) 注意到其他程序员和自己的效率差不多，甚至更好。关键还是在人，与20年前相比，现在语言的选择不那么重要了。&lt;br /&gt;(3) Lisp是为单个程序员或者一小组程序员进行探索性工作而专门设计的……如果我想自己在周末修改代码，会更愿意用Lisp，但是如果有几百个程序员一起改代码，那就不是编程语言的问题，而是社会问题了。&lt;br /&gt;(4) 库。&lt;/td&gt;         &lt;/tr&gt;&lt;/tbody&gt; &lt;/table&gt;&lt;br /&gt;其他人举出的材料中，最有意思的应该来自Lisp之父、计算机科学巨人约翰麦卡锡。&lt;a href="http://smuglispweeny.blogspot.com/2008/02/ooh-ooh-my-turn-why-lisp.html"&gt;这篇博客&lt;/a&gt;&lt;span style="font-size: smaller;"&gt;（无法直接访问）&lt;/span&gt;里生动讲述了这位图灵奖得主在某次听Peter Norvig改而鼓吹Python的演讲后的情景：&lt;br /&gt;&lt;table align="center" border="0" cellpadding="6" cellspacing="0" style="border: 1px dotted rgb(204, 204, 204); table-layout: fixed;"&gt;&lt;tbody&gt;&lt;tr&gt;             &lt;td bgcolor="#fdfddf" style="word-wrap: break-word;"&gt;Norvig 演讲后，进入提问环节。出乎我的意料，他点了一位皱巴巴的老头。老头的胡子和头发都花白了，而且乱糟糟的，看上去像是来此参观但是迷路了，到这里来休息一 下，好奇地听听我们在说什么。我第一个念头是，估计他已经被这么艰深的话题弄晕了。但是马上想到，不对啊，这里离斯坦福很近，这老头的年纪也对，难道 是……&lt;br /&gt;只听Norvig说："是，John，你有什么问题？"我记不清Lisp之父当时怎么问的了，但不超过十 个词，就是问Python是否能如Lisp那样优雅地像数据一样处理代码。"不，John，不行。"Norvig回答，然后静等麦卡锡继续发问。但是，老 人什么也没有再说。此时真是无言胜千语啊……&lt;/td&gt;         &lt;/tr&gt;&lt;/tbody&gt; &lt;/table&gt;&lt;br /&gt;看来，在大师眼中，数据与代码等同处理是最重要的语言特性之一。他还曾经在&lt;a href="http://www.infoq.com/interviews/mccarthy-elephant-2000"&gt;访谈&lt;/a&gt;中这样评价Ruby（提问者说Ruby从Lisp中借鉴了很多）："Ruby能像数据那样使用列表结构吗？那每次算加和减的时候，都得进行解析？这方面Ruby还不如1960年的Lisp。"</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8291013721347229008/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/12/it-really-does-not-matter-for-choosing.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8291013721347229008'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8291013721347229008'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/12/it-really-does-not-matter-for-choosing.html' title='it really does not matter for choosing among languages'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6938106816828082124</id><published>2010-11-19T13:11:00.002-06:00</published><updated>2011-02-28T14:22:11.472-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>coding advices</title><content type='html'>After decades of programming I do not even think about these three ways to read code. I just glance at it and know what it means, and I can even glance at a whole screen of code, and all the bugs and errors jump out at me. That took an incredibly long time and quite a bit more study than is sane. To get that way, I learned these three ways of reading most any programming language:&lt;br /&gt;&lt;br /&gt;1. Front to back.&lt;br /&gt;2. Back to front.&lt;br /&gt;3. Counter-clock-wise.&lt;br /&gt;&lt;br /&gt;Try them out when you have a difficult statement to figure out. When you type the next block of your code, go over it in these ways. This one is gonna be fun.&lt;br /&gt;&lt;br /&gt;......&lt;br /&gt;&lt;br /&gt;I am warning you, this will be frustrating. In the business we call this "yak shaving". Yak shaving is any activity that is mind numblingly irritatingly boring and tedious that you have to do before you can do something else that's more fun. You want to create cool Python projects, but you can't do that until you setup a skeleton directory, but you can't setup a skeleton directory until you install some packages, but you can't install pacakages until you install package installers, and you can't install package installers until you figure out how your system installs software in general, and so on.&lt;br /&gt;&lt;br /&gt;Struggle through this anyway. Consider it your trial-by-annoyance to get into the programmer club. Every programmer has to do these annoying tedious tasks before they can do something cool.&lt;br /&gt;&lt;br /&gt;......&lt;br /&gt;&lt;br /&gt;What I discovered after this journey of learning is that the languages did not matter, it's what you do with them. Actually, I always knew that, but I'd get distracted by the languages and forget it periodically. Now I never forget it,&lt;br /&gt;and neither should you.&lt;br /&gt;&lt;br /&gt;Which programming language you learn and use does not matter. Do not get sucked into the religion surrounding programing languages as that will only blind you to their true purpose of being your tool for doing interesting things.&lt;br /&gt;&lt;br /&gt;Programming as an intellectual activity is the only art form that allows you to create interactive art. You can create projects that other people can play with, and you can talk to them indirectly. No other art form is quite this &amp;nbsp;interactive. Movies flow to the audience in one direction. Paintings do not move. Code goes both ways.&lt;br /&gt;&lt;br /&gt;Programming as a profession is only moderately interesting. It can be a good job, but if you want to make about the same money and be happier, you could actually just go run a fast food joint. You are much better off using code as&lt;br /&gt;your secret weapon in another profession.&lt;br /&gt;&lt;br /&gt;People who can code in the world of technology companies are a dime a dozen and get no respect. People who can code in biology, medicine, government, sociology, physics, history, and mathematics are respected and can do amazing things to advance those disciplines.&lt;br /&gt;&lt;br /&gt;Of course, all of this advice is pointless. If you liked learning to write software with this book, you should try to use it to improve your life any way you can. Go out and explore this weird wonderful new intellectual pursuit that barely anyone in the last 50 years has been able to explore. Might as well enjoy it while you can.&lt;br /&gt;&lt;br /&gt;Finally, I will say that learning to create software changes you and makes you different. Not better or worse, just different. You may find that people treat you harshly because you can create software, maybe using words like "nerd". Maybe you will find that because you can dissect their logic that they hate arguing with you. You may even find that simply knowing how a computer works makes you annoying and weird to them.&lt;br /&gt;&lt;br /&gt;To this I have one just piece of advice: they can go to hell. The world needs more weird people who know how things work and who love to figure it all out. When they treat you like this, just remember that this is your journey, not theirs. Being different is not a crime, and people who tell you it is are just jealous that you have picked up a skill they never in their wildest dreams could acquire.&lt;br /&gt;&lt;br /&gt;You can code. They cannot. That is pretty damn cool.&lt;br /&gt;===&lt;br /&gt;&lt;br /&gt;***CLASS STYLE&lt;br /&gt;* Your class should use “camel case” like SuperGoldFactory rather than super_gold_factory.&lt;br /&gt;* Try not to do too much in your __init__ functions. It makes them harder to use.&lt;br /&gt;* Your other functions should use “underscore format” so write my_awesome_hair and not myawesomehair or MyAwesomeHair.&lt;br /&gt;* Be consistent in how you organize your function arguments. If your class has to deal with users, dogs, and cats, keep that order throughout unless it really doesn't make sense. If you have one function takes (dog, cat, user) and the other takes (user, cat, dog), it'll be hard to use.&lt;br /&gt;* Try not to use variables that come from the module or globals. They should be fairly self-contained.&lt;br /&gt;* A foolish consistency is the hobgoblin of little minds. Consistency is good, but foolishly following some idiotic mantra because everyone else does is bad style. Think for yourself.&lt;br /&gt;* Always, always have class Name(object) format or else you will be in big trouble.&lt;br /&gt;&lt;br /&gt;***CODE STYLE&lt;br /&gt;* Give your code vertical space so people can read it. You will find some very bad programmers who are able to write reasonable code, but who do not add any spaces. This is bad style in any language because the human eye and brain use space and vertical alignment to scan and separate visual elements. Not having space is the same as giving your code an awesome camouflage paint job.&lt;br /&gt;* If you can't read it out loud, it's probably hard to read. If you are having a problem making something easy to use, try reading it out loud. Not only does this force you to slow down and really read it, but it also helps you find difficult passages and things to change for readability.&lt;br /&gt;* Try to do what other people are doing in Python until you find your own style.&lt;br /&gt;* Once you find your own style, do not be a jerk about it. Working with other people's code is part of being a programmer, and other people have really bad taste. Trust me, you will probably have really bad taste too and not even realize it.&lt;br /&gt;* If you find someone who writes code in a style you like, try writing something that mimics their style.&lt;br /&gt;&lt;br /&gt;***GOOD COMMENTS&lt;br /&gt;* There are programmers who will tell you that your code should be readable enough that you do not need comments. They'll then tell you in their most official sounding voice that, "Ergo you should never write comments." Those programmers are either consultants who get paid more if other people can't use their code, or incompetents who tend to never work with other people. Ignore them and write comments.&lt;br /&gt;* When you write comments, describe why you are doing what you are doing. The code already says how, but why you did things the way you did is more important.&lt;br /&gt;* When you write doc comments for your functions , make the comments documentation for someone who will have to use your code. You do not have to go crazy, but a nice little sentence about what someone does with that function helps a lot.&lt;br /&gt;* Finally, while comments are good, too many are bad, and you have to maintain them. Keep your comments relatively short and to the point, and if you change a function, review the comment to make sure it's still correct.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/6938106816828082124/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/11/coding-advices.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6938106816828082124'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6938106816828082124'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/11/coding-advices.html' title='coding advices'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8013552305057025159</id><published>2010-11-19T11:10:00.002-06:00</published><updated>2010-11-19T11:11:00.351-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>some useful link for programming format</title><content type='html'>&lt;a href="http://www.embeded.cn/online/hightc.htm"&gt;高质量C++/C编程指南&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://code.google.com/p/google-styleguide/"&gt;Google code: google style code&lt;/a&gt; (including C/C++, Javascript, and Python)&lt;br /&gt;&lt;br /&gt;&lt;a href="http://1codechs.codeplex.com/releases/view/54868"&gt;Microsoft: All-In-One Code Framework&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8013552305057025159/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/11/some-useful-link-for-programming.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8013552305057025159'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8013552305057025159'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/11/some-useful-link-for-programming.html' title='some useful link for programming format'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7956193533204920710</id><published>2010-11-19T11:07:00.003-06:00</published><updated>2010-11-19T11:20:46.735-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>some advices about python coding</title><content type='html'>from 《learn python the hard way》&lt;br /&gt;======&lt;br /&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;Every if-statement must have an else. If this else should never be run because it doesn't make sense, then you must use a die function in the else that prints out an error message and dies, just like we did in the last exercise. This will find many errors.&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;Never nest if-statements more than 2 deep and always try to do them 1 deep. This means if you put an if in an if then you should be looking to move that second if into another function.&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;Treat if-statements like paragraphs, where each if,elif,else grouping is like a set of sentences. Put blank lines before and after. Your boolean tests should be simple. If they are complex, move their calculations to variables earlier in your function and use a good name for the variable.&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;The best way to debug a program is to use print to print out the values of variables at points in the program to see where they go wrong.&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="margin-bottom: 0px; margin-left: 0px; margin-right: 0px; margin-top: 0px;"&gt;Make sure parts of your programs work as you work on them. Do not write massive files of code before you try to run them. Code a little, run a little, fix a little.&lt;/div&gt;======&lt;br /&gt;&lt;br /&gt;Every if-statement must have an else. If this else should never be run because it doesn't make sense, then you must use a die function in the else that prints out an error message and dies, just like we did in the last exercise. This will find many errors.&lt;br /&gt;&lt;br /&gt;Never nest if-statements more than 2 deep and always try to do them 1 deep. This means if you put an if in an if then you should be looking to move that second if into another function.&lt;br /&gt;&lt;br /&gt;Treat if-statements like paragraphs, where each if,elif,else grouping is like a set of sentences. Put blank lines before and after. Your boolean tests should be simple. If they are complex, move their calculations to variables earlier in your function and use a good name for the variable.&lt;br /&gt;&lt;br /&gt;The best way to debug a program is to use print to print out the values of variables at points in the program to see where they go wrong.&lt;br /&gt;&lt;br /&gt;Make sure parts of your programs work as you work on them. Do not write massive files of code before you try to run them. Code a little, run a little, fix a little.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;When&amp;nbsp;scrutinizing&amp;nbsp;the code, pay attention on:&lt;br /&gt;&lt;br /&gt;1. Functions and what they do.&lt;br /&gt;2. Where each variable is first given a value.&lt;br /&gt;3. Any variables with the same names in different parts of the program. These may be trouble later.&lt;br /&gt;4. Any if-statements without else clauses. Are they right?&lt;br /&gt;5. Any while-loops that might not end.&lt;br /&gt;6. Finally, any parts of code that you can’t understand for whatever reason.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7956193533204920710/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/11/some-advices-about-python-coding.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7956193533204920710'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7956193533204920710'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/11/some-advices-about-python-coding.html' title='some advices about python coding'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3841689535562851450</id><published>2010-11-19T11:04:00.001-06:00</published><updated>2010-11-19T13:10:21.912-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>Top 20 Programming Lessons I've Learned in 20 Years</title><content type='html'>&lt;ol&gt;&lt;li&gt;&lt;strong&gt;Set a duration of how long you think it should take to solve a problem - &lt;/strong&gt;C'mon, admit it! I'm just as guilty as the next programmer. I've seen programmers sit in front of a monitor for eight hours at a time trying to solve a particular problem. Set a time table for yourself of 1 hour, 30 minutes, or even 15 minutes. If you can't figure out a solution to your problem within your time frame, ask for help or research your problem on the Internet instead of trying to be super-coder.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;A language is a language is a language&lt;/strong&gt; - Over time, once you understand how one language works, you'll notice similarities between other languages. The language you choose should provide you with a suitable "comfort" level, the ability to produce efficient (and clean) code, and, above all, allow the language to suit the project and vice-versa.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Don't over-"design pattern" applications&lt;/strong&gt; - Sometimes it's just easier to write a simple algorithm than it is to incorporate a singleton or facade pattern. For the most part, it even allows for cleaner, understandable code. :-)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Always backup your code&lt;/strong&gt; - I've experienced a complete hard drive failue and lost a lot of code when I was younger and felt horrible because of what had happened. The one time you don't back up your data may be the one time where you have a strict deadline with a client and they need it tomorrow. Source code/version control applies here as well.&lt;br /&gt;&lt;/li&gt;&lt;li&gt;&lt;strong&gt;You are not the best at programming. Live with it.&lt;/strong&gt; - I always thought that I knew so much about programming, but there is always someone out there better than you. Always. Learn from them.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Learn to learn more&lt;/strong&gt; - With number five explained, I've always had a magazine or book in my hand about computers or programming (ask my friends, they'll confirm). True, there is a lot of technology out there and keeping up with it is a fulltime job, but if you have a smart way of receiving your news, you'll learn about new technology every single day.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Change is constant&lt;/strong&gt; - Your knowledge of technology and/or programming should be similar to how you treat stocks: Diversify. Don't get too comfortable with a particular technology. If there's not enough support for that language or technology, you might as well start updating your resume now and start your training period. My general rule of thumb that has kept me going? Know at least two or three languages, so if one dies off, you have another one to fall back on while you train for a new technology.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Support Junior&lt;/strong&gt; - Assist and train the junior/entry-level developers on good programming guidelines and techniques. You never know...you may move up in rank and you'll feel more confident having personally trained and prepared them for their next position.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Simplify the algorithm&lt;/strong&gt; - Code like a fiend, but once you're done, go back through your code and optimize it. A little code improvement here and there will make support happier in the long run.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Document your code&lt;/strong&gt; - Whether its documenting a Web Service API or documenting a simple class, document as you go. I've been accused of over-commenting my code and that's something I'm proud of. It only takes a second to add an additional comment line for each 3 lines of code. If it's a harder technique to grasp, don't be afraid to over-comment. This is one problem most architects, backup coders, and support groups don't complain about if you've done your job right.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Test, Test, Test&lt;/strong&gt; - I'm a fan of &lt;a href="http://en.wikipedia.org/wiki/Black_box_testing"&gt;Black Box Testing&lt;/a&gt;. When your routine is finished, your "stamp of approval" period starts. If you have a Quality Assurance department, you may be talking more to them than your project manager regarding errors in your code. If you don't test your code thoroughly, you may develop more than code. Possibly a bad reputation.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Celebrate every success&lt;/strong&gt; - I've met a lot of programmers who have conquered headache-style problems with a great programming technique and celebrated with a fellow programmer by doing the "shake", the high-five, or even a "happy dance." Everyone has enlightening periods in their life and even though that one happy coder asked you to come and see his extraordinary piece of code and you've seen that one piece of code over 100 times in your experiences, celebrate the success of a fellow developer for the 101-st time.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Have Code Reviews Frequently&lt;/strong&gt; - On projects and personally. In the company, you will always have code reviews of how well you coded something. Don't look at it as people crucifying your coding style. Think of it as constructive criticism. On the personal front, review your code and always ask, "How could I have done it better?" This will accelerate your learning and make you a better programmer.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;R&lt;/strong&gt;&lt;strong&gt;eminisce about your code&lt;/strong&gt; - There are two ways to looking at old code: "I can't believe I wrote this code" and "I can't believe I wrote this code." The first statement is often of disgust and wondering how you can improve it. You'd be surprised at how old code can be resurrected into a possible and better routine, or maybe even an entire product. The second statement is of amazement and achievement. Developers have their one or two project code achievements that they completed and had everyone standing up and taking notice. Again, based on your excellent coding ability, you could take those past routines or projects and update them into a better product or idea.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Humor is necessary&lt;/strong&gt; - In my 20 years of development, I have never met a programmer who hasn't had a decent sense of humor. Actually, in this industry, it's a requirement.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Beware the know-it-all, &lt;a href="http://www.dcs-media.com/Archive/business-lesson-1-7G"&gt;possessive coder&lt;/a&gt;, and the inexperienced coder&lt;/strong&gt; - Humble yourself when you meet these types of coders. The know-it-all tries to upstage you instead of working as a team player, the defensive coder created code that he doesn't want to share with anyone, and the inexperienced coder constantly asks for assistance every ten minutes where the finished code developed is yours, not theirs.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;No project is ever simple&lt;/strong&gt; - I've been asked by friends, family, and associates to just "whip something up for me." To "whip" up a program or web site, it takes planning from both parties to complete something that both sides can appreciate. If someone needs a 3-page web site with Microsoft Access from the start, it winds up becoming a 15-page web site with SQL Server, a forum, and a custom CMS (Content Management System).&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Never take anything for granted&lt;/strong&gt; - If you take on a simple project, you may think that a certain section will be easy to complete. Don't think that even for a moment. Unless you have a class, component, or piece of code&lt;em&gt; already coded&lt;/em&gt;...and has been tested thoroughly...and is in production from an existing project, don't think it will be easy.&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Software is never finished&lt;/strong&gt; - A fellow programmer once told me that software is never finished, it's "temporarily completed." Sound advice. If the client is still using a program you wrote and has stood the test of time, chances are, you are still updating it, which isn't a bad thing. It keeps you working. :-)&lt;/li&gt;&lt;li&gt;&lt;strong&gt;Patience is definitely a virtue&lt;/strong&gt; - When clients, friends, or family members use a PC, they get frustrated and proceed to hit a component of the PC or storm off. I keep telling everyone, "you are controlling the computer not the other way around." You need to have a certain level of patience for programming computers. As soon as programmers understand what they did wrong, they look at it from the computers point of view and say, "Oh, that's why it was doing that."&lt;/li&gt;&lt;/ol&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3841689535562851450/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/11/top-20-programming-lessons-ive-learned.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3841689535562851450'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3841689535562851450'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/11/top-20-programming-lessons-ive-learned.html' title='Top 20 Programming Lessons I&apos;ve Learned in 20 Years'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3672327710150489278</id><published>2010-11-10T16:44:00.002-06:00</published><updated>2010-11-19T13:10:37.724-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>What make code "looks" more professional?</title><content type='html'>author: &lt;a href="http://blog.csdn.net/michaellufhl/archive/2010/11/08/5996261.aspx"&gt;Micheal Lu&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;这么题目看起来就比较有争议：运行起来专业的代码才专业嘛。但是从另外一个角度来说"让代码看上去比较专业"是一个积极的做法，无论对谁都没有坏处，对工程师，管理者和用户都有益无弊。&lt;br /&gt;&lt;br /&gt;&amp;nbsp;首先这个题目说的是"看上去",所以我不会说明如何使代码真正专业。世界上有很多的书籍和文章告诉软件工程师如何写出专业的代码。如果要说"什么样的代码看上去比较专业？"那就要定义什么是专业的代码。嗯，关于这点我不能下一个准确的定义。那么可以这样，大家可以参考一些大家共认的专业代码。对于Java JDK代码来说几乎没人会否认它是专业的代码。或者一些很有影响力的open source代码，像Spring 和Apache 的代码。当然很多商业软件的代码也是很专业，但是我们看不到，或者说这不是共认的专业代码。&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp;* 最显而易见的做法是充足的代码注释 和标准缩进 的格式。但是大家一致认为这是最明显的因素。&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp;* 然后是命名规范 。有人曾经在网上展示自己的一个framework的代码,framework自然是很牛的东西。但是接下来马上有人回帖"我一看到大写开头的方法名，我就没兴趣了"。这是个很典型的例子。&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;命名规范里面用拼音 做包名，类名，方法和变量名字也会使代码看上去感觉比较差。我说的是代码，不是注释。&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp;* 还有就是要用最新的语言特性 。对于Java,譬如要用Annotaion, Generic。虽然这些特性已经出现很多年了。至少要用@Override 一下吧。我知道大家知道用Annotaion, Generic的真正的益处。&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp;* 尽量不要用Magic number 。如果一看到到处都是"id".equals(...); if(i==356). ..大家就会感觉不好。&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp;* 还有就是最好包含单元测试 的代码，JUnit 已经成为Java的公认单元测试工具。很多开发人员认为对于一个严肃的程序，单元测试是必需的。&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp;* 避免冗长的方法和类。我知道大家深受其害。&lt;br /&gt;&lt;br /&gt;&amp;nbsp;其实我认为"看上去"专业能促进代码质量。充足的代码注释和标准缩进的格式能增强可读性，另外在撰写注释的时候也是在"拷问"自己的代码，如果你觉得某个方法的注释很难写，那就要问问自己的这个方法的代码逻辑写得不够清晰。有时候在注释方法的@throws XXXException 的时候，你才会仔细考虑哪些Exception会在什么情况下被抛出。@Override 能够避免低级打字错误。Generic容器比较安全等等。&lt;br /&gt;&lt;br /&gt;&amp;nbsp;从代码演变的角度来说，有个明显的"破窗理论"在起作用。就是越是难看的代码，在它的演化过程中会越来越差。因为当你看到你要bugfix的代码很乱，那么在bugfix的时候一般也会草草了事。一个方法有400行，在修改这个方法的时候大家不会在意再加上几十行代码。因为它看起来很差，它就是很差，我没必要美化它。反过来说，如果待改的代码很整洁很规范，那么修改者也会比较小心。这不是绝对，只是一般情况。一定有很帅的工程师把很难看的代码改得很整洁，也一定有很无畏的工程师在很好的代码上面乱改，这就是生活:)</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3672327710150489278/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/11/what-make-code-looks-more-professional.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3672327710150489278'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3672327710150489278'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/11/what-make-code-looks-more-professional.html' title='What make code &quot;looks&quot; more professional?'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5819607675319380716</id><published>2010-11-10T16:44:00.000-06:00</published><updated>2010-11-10T16:44:34.474-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Susan Sontag: a letter to Borges</title><content type='html'>13 June 1996 New York&lt;br /&gt;Dear Borges,&lt;br /&gt;&lt;br /&gt;Since your literature was always placed under the sign of eternity, it doesn't seem too odd to be addressing a letter to you. (Borges, it's 10 years!) If ever a contemporary seemed destined for literary immortality, it was you. You were very much the product of your time, your culture, and yet you knew how to transcend your time, your culture, in ways that seem quite magical. This had something to do with the openness and generosity of your attention. You were the least egocentric, the most transparent of writers, as well as the most artful. It also had something to do with a natural purity of spirit. Though you lived among us for a rather long time, you perfected practices of fastidiousness and of detachment that made you an expert mental traveller to other eras as well. You had a sense of time that was different from other people's. The ordinary ideas of past, present and future seemed banal under your gaze. You liked to say that every moment of time contains the past and the future, quoting (as I&amp;nbsp; remember) the poet Browning, who wrote something like, "the present is the instant in which the future crumbles into the past.'' That, of course, was part of your modesty: your taste for finding your ideas in the ideas of other writers.&lt;br /&gt;&lt;br /&gt;Your modesty was part of the sureness of your presence. You were a discoverer of new joys. A pessimism as profound, as serene, as yours did not need to be indignant. It had, rather, to be inventive – and you were, above all, inventive. The serenity and the transcendence of self that you found are to me exemplary. You showed that it is not necessary to be unhappy, even while one is clear-eyed and undeluded about how terrible everything is. Somewhere you said that a writer–delicately you added: all persons – must think that whatever happens to him or her is a resource. (You were speaking of your blindness.) You have been a great resource, for other writers. In 1982 – that is, four years before you died – I said in an interview, "There is no writer living today who matters more to other writers than Borges. Many people would say he is the greatest living writer... Very few writers of today have not learnt from him or imitated him.''&lt;br /&gt;&lt;br /&gt;That is still true. We are still learning from you. We are still imitating you. You gave people new ways of imagining, while proclaiming over and over our indebtedness to the past, above all, to literature. You said that we owe literature almost everything we are and what we have been. If books disappear, history will disappear, and human beings will also disappear. I am sure you are right. Books are not only the arbitrary sum of our dreams, and our memory. They also give us the model of self-transcendence. Some people think of reading only as a kind of escape: an escape from the "real'' everyday world to an imaginary world, the world of books. Books are much more. They are a way of being fully human.&lt;br /&gt;&lt;br /&gt;I'm sorry to have to tell you that books are now considered an endangered species. By books, I also mean the conditions of reading that make possible literature and its soul effects. Soon, we are told, we will call up on "bookscreens'' any "text'' on demand, and will be able to change its appearance, ask questions of it, "interact'' with it. When books become "texts'' that we "interact'' with according to criteria of utility, the written word will have become simply another aspect of our advertising-driven televisual reality. This is the glorious future being created, and promised to us, as something more "democratic''. Of course, it means nothing less then the death of inwardness – and of the book.&lt;br /&gt;&lt;br /&gt;This time around, there will be no need for a great conflagration. The barbarians don't have to burn the books. The tiger is in the library. Dear Borges, please understand that it gives me no satisfaction to complain. But to whom could such complaints about the fate of books–of reading itself – be better addressed than to you? (Borges, it's 10 years!) All I mean to say is that we miss you. I miss you. You continue to make a difference. The era we are entering now, this 21st century, will test the soul in new ways. But, you can be sure, some of us are not going to abandon the Great Library. And you will continue to be our patron and our hero.&lt;br /&gt;&lt;br /&gt;Extracted from 'Where the Stress Falls' by Susan Sontag (Jonathan Cape, £17.99).</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5819607675319380716/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/11/susan-sontag-letter-to-borges.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5819607675319380716'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5819607675319380716'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/11/susan-sontag-letter-to-borges.html' title='Susan Sontag: a letter to Borges'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1853029991534996566</id><published>2010-11-01T13:14:00.000-05:00</published><updated>2011-02-28T14:15:23.403-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>(ZT) some important algorithms</title><content type='html'>下面是一些比较重要的算法，&lt;a href="http://www.risc.jku.at/people/ckoutsch/stuff/e_algorithms.html" target="_blank" title="原文"&gt;原文&lt;/a&gt;罗 列了32个，但我觉得有很多是数论里的，和计算机的不相干，所以没有选取。下面的这些，有的我们经常在用，有的基本不用。有的很常见，有的很偏。不过了解 一下也是好事。也欢迎你留下你觉得有意义的算法。（注：本篇文章并非翻译，其中的算法描述大部份摘自Wikipedia，因为维基百科描述的很专业了）&lt;br /&gt;&lt;br /&gt;&lt;a href="http://zh.wikipedia.org/zh-cn/A*%E6%90%9C%E5%AF%BB%E7%AE%97%E6%B3%95" target="_blank" title="A*搜寻算法"&gt;A*搜寻算法&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;俗称A星算法。这是一种在图形平面上，有多个节点的路径，求出最低通过成本的算法。常用于游戏中的NPC的移动计算，或线上游戏的BOT的移动计算上。该算法像Dijkstra算法一样，可以找到一条最短路径；也像BFS一样，进行启发式的搜索。&lt;br /&gt;&lt;br /&gt;&lt;a href="http://en.wikipedia.org/wiki/Beam_search" target="_blank" title="Beam Search"&gt;Beam Search&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;束 搜索(beam search)方法是解决优化问题的一种启发式方法，它是在分枝定界方法基础上发展起来的，它使用启发式方法估计k个最好的路径，仅从这k个路径出发向下 搜索，即每一层只有满意的结点会被保留，其它的结点则被永久抛弃，从而比分枝定界法能大大节省运行时间。束搜索于20 世纪70年代中期首先被应用于人工智能领域,1976 年Lowerre在其称为HARPY的语音识别系统中第一次使用了束搜索方法，他的目标是并行地搜索几个潜在的最优决策路径以减少回溯，并快速地获得一个 解。&lt;br /&gt;&lt;br /&gt;&lt;a href="http://zh.wikipedia.org/zh-cn/%E6%8A%98%E5%8D%8A%E6%90%9C%E7%B4%A2%E7%AE%97%E6%B3%95" target="_blank" title="二分取中查找算法"&gt;  二分取中查找算法&lt;/a&gt;一 种在有序数组中查找某一特定元素的搜索算法。搜素过程从数组的中间元素开始，如果中间元素正好是要查找的元素，则搜素过程结束；如果某一特定元素大于或者 小于中间元素，则在数组大于或小于中间元素的那一半中查找，而且跟开始一样从中间元素开始比较。这种搜索算法每一次比较都使搜索范围缩小一半。&lt;br /&gt;&lt;br /&gt;&lt;a href="http://en.wikipedia.org/wiki/Branch_and_bound" target="_blank" title="Branch and bound"&gt;Branch and bound&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;分支定界(branch and bound)算法是一种在问题的解空间树上搜索问题的解的方法。但与回溯算法不同，分支定界算法采用广度优先或最小耗费优先的方法搜索解空间树，并且，在分支定界算法中，每一个活结点只有一次机会成为扩展结点。&lt;br /&gt;&lt;br /&gt;&lt;a href="http://en.wikipedia.org/wiki/Data_compression" target="_blank" title="数据压缩"&gt;数据压缩&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;数据压缩是通过减少计算机中所存储数据或者通信传播中数据的冗余度，达到增大数据密度，最终使数据的存储空间减少的技术。数据压缩在文件存储和分布式系统领域有着十分广泛的应用。数据压缩也代表着尺寸媒介容量的增大和网络带宽的扩展。&lt;br /&gt;&lt;br /&gt;&lt;a href="http://zh.wikipedia.org/zh-cn/Diffie-Hellman%E5%AF%86%E9%92%A5%E4%BA%A4%E6%8D%A2" target="_blank" title="Diffie�Hellman密钥协商"&gt;  Diffie�Hellman密钥协商&lt;/a&gt;Diffie�Hellman key exchange，简称"D�H"，是一种安全协议。它可以让双方在完全没有对方任何预先信息的条件下通过不安全信道建立起一个密钥。这个密钥可以在后续的通讯中作为对称密钥来加密通讯内容。&lt;br /&gt;&lt;br /&gt;&lt;a href="http://zh.wikipedia.org/zh-cn/%E8%BF%AA%E7%A7%91%E6%96%AF%E5%BD%BB%E7%AE%97%E6%B3%95" target="_blank" title="Dijkstra's 算法"&gt;  Dijkstra's 算法&lt;/a&gt;迪 科斯彻算法（Dijkstra）是由荷兰计算机科学家艾兹格・迪科斯彻（Edsger Wybe Dijkstra）发明的。算法解决的是有向图中单个源点到其他顶点的最短路径问题。举例来说，如果图中的顶点表示城市，而边上的权重表示著城市间开车行 经的距离，迪科斯彻算法可以用来找到两个城市之间的最短路径。&lt;br /&gt;&lt;br /&gt;&lt;a href="http://zh.wikipedia.org/zh-cn/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92" target="_blank" title="动态规划"&gt;动态规划&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;动 态规划是一种在数学和计算机科学中使用的，用于求解包含重叠子问题的最优化问题的方法。其基本思想是，将原问题分解为相似的子问题，在求解的过程中通过子 问题的解求出原问题的解。动态规划的思想是多种算法的基础，被广泛应用于计算机科学和工程领域。比较著名的应用实例有：求解最短路径问题，背包问题，项目 管理，网络流优化等。这里也有一篇文章说得比较详细。&lt;br /&gt;&lt;br /&gt;&lt;a href="http://zh.wikipedia.org/zh-cn/%E8%BC%BE%E8%BD%89%E7%9B%B8%E9%99%A4%E6%B3%95" target="_blank" title="欧几里得算法"&gt;欧几里得算法&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;在数学中，辗转相除法，又称欧几里得算法，是求最大公约数的算法。辗转相除法首次出现于欧几里得的《几何原本》（第VII卷，命题i和ii）中，而在中国则可以追溯至东汉出现的《九章算术》。&lt;br /&gt;&lt;br /&gt;&lt;a href="http://zh.wikipedia.org/zh-cn/%E6%9C%80%E5%A4%A7%E6%9C%9F%E6%9C%9B%E7%AE%97%E6%B3%95" target="_blank" title="最大期望（EM）算法"&gt;  最大期望（EM）算法&lt;/a&gt;在 统计计算中，最大期望（EM）算法是在概率（probabilistic）模型中寻找参数最大似然估计的算法，其中概率模型依赖于无法观测的隐藏变量 （Latent Variable）。最大期望经常用在机器学习和计算机视觉的数据聚类（Data Clustering）领域。最大期望算法经过两个步骤交替进行计算，第一步是计算期望（E），利用对隐藏变量的现有估计值，计算其最大似然估计值；第二 步是最大化（M），最大化在 E 步上求得的最大似然值来计算参数的值。M 步上找到的参数估计值被用于下一个 E 步计算中，这个过程不断交替进行。&lt;br /&gt;&lt;br /&gt;&lt;a href="http://zh.wikipedia.org/zh-cn/%E5%BF%AB%E9%80%9F%E5%82%85%E9%87%8C%E5%8F%B6%E5%8F%98%E6%8D%A2" target="_blank" title="快速傅里叶变换(FFT)"&gt;  快速傅里叶变换(FFT)&lt;/a&gt;快 速傅里叶变换（Fast Fourier Transform，FFT），是离散傅里叶变换的快速算法，也可用于计算离散傅里叶变换的逆变换。快速傅里叶变换有广泛的应用，如数字信号处理、计算大 整数乘法、求解偏微分方程等等。本条目只描述各种快速算法，对于离散傅里叶变换的性质和应用，请参见离散傅里叶变换。&lt;br /&gt;&lt;br /&gt;&lt;a href="http://zh.wikipedia.org/zh-cn/%E6%95%A3%E5%88%97%E5%87%BD%E6%95%B8" target="_blank" title="哈希函数"&gt;哈希函数&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;HashFunction 是一种从任何一种数据中创建小的数字"指纹"的方法。该函数将数据打乱混合，重新创建一个叫做散列值的指纹。散列值通常用来代表一个短的随机字母和数字组 成的字符串。好的散列函数在输入域中很少出现散列冲突。在散列表和数据处理中，不抑制冲突来区别数据，会使得数据库记录更难找到。&lt;br /&gt;&lt;br /&gt;&lt;a href="http://zh.wikipedia.org/zh-cn/%E5%A0%86%E7%A9%8D%E6%8E%92%E5%BA%8F" target="_blank" title="堆排序"&gt;堆排序&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Heapsort是指利用堆积树（堆）这种数据结构所设计的一种排序算法。堆积树是一个近似完全二叉树的结构，并同时满足堆积属性：即子结点的键值或索引总是小于（或者大于）它的父结点。&lt;br /&gt;&lt;br /&gt;&lt;a href="http://zh.wikipedia.org/zh-cn/%E5%BD%92%E5%B9%B6%E6%8E%92%E5%BA%8F" target="_blank" title="归并排序"&gt;归并排序&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Merge sort是建立在归并操作上的一种有效的排序算法。该算法是采用分治法（Divide and Conquer）的一个非常典型的应用。&lt;br /&gt;&lt;br /&gt;&lt;a href="http://en.wikipedia.org/wiki/RANSAC" target="_blank" title="RANSAC 算法"&gt;RANSAC 算法&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;RANSAC 是"RANdom SAmpleConsensus"的缩写。该算法是用于从一组观测数据中估计数学模型参数的迭代方法，由Fischler and Bolles在1981提出，它是一种非确定性算法，因为它只能以一定的概率得到合理的结果，随着迭代次数的增加，这种概率是增加的。该算法的基本假设是 观测数据集中存在"inliers"（那些对模型参数估计起到支持作用的点）和"outliers"（不符合模型的点），并且这组观测数据受到噪声影响。 RANSAC 假设给定一组"inliers"数据就能够得到最优的符合这组点的模型。&lt;br /&gt;&lt;br /&gt;&lt;a href="http://zh.wikipedia.org/zh-tw/RSA%E5%8A%A0%E5%AF%86%E6%BC%94%E7%AE%97%E6%B3%95" target="_blank" title="RSA加密演算法"&gt;RSA加密演算法&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;这是一个公钥加密算法，也是世界上第一个适合用来做签名的算法。今天的RSA已经专利失效，其被广泛地用于电子商务加密，大家都相信，只要密钥足够长，这个算法就会是安全的&lt;br /&gt;&lt;br /&gt;&lt;a href="http://zh.wikipedia.org/zh-cn/%E5%B9%B6%E6%9F%A5%E9%9B%86" target="_blank" title="并查集Union-find"&gt;并查集Union-find&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;并查集是一种树型的数据结构，用于处理一些不相交集合（Disjoint Sets）的合并及查询问题。常常在使用中以森林来表示。&lt;br /&gt;&lt;br /&gt;&lt;a href="http://blog.52nlp.org/hmm-learn-best-practices-six-viterbi-algorithm-1" target="_blank" title="Viterbi algorithm"&gt;Viterbi algorithm&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;寻找最可能的隐藏状态序列(Finding most probable sequence of hidden states)&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;BTY:&lt;br /&gt;关于这个世界上的算法，你可以看看Wikipedia的这个网页：&lt;a href="http://en.wikipedia.org/wiki/List_of_algorithms" target="_blank" title="http://en.wikipedia.org/wiki/List_of_algorithms"&gt;http://en.wikipedia.org/wiki/List_of_algorithms&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;关于排序算法，你可以看看本站的这几篇文章《&lt;a href="http://coolshell.cn/articles/536.html" target="_blank" title="一个显示排序过程的Python脚本"&gt;一个显示排序过程的Python脚本&lt;/a&gt;》、《&lt;a href="http://coolshell.cn/articles/399.html" target="_blank" title="一个排序算法比较的网站"&gt;一个排序算法比较的网站&lt;/a&gt;》</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1853029991534996566/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/11/zt-some-important-algorithms.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1853029991534996566'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1853029991534996566'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/11/zt-some-important-algorithms.html' title='(ZT) some important algorithms'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5762572629481402576</id><published>2010-10-29T14:44:00.000-05:00</published><updated>2010-10-29T14:44:39.175-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='matlab'/><title type='text'>matlab syms</title><content type='html'>&amp;gt;&amp;gt;syms x&lt;br /&gt;&amp;gt;&amp;gt;syms y&lt;br /&gt;&amp;gt;&amp;gt;&amp;nbsp;y=diff(0.25*3^x*exp(-3.56*x*(1-x)))&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;y =&lt;br /&gt;(3^x*exp((89*x*(x - 1))/25)*((178*x)/25 - 89/25))/4 + (3^x*exp((89*x*(x - 1))/25)*log(3))/4&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&amp;gt;&amp;gt; solve('-(178*x)/25 + 89/25-log(3)=0','x')&lt;br /&gt;&lt;br /&gt;ans = 1/2 - (25*log(3))/178&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&amp;gt;&amp;gt; x=1/2 - (25*log(3))/178&lt;br /&gt;&lt;br /&gt;x =&amp;nbsp;0.3457&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;***OR***&lt;br /&gt;&lt;br /&gt;&amp;gt;&amp;gt; solve('y=0','y','x')&lt;br /&gt;&lt;br /&gt;% if x has only one solution, the value can be seen from the "Workspace"&lt;br /&gt;% However, if it has more than one solution, i still do not know how to look into % the construction of syms......</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5762572629481402576/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/matlab-syms.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5762572629481402576'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5762572629481402576'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/matlab-syms.html' title='matlab syms'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5538700083608389023</id><published>2010-10-29T13:18:00.000-05:00</published><updated>2011-02-28T14:15:50.874-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='jobhunting'/><title type='text'>backup: interview summary</title><content type='html'>谷歌笔试：&lt;br /&gt;1.&lt;br /&gt;n支队伍比赛，分别编号为0，1，2。。。。n-1，已知它们之间的实力对比关系，存储在一个二维数组w[n][n] 中，w[i][j]&lt;br /&gt;的值代表编号为i，j的队伍中更强的一支 所以w[i][j]=i 或者j，现在给出它们的出场顺序，并存储在数组order[n]中，&lt;br /&gt;比如order[n] = {4,3,5,8,1......}，那么第一轮比赛就是 4对3， 5对8。。。。。。&lt;br /&gt;胜者晋级，败者淘汰，同一轮淘汰的所有队伍排名不再细分，即可以随便排，&lt;br /&gt;下一轮由上一轮的胜者按照顺序，再依次两两比，比如可能是4对5,直至出现第一名&lt;br /&gt;编程实现，给出二维数组w，一维数组order 和 用于输出比赛名次的数组result[n]，求出result&lt;p&gt;&lt;br /&gt;2.题目说的比较花哨，根据我的理解，本质上就是有n个长为m+1的字符串，如果某个字符串的最后m个字符与某个字符串的前m个字符匹配，则两个字符串可以联接，问这n个字符串最多可以连成一个多长的字符串，如果出现循环，则返回错误&lt;p&gt;百度面试：&lt;p&gt;3.&lt;br /&gt;用天平（只能比较，不能称重）从一堆小球中找出其中唯一一个较轻的，使用x次天平 最多可以从y个小球中找出较轻的那个，求y与x的关系式&lt;br /&gt;4.有一个很大很大的输入流，大到没有存储器可以将其存储下来，而且只输入一次，如何从这个输入流中随机取得m个记录&lt;br /&gt;5.大量的URL字符串，如何从中去除重复的，优化时间空间复杂度&lt;p&gt;网易有道笔试：&lt;br /&gt;6. 求一个二叉树中任意两个节点间的最大距离，两个节点的距离的定义是&lt;br /&gt;这两个节点间边的个数，比如某个孩子节点和父节点间的距离是1，和相邻兄弟节点间的距离是2，优化时间空间复杂度&lt;br /&gt;7.求一个有向连通图的割点，割点的定义是，如果除去此节点和与其相关的边，有向图不再连通，描述算法&lt;p&gt;discussion can be found @:&lt;br /&gt;&lt;a href="http://topic.csdn.net/u/20100930/13/9f10c56c-9545-488e-9b53-edffc9b6761d.html"&gt;http://topic.csdn.net/u/20100930/13/9f10c56c-9545-488e-9b53-edffc9b6761d.html&lt;/a&gt;&lt;p&gt;==========&lt;p&gt;GOOGLE今天晚上的笔试题，刚参加回来.&lt;p&gt;第一题比较简单，检测同一个平面上的两个矩形是否重合&lt;p&gt;第二题是，给定一个随机函数，对一个数组进行随机排列，保证所有可能的排列出现的概率相等，也就是n!分之一&lt;p&gt;&lt;br /&gt;第三题就是约瑟夫问题的最优解法~Knuth具体数学上有，不过我忘记了，自己没推导出来，就写了个模拟&lt;p&gt;discussion can be found @:&lt;br /&gt;&lt;a href="http://topic.csdn.net/u/20101018/23/75b6dc53-610f-401e-b8ae-5aebee5cabe8.html"&gt;http://topic.csdn.net/u/20101018/23/75b6dc53-610f-401e-b8ae-5aebee5cabe8.html&lt;/a&gt;&lt;p&gt;==========&lt;p&gt;雅虎：&lt;br /&gt;1.对于一个整数矩阵，存在一种运算，对矩阵中任意元素加一时，需要其相邻（上下左右）某一个元素也加一，现给出一正数矩阵，判断其是否能够由一个全零矩阵经过上述运算得到。&lt;p&gt;2.一个整数数组，长度为n，将其分为m份，使各份的和相等，求m的最大值&lt;br /&gt;比如{3，2，4，3，6} 可以分成{3，2，4，3，6} m=1;&lt;br /&gt;{3,6}{2,4,3} m=2&lt;br /&gt;{3,3}{2,4}{6} m=3 所以m的最大值为3&lt;p&gt;搜狐：&lt;p&gt;3.四对括号可以有多少种匹配排列方式？比如两对括号可以有两种：（）（）和（（））&lt;p&gt;创新工场：&lt;p&gt;4.求一个数组的最长递减子序列 比如{9，4，3，2，5，4，3，2}的最长递减子序列为{9，5，4，3，2}&lt;p&gt;微软：&lt;br /&gt;5.一个数组是由一个递减数列左移若干位形成的，比如{4，3，2，1，6，5}是由{6，5，4，3，2，1}左移两位形成的，在这种数组中查找某一个数。&lt;p&gt;discussion can be found @:&lt;br /&gt;&lt;a href="http://topic.csdn.net/u/20101021/14/7fdbcd52-3ee6-42ce-b48e-8fb56c4418da.html"&gt;http://topic.csdn.net/u/20101021/14/7fdbcd52-3ee6-42ce-b48e-8fb56c4418da.html&lt;/a&gt;&lt;p&gt;==========&lt;p&gt;雅虎：&lt;br /&gt;1.对于一个整数矩阵，存在一种运算，对矩阵中任意元素加一时，需要其相邻（上下左右）某一个元素也加一，现给出一正数矩阵，判断其是否能够由一个全零矩阵经过上述运算得到。&lt;p&gt;2.一个整数数组，长度为n，将其分为m份，使各份的和相等，求m的最大值&lt;br /&gt;比如{3，2，4，3，6} 可以分成{3，2，4，3，6} m=1;&lt;br /&gt;{3,6}{2,4,3} m=2&lt;br /&gt;{3,3}{2,4}{6} m=3 所以m的最大值为3&lt;p&gt;搜狐：&lt;p&gt;3.四对括号可以有多少种匹配排列方式？比如两对括号可以有两种：（）（）和（（））&lt;p&gt;创新工场：&lt;p&gt;4.求一个数组的最长递减子序列 比如{9，4，3，2，5，4，3，2}的最长递减子序列为{9，5，4，3，2}&lt;p&gt;微软：&lt;br /&gt;5.一个数组是由一个递减数列左移若干位形成的，比如{4，3，2，1，6，5}是由{6，5，4，3，2，1}左移两位形成的，在这种数组中查找某一个数。&lt;p&gt;discussion can be found @:&lt;br /&gt;&lt;a href="http://topic.csdn.net/u/20101021/14/7fdbcd52-3ee6-42ce-b48e-8fb56c4418da.html"&gt;http://topic.csdn.net/u/20101021/14/7fdbcd52-3ee6-42ce-b48e-8fb56c4418da.html&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5538700083608389023/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/backup-interview-summary.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5538700083608389023'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5538700083608389023'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/backup-interview-summary.html' title='backup: interview summary'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1622787773691944429</id><published>2010-10-29T13:17:00.001-05:00</published><updated>2011-02-28T14:21:26.806-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Network'/><title type='text'>sth. about usrp in gnuradio</title><content type='html'>On Thu, Jul 21, 2005 at 05:48:33PM +0530, Arora_Amit wrote:&lt;br /&gt;&amp;gt; Hi all,&lt;br /&gt;&amp;gt;&lt;br /&gt;&amp;gt; We are working on USRP. Please can any let us know what the&lt;br /&gt;&amp;gt; factors or on what basis the audio_decimation, if_freq, usrp_decim.&lt;br /&gt;&lt;br /&gt;These values are choosen so that the sample rates through the&lt;br /&gt;processing path "make sense".&amp;nbsp; The USRP can sample and decimate at&lt;br /&gt;particular rates.&amp;nbsp; The audio sink/source can sample at particular&lt;br /&gt;rates.&amp;nbsp; We generally pick ratios such that they are related by simple&lt;br /&gt;integer factors and that the signals of interest have appropriate&lt;br /&gt;bandwidth at various points in the signal processing chain.&lt;br /&gt;&lt;br /&gt;The API for using and controlling the usrp is documented in &lt;br /&gt;usrp/host/lib/usrp_basic.h and usrp_standard.h&lt;br /&gt;&lt;br /&gt;&amp;gt; It will be help if we can get what the following mention programs does:&lt;br /&gt;&lt;br /&gt;&amp;gt; 1.&amp;nbsp;&amp;nbsp;&amp;nbsp; usrp_fft_simple.py&lt;br /&gt;&lt;br /&gt;Does the same thing as usrp_fft only with less gui cruft.&lt;br /&gt;(Plots Fast Fourier Transform of samples received from USRP.)&lt;br /&gt;&lt;br /&gt;&amp;gt; 2.&amp;nbsp;&amp;nbsp;&amp;nbsp; benchmark_usb.py &lt;br /&gt;&lt;br /&gt;An unreliable program to detemine maximum bandwidth of USB&lt;br /&gt;&lt;br /&gt;&amp;gt;From the comment at the top of the file:&lt;br /&gt;&lt;br /&gt;&amp;nbsp; Benchmark the USB/USRP throughput.&amp;nbsp; Finds the maximum full-duplex speed&lt;br /&gt;&amp;nbsp; the USRP/USB combination can sustain without errors.&lt;br /&gt;&lt;br /&gt;&amp;gt; 3.&amp;nbsp;&amp;nbsp;&amp;nbsp; usrp_oscope.py&lt;br /&gt;&lt;br /&gt;Digital oscilloscope that uses a USRP as the source of samples.&lt;br /&gt;&lt;br /&gt;&amp;gt; 4.&amp;nbsp;&amp;nbsp;&amp;nbsp; dbs_debug.py &lt;br /&gt;&lt;br /&gt;Program to assist in debugging the DBS_RX daughterboard.&lt;br /&gt;&lt;br /&gt;The DBS_RX daughterboard is a receive-only daughterboard that covers &lt;br /&gt;800 MHz to 2400 MHz.&lt;br /&gt;&lt;br /&gt;&amp;gt; 5.&amp;nbsp;&amp;nbsp;&amp;nbsp; nbfm_ptt_quick_and_dirty.py &lt;br /&gt;&lt;br /&gt;Removed from CVS.&amp;nbsp; See nbfm_ptt.py&amp;nbsp; Narrow Band FM "Push to Talk" (wakie-talkie)&lt;br /&gt;&lt;br /&gt;&amp;gt; 6.&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; usrp_rx_cfile.py&lt;br /&gt;&lt;br /&gt;Read samples from the USRP and write to file formatted as binary&lt;br /&gt;single-precision complex values.&lt;br /&gt;&lt;br /&gt;&amp;gt; 7.&amp;nbsp;&amp;nbsp;&amp;nbsp; dbs_fft.py&lt;br /&gt;&lt;br /&gt;Removed from CVS.&lt;br /&gt;&lt;br /&gt;&amp;gt; 8.&amp;nbsp;&amp;nbsp;&amp;nbsp; nbfm_rcv.py &lt;br /&gt;&lt;br /&gt;Narrow Band FM receiver.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;If you haven't already, I suggest that you spend some time with:&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &lt;a href="http://www.gnu.org/software/gnuradio/doc/exploring-gnuradio.html" target="_blank"&gt;http://www.gnu.org/software/gnuradio/doc/exploring-gnuradio.html&lt;/a&gt;&lt;br /&gt;&amp;nbsp; &lt;a href="http://www.gnu.org/software/gnuradio/doc/howto-write-a-block.html" target="_blank"&gt;http://www.gnu.org/software/gnuradio/doc/howto-write-a-block.html&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Also, there are online docs for the C++ guts:&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &lt;a href="http://www.gnu.org/software/gnuradio/doc/index.html" target="_blank"&gt;http://www.gnu.org/software/gnuradio/doc/index.html&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1622787773691944429/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/sth-about-usrp-in-gnuradio.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1622787773691944429'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1622787773691944429'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/sth-about-usrp-in-gnuradio.html' title='sth. about usrp in gnuradio'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8244934166028408886</id><published>2010-10-29T13:16:00.002-05:00</published><updated>2010-11-01T13:14:38.003-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='matlab'/><title type='text'>matlab log</title><content type='html'>log: Natural logarithm&lt;br /&gt;Syntax: Y = log(X)&lt;br /&gt;Description:&lt;br /&gt;The log function operates element-wise on arrays. Its domain includes&lt;br /&gt;complex and negative numbers, which may lead to unexpected results if&lt;br /&gt;used unintentionally.&lt;br /&gt;Y = log(X) returns the natural logarithm of the elements of X. For&lt;br /&gt;complex or negative , where , the complex logarithm is returned.&lt;br /&gt;log(z) = log(abs(z)) + i*atan2(y,x)&lt;br /&gt;Examples&lt;br /&gt;The statement abs(log(-1)) is a clever way to generate .&lt;br /&gt;ans =&lt;br /&gt;3.1416</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8244934166028408886/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/matlab-log.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8244934166028408886'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8244934166028408886'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/matlab-log.html' title='matlab log'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-9189937315500449056</id><published>2010-10-29T13:16:00.001-05:00</published><updated>2010-10-29T13:16:52.931-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>CS Conference Rankings: System Technology area</title><content type='html'>Rank 1:&lt;p&gt;SIGCOMM: ACM Conf on Comm Architectures, Protocols &amp;amp; Apps&lt;br /&gt;INFOCOM: Annual Joint Conf IEEE Comp &amp;amp; Comm Soc&lt;br /&gt;SPAA: Symp on Parallel Algms and Architecture&lt;br /&gt;PODC: ACM Symp on Principles of Distributed Computing&lt;br /&gt;PPoPP: Principles and Practice of Parallel Programming&lt;br /&gt;RTSS: Real Time Systems Symp&lt;br /&gt;SOSP: ACM SIGOPS Symp on OS Principles&lt;br /&gt;SOSDI: Usenix Symp on OS Design and Implementation&lt;br /&gt;CCS: ACM Conf on Comp and Communications Security&lt;br /&gt;IEEE Symposium on Security and Privacy&lt;br /&gt;MOBICOM: ACM Intl Conf on Mobile Computing and Networking&lt;br /&gt;USENIX Conf on Internet Tech and Sys&lt;br /&gt;ICNP: Intl Conf on Network Protocols&lt;br /&gt;PACT: Intl Conf on Parallel Arch and Compil Tech&lt;br /&gt;RTAS: IEEE Real-Time and Embedded Technology and Applications Symposium&lt;br /&gt;ICDCS: IEEE Intl Conf on Distributed Comp Systems&lt;p&gt;&lt;br /&gt;Rank 2:&lt;p&gt;CC: Compiler Construction&lt;br /&gt;IPDPS: Intl Parallel and Dist Processing Symp&lt;br /&gt;IC3N: Intl Conf on Comp Comm and Networks&lt;br /&gt;ICPP: Intl Conf on Parallel Processing&lt;br /&gt;SRDS: Symp on Reliable Distributed Systems&lt;br /&gt;MPPOI: Massively Par Proc Using Opt Interconns&lt;br /&gt;ASAP: Intl Conf on Apps for Specific Array Processors&lt;br /&gt;Euro-Par: European Conf. on Parallel Computing&lt;br /&gt;Fast Software Encryption&lt;br /&gt;Usenix Security Symposium&lt;br /&gt;European Symposium on Research in Computer Security&lt;br /&gt;WCW: Web Caching Workshop&lt;br /&gt;LCN: IEEE Annual Conference on Local Computer Networks&lt;br /&gt;IPCCC: IEEE Intl Phoenix Conf on Comp &amp;amp; Communications&lt;br /&gt;CCC: Cluster Computing Conference&lt;br /&gt;ICC: Intl Conf on Comm&lt;br /&gt;WCNC: IEEE Wireless Communications and Networking Conference&lt;br /&gt;CSFW: IEEE Computer Security Foundations Workshop&lt;p&gt;&lt;br /&gt;Rank 3:&lt;p&gt;MPCS: Intl. Conf. on Massively Parallel Computing Systems&lt;br /&gt;GLOBECOM: Global Comm&lt;br /&gt;ICCC: Intl Conf on Comp Communication&lt;br /&gt;NOMS: IEEE Network Operations and Management Symp&lt;br /&gt;CONPAR: Intl Conf on Vector and Parallel Processing&lt;br /&gt;VAPP: Vector and Parallel Processing&lt;br /&gt;ICPADS: Intl Conf. on Parallel and Distributed Systems&lt;br /&gt;Public Key Cryptosystems&lt;br /&gt;Annual Workshop on Selected Areas in Cryptography&lt;br /&gt;Australasia Conference on Information Security and Privacy&lt;br /&gt;Int. Conf on Inofrm and Comm. Security&lt;br /&gt;Financial Cryptography&lt;br /&gt;Workshop on Information Hiding&lt;br /&gt;Smart Card Research and Advanced Application Conference&lt;br /&gt;ICON: Intl Conf on Networks&lt;br /&gt;NCC: Nat Conf Comm&lt;br /&gt;IN: IEEE Intell Network Workshop&lt;br /&gt;Softcomm: Conf on Software in Tcomms and Comp Networks&lt;br /&gt;INET: Internet Society Conf&lt;br /&gt;Workshop on Security and Privacy in E-commerce&lt;p&gt;&lt;br /&gt;Un-ranked:&lt;p&gt;&lt;br /&gt;PARCO: Parallel Computing&lt;br /&gt;SE: Intl Conf on Systems Engineering (**)&lt;br /&gt;PDSECA: workshop on Parallel and Distributed Scientific and&lt;br /&gt;Engineering Computing with Applications&lt;br /&gt;CACS: Computer Audit, Control and Security Conference&lt;br /&gt;SREIS: Symposium on Requirements Engineering for Information Security&lt;br /&gt;SAFECOMP: International Conference on Computer Safety, Reliability and Security&lt;br /&gt;IREJVM: Workshop on Intermediate Representation Engineering for the&lt;br /&gt;Java Virtual Machine&lt;br /&gt;EC: ACM Conference on Electronic Commerce&lt;br /&gt;EWSPT: European Workshop on Software Process Technology&lt;br /&gt;HotOS: Workshop on Hot Topics in Operating Systems&lt;br /&gt;HPTS: High Performance Transaction Systems&lt;br /&gt;Hybrid Systems&lt;br /&gt;ICEIS: International Conference on Enterprise Information Systems&lt;br /&gt;IOPADS: I/O in Parallel and Distributed Systems&lt;br /&gt;IRREGULAR: Workshop on Parallel Algorithms for Irregularly Structured Problems&lt;br /&gt;KiVS: Kommunikation in Verteilten Systemen&lt;br /&gt;LCR: Languages, Compilers, and Run-Time Systems for Scalable Computers&lt;br /&gt;MCS: Multiple Classifier Systems&lt;br /&gt;MSS: Symposium on Mass Storage Systems&lt;br /&gt;NGITS: Next Generation Information Technologies and Systems&lt;br /&gt;OOIS: Object Oriented Information Systems&lt;br /&gt;SCM: System Configuration Management&lt;br /&gt;Security Protocols Workshop&lt;br /&gt;SIGOPS European Workshop&lt;br /&gt;SPDP: Symposium on Parallel and Distributed Processing&lt;br /&gt;TreDS: Trends in Distributed Systems&lt;br /&gt;USENIX Technical Conference&lt;br /&gt;VISUAL: Visual Information and Information Systems&lt;br /&gt;FoDS: Foundations of Distributed Systems: Design and Verification of&lt;br /&gt;Protocols conference&lt;br /&gt;RV: Post-CAV Workshop on Runtime Verification&lt;br /&gt;ICAIS: International ICSC-NAISO Congress on Autonomous Intelligent Systems&lt;br /&gt;ITiCSE: Conference on Integrating Technology into Computer Science Education&lt;br /&gt;CSCS: CyberSystems and Computer Science Conference&lt;br /&gt;AUIC: Australasian User Interface Conference&lt;br /&gt;ITI: Meeting of Researchers in Computer Science, Information Systems&lt;br /&gt;Research &amp;amp; Statistics&lt;br /&gt;European Conference on Parallel Processing&lt;br /&gt;RODLICS: Wses International Conference on Robotics, Distance Learning&lt;br /&gt;&amp;amp; Intelligent Communication Systems&lt;br /&gt;International Conference On Multimedia, Internet &amp;amp; Video Technologies&lt;br /&gt;PaCT: Parallel Computing Technologies workshop&lt;br /&gt;PPAM: International Conference on Parallel Processing and Applied Mathematics&lt;br /&gt;International Conference On Information Networks, Systems And Technologies&lt;br /&gt;AmiRE: Conference on Autonomous Minirobots for Research and Edutainment&lt;br /&gt;DSN: The International Conference on Dependable Systems and Networks&lt;br /&gt;IHW: Information Hiding Workshop&lt;br /&gt;GTVMT: International Workshop on Graph Transformation and Visual&lt;br /&gt;Modeling Techniques</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/9189937315500449056/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/cs-conference-rankings-system.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/9189937315500449056'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/9189937315500449056'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/cs-conference-rankings-system.html' title='CS Conference Rankings: System Technology area'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2728768604151124999</id><published>2010-10-22T10:10:00.001-05:00</published><updated>2011-02-28T14:22:11.472-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>basic python math calculation in gnuradio</title><content type='html'>/gnuradio3.2.2/gr-wxgui/src/python/common.py&lt;p&gt;####################&lt;br /&gt;# Shared Functions&lt;br /&gt;#####################&lt;br /&gt;import numpy&lt;br /&gt;import math&lt;p&gt;&amp;quot;&amp;quot;&amp;quot;&lt;br /&gt;# Python is a general purpose programming language.&lt;br /&gt;It is interpreted and dynamically typed and is very&lt;br /&gt;suited for interactive work and quick prototyping,&lt;br /&gt;while being powerful enough to write large applications in.&lt;br /&gt;# NumPy is a Python extension module, written mostly in C,&lt;br /&gt;that defines the numerical array and matrix types&lt;br /&gt;and basic operations on them.&lt;br /&gt;&amp;quot;&amp;quot;&amp;quot;&lt;p&gt;def get_exp(num):&lt;br /&gt;&amp;quot;&amp;quot;&amp;quot;&lt;br /&gt;Get the exponent of the number in base 10.&lt;br /&gt;@param num the floating point number&lt;br /&gt;@return the exponent as an integer&lt;br /&gt;&amp;quot;&amp;quot;&amp;quot;&lt;br /&gt;if num == 0: return 0&lt;br /&gt;return int(math.floor(math.log10(abs(num))))&lt;p&gt;def get_clean_num(num):&lt;br /&gt;&amp;quot;&amp;quot;&amp;quot;&lt;br /&gt;Get the closest clean number match to num with bases 1, 2, 5.&lt;br /&gt;@param num the number&lt;br /&gt;@return the closest number&lt;br /&gt;&amp;quot;&amp;quot;&amp;quot;&lt;br /&gt;if num == 0: return 0&lt;br /&gt;sign = num &amp;gt; 0 and 1 or -1&lt;br /&gt;exp = get_exp(num)&lt;br /&gt;nums = numpy.array((1, 2, 5, 10))*(10**exp)&lt;br /&gt;return sign*nums[numpy.argmin(numpy.abs(nums - abs(num)))]&lt;br /&gt;#numpy.argmin: Return the indices of the minimum values along an axis.&lt;p&gt;def get_clean_incr(num):&lt;br /&gt;&amp;quot;&amp;quot;&amp;quot;&lt;br /&gt;Get the next higher clean number with bases 1, 2, 5.&lt;br /&gt;@param num the number&lt;br /&gt;@return the next higher number&lt;br /&gt;&amp;quot;&amp;quot;&amp;quot;&lt;br /&gt;num = get_clean_num(num)&lt;br /&gt;exp = get_exp(num)&lt;br /&gt;coeff = int(round(num/10**exp))&lt;br /&gt;return {&lt;br /&gt;-5: -2,&lt;br /&gt;-2: -1,&lt;br /&gt;-1: -.5,&lt;br /&gt;1: 2,&lt;br /&gt;2: 5,&lt;br /&gt;5: 10,&lt;br /&gt;}[coeff]*(10**exp)&lt;p&gt;def get_clean_decr(num):&lt;br /&gt;&amp;quot;&amp;quot;&amp;quot;&lt;br /&gt;Get the next lower clean number with bases 1, 2, 5.&lt;br /&gt;@param num the number&lt;br /&gt;@return the next lower number&lt;br /&gt;&amp;quot;&amp;quot;&amp;quot;&lt;br /&gt;num = get_clean_num(num)&lt;br /&gt;exp = get_exp(num)&lt;br /&gt;coeff = int(round(num/10**exp))&lt;br /&gt;return {&lt;br /&gt;-5: -10,&lt;br /&gt;-2: -5,&lt;br /&gt;-1: -2,&lt;br /&gt;1: .5,&lt;br /&gt;2: 1,&lt;br /&gt;5: 2,&lt;br /&gt;}[coeff]*(10**exp)&lt;p&gt;def get_min_max(samples):&lt;br /&gt;&amp;quot;&amp;quot;&amp;quot;&lt;br /&gt;Get the minimum and maximum bounds for an array of samples.&lt;br /&gt;@param samples the array of real values&lt;br /&gt;@return a tuple of min, max&lt;br /&gt;&amp;quot;&amp;quot;&amp;quot;&lt;br /&gt;scale_factor = 3&lt;br /&gt;mean = numpy.average(samples)&lt;br /&gt;rms = numpy.max([scale_factor*((numpy.sum((samples-mean)**2)/len(samples))**.5),&lt;br /&gt;.1])&lt;br /&gt;min = mean - rms&lt;br /&gt;max = mean + rms&lt;br /&gt;return min, max</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2728768604151124999/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/basic-python-math-calculation-in.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2728768604151124999'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2728768604151124999'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/basic-python-math-calculation-in.html' title='basic python math calculation in gnuradio'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2145562313951626734</id><published>2010-10-22T10:09:00.000-05:00</published><updated>2011-02-28T14:22:11.472-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>(ZT) unix vs. windows</title><content type='html'>我看UNIX与Windows的本质区别&lt;br /&gt;&lt;br /&gt;文化，我首先想到的是文化。Unix和Windows从诞生之初的文化差异本质上划分了两者的界限。直观看来，一个装逼文化，一个傻逼文化。&lt;br /&gt;&lt;br /&gt;Unix诞生在贝尔实验室的MULTICS项目之后。据说当时这个项目设计得十分复杂，功能设计也几乎是上天入地无所不能。虽说当时贝尔实验室是很牛，可以牛到不用装逼也能露逼一下的地步。但历史告诉我们这种项目最后绝对会死得很惨。当然，项目最终结果还是没有违背历史规律。当时一位MULTICS参与者Ken Thompson事后痛定思痛，准备重新自己开发一个多任务操作系统，摒弃了MULTICS过于复杂的系统设计，力求新系统的简洁紧凑。传闻时值Ken Thompson老婆带上孩子回娘家过日子去了，一时间Ken Thompson晚上无以为乐，只好天天以堆码为业。不到一个月，Ken Thompson用汇编把这套操作系统编写出来了，这就是后来流芳百世的UNIX。当然，当时的Ken Thompson根本没有意会到他这个业余时间的作品会改变整个计算机发展史。因此这个操作系统设计用户群只针对他预想的计算机科学家、黑客，再不济怎么也得算上个计算机科学技术本科生。Unix只面对政府、研究机构、大学等专业性很强的机构，简洁、高效、安全是Unix的文化哲学。同时结合到当时的硬件条件限制，也不难理解UNIX诞生之初就根深蒂固的文化：&lt;br /&gt;&lt;br /&gt;1、计算机庞大的占地面积、高额的购买维护费用使得普通用户根本无力支撑起一台计算机的各种资源消耗，当时更多的是计算机专家在通过终端在控制整个计算机运作逻辑。没有GUI、没有多媒体，字符界面，这对于这批靠计算机完成科学任务的黑客来说已经完全够用了。&lt;br /&gt;&lt;br /&gt;2、同时遵循简洁统一的输入输出接口，相比于GUI的事件驱动模型来说，更适合使用脚本将各种程序粘合起来，完成复杂多样的计算任务。&lt;br /&gt;&lt;br /&gt;有人说起过UNIX正巧在当年GUI史前诞生，时运不济，所以只出了个字符怪胎，要是再踌躇几年，等到GUI日臻成熟，那诞生出的UNIX恐怕就是如今Windows的翻版了。对此我还是不太认可，UNIX的存在是计算机荒洪时代遗留的文化，即使现在丰富多彩的GUI也照样没有改变UNIX的基础设计恐怕就是一个极好的证据。目前大多数的服务器依然保持着当年UNIX诞生之初的风貌，依然CLI、依然Shell，因为我们需要把更多的资源让给使用服务器的客户，人类对计算机性能的榨取永远是贪婪的。这让我想起了几年前Windows渐入佳境PC，游戏刚大行其道，桌面游戏编写还不是那么方便时候，有人预言等几年之后，按照摩尔定律，编写星际争霸之类的游戏便不需要多牛逼的算法，甚至能用写脚本语言都能完成。这几年算是大致差不多算过来了吧，星际是有牛人用JavaScript完成了，不过现时最牛逼的游戏(如魔兽世界)还是会用很牛逼的算法，还是需要使用C/C++，还是需要精通图形学，还是需要熟悉图形硬件。所以不管硬件如何发展，UNIX文化中的简洁高效这些准则还是依然存在，因为我们会把最佳的性能留给我们服务器的客户，然后可以把敲打字符，玩弄指法的时间留给自己，在老板面前装逼一下。&lt;br /&gt;&lt;br /&gt;Windows(以及其前任DOS)诞生在公司，公司不像学院，不会像UNIX一样如果能装逼就尽量装逼一下，公司直接面对客户，产品唯一使命就是取悦用户，只能把用户伺候好了，公司才能维系发展。所以Windows诞生之初就一直肩负比尔"让每一个家庭都有一台电脑"的使命，不装逼，不玩酷，一切功能照顾用户，就是用户是傻逼你也得当亲爹一样伺候。故而Windows一直就假定使用它的用户你就是一个傻逼，哪怕是删除文件这个小问题上，Windows也会想小娘们儿一样谨谨慎慎战战兢兢地一再向人确认&amp;quot;确实要删除****吗？&amp;quot;&amp;quot;确实要删除只读文件****吗?&amp;quot;。当然，最终能够让大妈大叔阿公阿婆阿猫阿狗都能使用上计算机的Windows绝对占领了终端用户桌面，比尔也因此一夜暴富，摇身一变成为世界首富&amp;amp;慈善家。不得不承认，如果没有Windows，&amp;quot;让每一个家庭都有一台电脑&amp;quot;的崇高理想恐怕又得推迟几年才能够得以实现了。自然，微软技术是肯定不差的，而不是像一些Linux小菜鸟口中所言&amp;quot;微软技术很烂&amp;quot;，相反微软技术是很牛的，牛到曾经豪言可以立马灭掉Google，试看如今还有谁可以发出这样傻逼的豪言。但是微软牛，不代表Windows就可以干过MULTICS，上天入地翻江倒海无所不能。Windows 在安全性、性能以及开源项目上与UNIX相比确实还是有一定差距，但这并不妨碍windows成为桌面第一大操作系统。&lt;br /&gt;&lt;br /&gt;UNIX的黑客们，眼见着曾经引以为豪的计算机技术壁垒瞬间被Windows GUI冲击到荡然无存了，心中肯定是有落差的。不过这段技术演变技术普及已经成为了历史发展趋势。一个少数人才能驾驭的技术，哪怕就是敲一个ls这样简单的命令，你也可以把它吹破牛皮，扯虎皮拉大旗捧为艺术珍品，搞得善男甚广善女甚众。一旦技术被迫普及后，曾经视作的艺术瞬间就被廉价的工业化大生产所替代，现在满大街的廉价代码工就是计算机程序设计工业化后的结果。前段时间众人大骂Java程序员把自己的价位又拉低了。殊不知，拉低自己价位的非Java也，乃工业化大生产趋势。今不出Java，明儿准会出来个Bava，Cava，照样把你收拾成码农。时至如今，UNIX黑客们还在装逼，用CLI命令行跑出花花绿绿的文字，时不时感叹下曾经的软件英雄时代一去不复返，时不时像祥林嫂一般唠叨&amp;quot;当年哥可是写汇编的，没想到如今沦落到如此地步，人心不古，世风日下啊~&amp;quot;，时不时还顾影自怜，想装逼下，可惜时光不再。&lt;br /&gt;&lt;br /&gt;妈逼的给老子回去写代码！这个月还想不想领工资了！？&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;结语：&lt;br /&gt;&lt;br /&gt;不管是UNIX的装逼文化，还是Windows的傻逼文化，最终在计算机产业工业化的历史滚滚长流中归于平庸，归于廉价。曾经的那批牛逼的、不牛逼的、风骚的、不风骚的UNIX文化精英们，如今早已是廉颇老矣，尚可喝粥。曾经被意淫为&amp;quot;计算机科学与艺术&amp;quot;如今也早已沦落为&amp;quot;软件码工&amp;quot;。软件英雄时代早已不再，编码也成为三百六十行中的一行，一种用以谋生的手段，一种混饭吃的活路。关键问题早已不在程序，不在编码：&lt;br /&gt;&lt;br /&gt;&lt;b&gt;编程只是一个工具，关键在于你拿这个工具来实现别人的事业，还是自己的事业。&lt;/b&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2145562313951626734/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/zt-unix-vs-windows.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2145562313951626734'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2145562313951626734'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/zt-unix-vs-windows.html' title='(ZT) unix vs. windows'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4337283033699144714</id><published>2010-10-21T22:54:00.001-05:00</published><updated>2010-11-01T13:14:51.828-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='matlab'/><title type='text'>some commands for matlab</title><content type='html'>matrix functions&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&amp;nbsp;INV&lt;/b&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Matrix inverse.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; INV(X) is the inverse of the square matrix X.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; A warning message is printed if X is badly scaled or&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; nearly singular.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&amp;nbsp;.' Transpose.&lt;/b&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; X.' is the non-conjugate transpose.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; B = TRANSPOSE(A) is called for the syntax A.' when A is an object.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&amp;nbsp;SQUEEZE&lt;/b&gt; Remove singleton dimensions.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; B = SQUEEZE(A) returns an array B with the same elements as&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; A but with all the singleton dimensions removed.&amp;nbsp; A singleton&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; is a dimension such that size(A,dim)==1.&amp;nbsp; 2-D arrays are&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; unaffected by squeeze so that row vectors remain rows.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; For example,&amp;nbsp;&amp;nbsp; squeeze(rand(2,1,3))&amp;nbsp;&amp;nbsp;&amp;nbsp; is 2-by-3.&lt;br /&gt;&lt;br /&gt;Especially, for a 3-dimension matrix, for the command "matri = original_matrix(1,:,:)", the resulting matrix matri is still a 3-D matrix whose 1st dimension is just 1.&lt;br /&gt;&lt;br /&gt;==========&lt;br /&gt;&lt;br /&gt;for plotting, this example will explain the most frequently used commands:&lt;br /&gt;&lt;br /&gt;x = -pi:.1:pi;&lt;br /&gt;y = sin(x);&lt;br /&gt;plot(x,y);&lt;br /&gt;set(gca,'XTick',-pi:pi/2:pi);&lt;br /&gt;set(gca,'XTickLabel',{'-pi','-pi/2','0','pi/2','pi'});&lt;br /&gt;xlabel('-\pi \leq \Theta \leq \pi');&lt;br /&gt;ylabel('sin(\Theta)');&lt;br /&gt;title('Plot of sin(\Theta)');&lt;br /&gt;AXIS([XMIN XMAX YMIN YMAX])&lt;br /&gt;XLIM([XMIN XMAX])&lt;br /&gt;YLIM([YMIN YMAX])</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4337283033699144714/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/some-commands-for-matlab.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4337283033699144714'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4337283033699144714'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/some-commands-for-matlab.html' title='some commands for matlab'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1055718874753268387</id><published>2010-10-18T16:50:00.000-05:00</published><updated>2010-10-18T16:50:40.777-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Some usrp_spectrum_sense.py code Explanation</title><content type='html'>Hi Everybody,&lt;br /&gt;&lt;br /&gt;and Merry Christmas&lt;br /&gt;&lt;br /&gt;I received many emails requesting some explanation for usrp_spectrum_sense.py gnuradio example program. The following link contains the code with some explanation and one bug fix (in self.max_center_freq equation):&lt;br /&gt;&lt;br /&gt;&lt;a href="http://rapidshare.com/files/177960860/usrp_spectrum_sense.py"&gt;http://rapidshare.com/files/177960860/usrp_spectrum_sense.py&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;usrp_spectrum_sense.py Explanation :&lt;br /&gt;=======================================================================================&lt;br /&gt;&lt;br /&gt;Introduction:&lt;br /&gt;-------------&lt;br /&gt;&lt;br /&gt;1) This program can be used as a basic code for implementing wideband spectrum analyzer.&lt;br /&gt;2) As we know, the USRP cannot examine more than 8 MHz of RF spectrum due to USB bus limitations.&lt;br /&gt;3) So, to scan across a wide RF spectrum band (bigger than 8 MHz) we have to tune USRP RF front end in suitable steps so that we can examine a lot of spectrum, although not all at the same instant.&lt;br /&gt;4) The usrp_spectrum_sense shows the way how it can be done.It steps across the spectrum and make the RF measurements. This application can&lt;br /&gt;sense a large bandwidth, but not in real time, and it can do the frequency sweep over the required frequency range,&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Theory:&lt;br /&gt;-------&lt;br /&gt;&lt;br /&gt;1) To use N points complex FFT X(W) analysis, we have to get N time samples x(t) which are sampled at Fs.&lt;br /&gt;2) These N time samples must be time windowed using a known window function to reduce spectral leakage.&lt;br /&gt;3) Performing N points complex FFT analysis.&lt;br /&gt;4) The output of the complex FFT will represent the frequency spectrum contents as follows:&lt;br /&gt;&lt;br /&gt;a) The first value of the FFT output (bin 0 == X[0]) is the passband center frequency.&lt;br /&gt;b) The first half of the FFT (X[1] to X[N/2-1] contains the positive baseband frequencies,which corresponds to the passband spectrum from the center frequency out to the maximum passband frequency (from center frequency to +Fs/2).&lt;br /&gt;c) The second half of the FFT (X[N/2] to X[N-1]) contains the negative baseband frequencies,which correspond to the lowest passband frequency up to the passband center frequency (from -Fs/2 to center frequency).&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Example&lt;br /&gt;-------&lt;br /&gt;&lt;br /&gt;Let us assume that we have 1024 (I and Q) samples gathered using a tuner centered at 20MHz. And let us assume that the sampling frequency was 8MHz.&lt;br /&gt;Doing 1024 points complex FFT means:&lt;br /&gt;&lt;br /&gt;1) FFT Frequency resolution is : 8MHz / 1024 = 7812.5 KHz&lt;br /&gt;2) The output of the FFT X[0] represents the spectrum at 20MHz.&lt;br /&gt;3) The output of the FFT X[1] to X[511] represents the frequencies from 20.0078125 MHz to 23.9921875 MHz (about 4MHz above center frequency).&lt;br /&gt;4) The output of the FFT X[512] to X[1023] represents the frequencies from 16.0078125 MHz to 19.9921875 MHz (about 4MHz bellow center frequency).&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;RF Frequency Sweeping&lt;br /&gt;---------------------&lt;br /&gt;&lt;br /&gt;1) Let us suppose that we want to scan RF spectrum band from 10MHz to 52 MHz.&lt;br /&gt;2) Let us remember that USRP can analyze 8MHz of frequency at a time.&lt;br /&gt;3) So theoretically we have to step our RF center frequency as follows:&lt;br /&gt;&lt;br /&gt;First step is 14MHz (it will cover frequency band from 10MHz to 18MHz),&lt;br /&gt;Second step is 22MHz (it will cover frequency band from 18MHz to 26MHz),&lt;br /&gt;Third step is 30MHz (it will cover frequency band from 26MHz to 34MHz),&lt;br /&gt;Fourth step is 38MHz (it will cover frequency band from 34MHz to 42MHz),&lt;br /&gt;Fifth step is 46MHz (it will cover frequency band from 42MHz to 50MHz),&lt;br /&gt;and finally the Sixth step is 54MHz (it will cover frequency band from 50MHz to 58MHz). Remember that we want the frequencies up to 52MHz only, so we have to discard some FFT points from the Sixth analysis.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;4) Paralytically we have to use FFT overlapping to reduce the non linearity response of the Digital Down Converter (the DDC frequency response is not Flat from -Fs/2 to + Fs/2) and to fill the frequency holes that will be present at the FFT analysis edges (10MHz, 18MHz, 26MHz, 34MHz, 42MHz, 50 MHz).&lt;br /&gt;&lt;br /&gt;So if we choose to use an overlap of 25%, this means that our step size will be 6MHz (8MHz*(1-.25)), thus practically we have to step our RF center frequency as follows:&lt;br /&gt;&lt;br /&gt;First step is 13MHz (it will cover frequency band from 9MHz to 17MHz),&lt;br /&gt;Second step is 19MHz (it will cover frequency band from 15MHz to 23MHz),&lt;br /&gt;Third step is 25MHz (it will cover frequency band from 21MHz to 29MHz),&lt;br /&gt;Fourth step is 31MHz (it will cover frequency band from 27MHz to 35MHz),&lt;br /&gt;Fifth step is 37MHz (it will cover frequency band from 33MHz to 41MHz),&lt;br /&gt;Sixth step is 43MHz (it will cover frequency band from 39MHz to 47MHz),&lt;br /&gt;and Finally the Seventh step is 49MHz (it will cover frequency band from 45MHz to 53MHz),&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Changing RF center Frequency&lt;br /&gt;----------------------------&lt;br /&gt;&lt;br /&gt;1) To change USRP RF center frequency we have to send a tunning command to the USRP every time we complete the analysis of the current frequency chunk.&lt;br /&gt;2) Before gnuradio revision [10165], all USRP RF daughterboards tunning were done using Python functions and classes. After that revision, tunning the USRP daughterboards from withen C++ code is possible.&lt;br /&gt;3) In usrp_spectrum_sense.py, the DSP C++ written code is allowed to transparently invoke Python code USRP tune function. This tunning control is done in gr_bin_statistics_f sink function.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Tunning Delay Problem:&lt;br /&gt;---------------------&lt;br /&gt;&lt;br /&gt;When we command the usrp RF daughterboard to change its center frequency, we have to wait until (right) ADC samples arrive to our FFT engine and we have to insure that it belongs to the wanted center frequency. This represents a problem since there are many delays along the digitization path (RF synthesizer settling time, and pipeline propagation delay [FPGA FIFO filling time, USB transferring time...etc]). To overcome this problem we have to use enough tune delay time in order to  be sure that the samples entering our FFT block are belong to the requested center frequency. This is done simply by dropping the incoming received samples over a specified tunning delay time.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;usrp_spectrum_sense Implementation&lt;br /&gt;----------------------------------&lt;br /&gt;&lt;br /&gt;1) The engine of the usrp_spectrum_sense depends mainly on bin_statistics sink function.&lt;br /&gt;&lt;br /&gt;2) bin_statistics function combines statistics gathering with a state machine for controlling the USRP RF tuning (frequency sweeping). It determines max values (keeps track of the maximum power in each FFT bin) of vectors (with length vlen) over a time period determined by dwell_delay (after converting it to a number of FFT vectors). This operation is performed after discarding tune_delay samples.&lt;br /&gt;&lt;br /&gt;3) After processing N = dwell_delay samples, bin_statistics composes a message and inserts it in a message queue.&lt;br /&gt;&lt;br /&gt;4) Each message from bin_statistics consists of a vector of max values, prefixed by the center frequency corresponding to the associated samples,&lt;br /&gt;i.e., it is the center frequency value of the delivered input samples to bin_statistics.&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Choosing Tune and Dwell delay times&lt;br /&gt;----------------------------------&lt;br /&gt;&lt;br /&gt;1) We have to play with the --tune-delay and --dwell-delay command line options to determine appropriate timming values. The most important one is the tune delay time.&lt;br /&gt;&lt;br /&gt;2) The choose of tune-delay should include time for the front end PLL to settle, plus time for the new samples to propagate through the pipeline.  The default value is 1ms, which is probably in the ballpark on the RFX** boards.  The TV RX board is much slower.  The tuner data sheets says it could take 100ms to settle.&lt;br /&gt;&lt;br /&gt;3) The tune delay timing parameter passed to bin_statistics is calculated in FFT frames which depends on USRP rate and FFT length as in :&lt;br /&gt;&lt;br /&gt;tune_delay_passed_to_bin_statistics = int(round(required_tune_delay_in_sec*usrp_rate/fft_size))&lt;br /&gt;&lt;br /&gt;if this calculated value is less than &amp;quot;1&amp;quot;, then we should make it at least &amp;quot;1&amp;quot; FFT frame.&lt;br /&gt;&lt;br /&gt;For example:&lt;br /&gt;&lt;br /&gt;If the :&lt;br /&gt;&lt;br /&gt;required_tune_delay_in_sec = 10e-3&lt;br /&gt;and usrp_rate = 8000000 (decimation =8)&lt;br /&gt;and FFT size is 1024&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Then :&lt;br /&gt;&lt;br /&gt;tune_delay_passed_to_bin_stats = 78   (FFT Frames)&lt;br /&gt;&lt;br /&gt;This means we have to skip 78 incoming vectors (FFT frames) before we actually use the acquired samples in our spectrum statistics.&lt;br /&gt;&lt;br /&gt;4) Beside tunning time depends on the hardware (RF synthesizer speed),one should remember that the time needed to collect 1024 samples&lt;br /&gt;with decimation rate=8 (minimum USRP decimation) is 128 usec, while the time needed to collect 1024 samples with decimation rate=256 (maximum USRP decimation) is 4.096 msec. This means that the tune delay in the case of decimation rate =256 should be larger than that used for decimation = 8.&lt;br /&gt;&lt;br /&gt;5) A working tune delay value (which gives accurate results) can be known by experiments (for given decimation rate and FFT length).&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Interrupting Output Spectrum&lt;br /&gt;-----------------------------&lt;br /&gt;&lt;br /&gt;The actual mapping from the levels at the daughterboard antenna input port to the output analysis values depends on a lot of factors including the used daughterboard RF gain and decimation specific gain in the digital down converter. You&amp;#39;ll need to calibrate the system if you need something that maps to dBm.Currently, the output of usrp_spectrum_sense is the magnitude squared of the FFT output.  That is, for each FFT bin[i], the output is Y[i] = re[X[i]]*re[X[i]] + im[X[i]]*im[X[i]]. If you want power, take the square root of the output.&lt;br /&gt;&lt;br /&gt;========================================================================================&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Best Regards,&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Firas</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1055718874753268387/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/some-usrpspectrumsensepy-code.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1055718874753268387'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1055718874753268387'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/some-usrpspectrumsensepy-code.html' title='Some usrp_spectrum_sense.py code Explanation'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7382892549759040576</id><published>2010-10-18T00:21:00.002-05:00</published><updated>2010-10-18T00:26:13.367-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>advance info. about usrp trans.</title><content type='html'>new examples for the 802.11b trans. (&lt;a href="https://www.cgran.org/browser/projects/bbn_80211/branches/douggeiger/src/examples?rev=113"&gt;here&lt;/a&gt;)&lt;br /&gt;&lt;br /&gt;======================&lt;br /&gt;&lt;br /&gt;btw, there is an &lt;a href="http://www.mail-archive.com/discuss-gnuradio@gnu.org/msg18734.html"&gt;excellent discussion&lt;/a&gt; about how to run the code.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;span style="font-size: large;"&gt;(1)&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;pre&gt;&amp;nbsp;&lt;/pre&gt;&lt;pre&gt;Hi&lt;/pre&gt;&lt;br /&gt;I am trying to establish communication between USRP2 and USRP1. I am using RFX2400 daughterboard. I am using Ubuntu 8.10. I am using the svn version of GNU Radio. I dont know the revision number. I am not able to receive anything on USRP2 when USRP1 is transmitting and vice versa. The python codes for USRP2 work perfectly fine. I guess there is some problem with the ADC and DAC incompatibility (interpolation and decimation) between USRP2 and USRP1. I am attaching all the necessary files that I am using currently. I would appreciate if someone can look at these files and help me to sort out the problem. &amp;nbsp; &lt;/pre&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;benchmark_tx.py&lt;br /&gt;&lt;br /&gt;#!/usr/bin/env python&lt;br /&gt;#&lt;br /&gt;# Copyright 2005, 2006, 2007 Free Software Foundation, Inc.&lt;br /&gt;# &lt;br /&gt;# This file is part of GNU Radio&lt;br /&gt;# &lt;br /&gt;# GNU Radio is free software; you can redistribute it and/or modify&lt;br /&gt;# it under the terms of the GNU General Public License as published by&lt;br /&gt;# the Free Software Foundation; either version 3, or (at your option)&lt;br /&gt;# any later version.&lt;br /&gt;# &lt;br /&gt;# GNU Radio is distributed in the hope that it will be useful,&lt;br /&gt;# but WITHOUT ANY WARRANTY; without even the implied warranty of&lt;br /&gt;# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&lt;br /&gt;# GNU General Public License for more details.&lt;br /&gt;# &lt;br /&gt;# You should have received a copy of the GNU General Public License&lt;br /&gt;# along with GNU Radio; see the file COPYING.  If not, write to&lt;br /&gt;# the Free Software Foundation, Inc., 51 Franklin Street,&lt;br /&gt;# Boston, MA 02110-1301, USA.&lt;br /&gt;# &lt;br /&gt;&lt;br /&gt;from gnuradio import gr, gru, modulation_utils&lt;br /&gt;from gnuradio import usrp2&lt;br /&gt;from gnuradio import eng_notation&lt;br /&gt;from gnuradio.eng_option import eng_option&lt;br /&gt;from optparse import OptionParser&lt;br /&gt;&lt;br /&gt;import random&lt;br /&gt;import time&lt;br /&gt;import struct&lt;br /&gt;import sys&lt;br /&gt;&lt;br /&gt;# from current dir&lt;br /&gt;from transmit_path_usrp2 import transmit_path&lt;br /&gt;import fusb_options&lt;br /&gt;&lt;br /&gt;#import os &lt;br /&gt;#print os.getpid()&lt;br /&gt;#raw_input('Attach and press enter')&lt;br /&gt;&lt;br /&gt;class my_top_block(gr.top_block):&lt;br /&gt;    def __init__(self, modulator, options):&lt;br /&gt;        gr.top_block.__init__(self)&lt;br /&gt;        self.txpath = transmit_path(modulator, options)&lt;br /&gt;        self.connect(self.txpath)&lt;br /&gt;&lt;br /&gt;#&lt;br /&gt;/////////////////////////////////////////////////////////////////////////////&lt;br /&gt;#                                   main&lt;br /&gt;#&lt;br /&gt;/////////////////////////////////////////////////////////////////////////////&lt;br /&gt;&lt;br /&gt;def main():&lt;br /&gt;&lt;br /&gt;    def send_pkt(payload='', eof=False):&lt;br /&gt;        return tb.txpath.send_pkt(payload, eof)&lt;br /&gt;&lt;br /&gt;    def rx_callback(ok, payload):&lt;br /&gt;        print "ok = %r, payload = '%s'" % (ok, payload)&lt;br /&gt;&lt;br /&gt;    mods = modulation_utils.type_1_mods()&lt;br /&gt;&lt;br /&gt;    parser = OptionParser(option_class=eng_option,&lt;br /&gt;conflict_handler="resolve")&lt;br /&gt;    expert_grp = parser.add_option_group("Expert")&lt;br /&gt;&lt;br /&gt;    parser.add_option("-m", "--modulation", type="choice",&lt;br /&gt;choices=mods.keys(),&lt;br /&gt;                      default='gmsk',&lt;br /&gt;                      help="Select modulation from: %s [default=%%default]"&lt;br /&gt;                            % (', '.join(mods.keys()),))&lt;br /&gt;&lt;br /&gt;    parser.add_option("-s", "--size", type="eng_float", default=1500,&lt;br /&gt;                      help="set packet size [default=%default]")&lt;br /&gt;    parser.add_option("-M", "--megabytes", type="eng_float", default=1.0,&lt;br /&gt;                      help="set megabytes to transmit [default=%default]")&lt;br /&gt;    parser.add_option("","--discontinuous", action="store_true",&lt;br /&gt;default=False,&lt;br /&gt;                      help="enable discontinous transmission (bursts of 5&lt;br /&gt;packets)")&lt;br /&gt;    parser.add_option("","--from-file", default=None,&lt;br /&gt;                      help="use file for packet contents")&lt;br /&gt;&lt;br /&gt;    transmit_path.add_options(parser, expert_grp)&lt;br /&gt;&lt;br /&gt;    for mod in mods.values():&lt;br /&gt;        mod.add_options(expert_grp)&lt;br /&gt;&lt;br /&gt;    fusb_options.add_options(expert_grp)&lt;br /&gt;    (options, args) = parser.parse_args ()&lt;br /&gt;&lt;br /&gt;    if len(args) != 0:&lt;br /&gt;        parser.print_help()&lt;br /&gt;        sys.exit(1)&lt;br /&gt;&lt;br /&gt;    if options.tx_freq is None:&lt;br /&gt;        sys.stderr.write("You must specify -f FREQ or --freq FREQ\n")&lt;br /&gt;        parser.print_help(sys.stderr)&lt;br /&gt;        sys.exit(1)&lt;br /&gt;&lt;br /&gt;    if options.from_file is not None:&lt;br /&gt;        source_file = open(options.from_file, 'r')&lt;br /&gt;&lt;br /&gt;    # build the graph&lt;br /&gt;    tb = my_top_block(mods[options.modulation], options)&lt;br /&gt;&lt;br /&gt;    r = gr.enable_realtime_scheduling()&lt;br /&gt;    if r != gr.RT_OK:&lt;br /&gt;        print "Warning: failed to enable realtime scheduling"&lt;br /&gt;&lt;br /&gt;    tb.start()                       # start flow graph&lt;br /&gt;        &lt;br /&gt;    # generate and send packets&lt;br /&gt;    nbytes = int(1e6 * options.megabytes)&lt;br /&gt;    n = 0&lt;br /&gt;    pktno = 0&lt;br /&gt;    pkt_size = int(options.size)&lt;br /&gt;&lt;br /&gt;    while n &amp;lt; nbytes:&lt;br /&gt;        if options.from_file is None:&lt;br /&gt;            data = (pkt_size - 2) * chr(pktno &amp;amp; 0xff) &lt;br /&gt;        else:&lt;br /&gt;            data = source_file.read(pkt_size - 2)&lt;br /&gt;            if data == '':&lt;br /&gt;                break;&lt;br /&gt;&lt;br /&gt;        payload = struct.pack('!H', pktno &amp;amp; 0xffff) + data&lt;br /&gt;        send_pkt(payload)&lt;br /&gt;        n += len(payload)&lt;br /&gt;        sys.stderr.write('.')&lt;br /&gt;        if options.discontinuous and pktno % 5 == 4:&lt;br /&gt;            time.sleep(1)&lt;br /&gt;        pktno += 1&lt;br /&gt;        &lt;br /&gt;    send_pkt(eof=True)&lt;br /&gt;&lt;br /&gt;    tb.wait()                       # wait for it to finish&lt;br /&gt;&lt;br /&gt;if __name__ == '__main__':&lt;br /&gt;    try:&lt;br /&gt;        main()&lt;br /&gt;    except KeyboardInterrupt:&lt;br /&gt;        pass&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;transmit_path_usrp2.py&lt;br /&gt;&lt;br /&gt;#&lt;br /&gt;# Copyright 2005,2006,2007 Free Software Foundation, Inc.&lt;br /&gt;# &lt;br /&gt;# This file is part of GNU Radio&lt;br /&gt;# &lt;br /&gt;# GNU Radio is free software; you can redistribute it and/or modify&lt;br /&gt;# it under the terms of the GNU General Public License as published by&lt;br /&gt;# the Free Software Foundation; either version 3, or (at your option)&lt;br /&gt;# any later version.&lt;br /&gt;# &lt;br /&gt;# GNU Radio is distributed in the hope that it will be useful,&lt;br /&gt;# but WITHOUT ANY WARRANTY; without even the implied warranty of&lt;br /&gt;# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&lt;br /&gt;# GNU General Public License for more details.&lt;br /&gt;# &lt;br /&gt;# You should have received a copy of the GNU General Public License&lt;br /&gt;# along with GNU Radio; see the file COPYING.  If not, write to&lt;br /&gt;# the Free Software Foundation, Inc., 51 Franklin Street,&lt;br /&gt;# Boston, MA 02110-1301, USA.&lt;br /&gt;# &lt;br /&gt;&lt;br /&gt;from gnuradio import gr, gru, blks2&lt;br /&gt;from gnuradio import usrp2&lt;br /&gt;from gnuradio import eng_notation&lt;br /&gt;&lt;br /&gt;import copy&lt;br /&gt;import sys&lt;br /&gt;&lt;br /&gt;# from current dir&lt;br /&gt;from pick_bitrate import pick_tx_bitrate&lt;br /&gt;&lt;br /&gt;#&lt;br /&gt;/////////////////////////////////////////////////////////////////////////////&lt;br /&gt;#                              transmit path&lt;br /&gt;#&lt;br /&gt;/////////////////////////////////////////////////////////////////////////////&lt;br /&gt;&lt;br /&gt;class transmit_path(gr.hier_block2): &lt;br /&gt;    def __init__(self, modulator_class, options):&lt;br /&gt;        '''&lt;br /&gt;        See below for what options should hold&lt;br /&gt;        '''&lt;br /&gt;        gr.hier_block2.__init__(self, "transmit_path",&lt;br /&gt;                                gr.io_signature(0, 0, 0), # Input signature&lt;br /&gt;                                gr.io_signature(0, 0, 0)) # Output signature&lt;br /&gt;&lt;br /&gt;        options = copy.copy(options)    # make a copy so we can&lt;br /&gt;destructively modify&lt;br /&gt;&lt;br /&gt;        self._interface          = options.interface           # the USRP&lt;br /&gt;board attached&lt;br /&gt;        self._mac_addr           = options.mac_addr&lt;br /&gt;        self._verbose            = options.verbose&lt;br /&gt;        self._tx_freq            = options.tx_freq         # tranmitter's&lt;br /&gt;center frequency&lt;br /&gt;        self._tx_amplitude       = options.tx_amplitude    # digital&lt;br /&gt;amplitude sent to USRP&lt;br /&gt;        #self._tx_subdev_spec     = options.tx_subdev_spec  # daughterboard&lt;br /&gt;to use&lt;br /&gt;        self._bitrate            = options.bitrate         # desired bit&lt;br /&gt;rate&lt;br /&gt;        self._interp             = options.interp          # interpolating rate &lt;br /&gt;for&lt;br /&gt;the USRP (prelim) &lt;br /&gt;        self._samples_per_symbol = options.samples_per_symbol  # desired&lt;br /&gt;samples/baud &lt;br /&gt;        #self._fusb_block_size    = options.fusb_block_size # usb info for USRP&lt;br /&gt;        #self._fusb_nblocks       = options.fusb_nblocks    # usb info for&lt;br /&gt;USRP&lt;br /&gt;        self._use_whitener_offset = options.use_whitener_offset # increment&lt;br /&gt;start of whitener XOR data&lt;br /&gt;        &lt;br /&gt;        self._modulator_class = modulator_class         # the&lt;br /&gt;modulator_class we are using&lt;br /&gt;    &lt;br /&gt;        if self._tx_freq is None:&lt;br /&gt;            sys.stderr.write("-f FREQ or --freq FREQ or --tx-freq FREQ must&lt;br /&gt;be specified\n")&lt;br /&gt;            raise SystemExit&lt;br /&gt;&lt;br /&gt;        # Set up USRP sink; also adjusts interp, samples_per_symbol, and&lt;br /&gt;bitrate&lt;br /&gt;        self._setup_usrp_sink()  &lt;br /&gt;&lt;br /&gt;        # copy the final answers back into options for use by modulator&lt;br /&gt;        options.samples_per_symbol = self._samples_per_symbol&lt;br /&gt;        options.bitrate = self._bitrate&lt;br /&gt;        options.interp = self._interp&lt;br /&gt;&lt;br /&gt;        # Get mod_kwargs&lt;br /&gt;        mod_kwargs =&lt;br /&gt;self._modulator_class.extract_kwargs_from_options(options)&lt;br /&gt;&lt;br /&gt;        # Set center frequency of USRP&lt;br /&gt;        ok = self.set_freq(self._tx_freq)&lt;br /&gt;        if not ok:&lt;br /&gt;            print "Failed to set Tx frequency to %s" %&lt;br /&gt;(eng_notation.num_to_str(self._tx_freq),)&lt;br /&gt;            raise ValueError&lt;br /&gt;    &lt;br /&gt;        # transmitter&lt;br /&gt;        self.packet_transmitter = \&lt;br /&gt;            blks2.mod_pkts(self._modulator_class(**mod_kwargs),&lt;br /&gt;                           access_code=None,&lt;br /&gt;                           msgq_limit=4,&lt;br /&gt;                           pad_for_usrp=True,&lt;br /&gt;                           use_whitener_offset=options.use_whitener_offset)&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;        # Set the USRP for maximum transmit gain&lt;br /&gt;        # (Note that on the RFX cards this is a nop.)&lt;br /&gt;        self.set_gain(self.u.gain_range()[1])&lt;br /&gt;&lt;br /&gt;        self.amp = gr.multiply_const_cc(1)&lt;br /&gt;        self.set_tx_amplitude(self._tx_amplitude)&lt;br /&gt;&lt;br /&gt;        # enable Auto Transmit/Receive switching&lt;br /&gt;        #fiske_removed self.set_auto_tr(True)&lt;br /&gt;&lt;br /&gt;        # Display some information about the setup&lt;br /&gt;        if self._verbose:&lt;br /&gt;            self._print_verbage()&lt;br /&gt;&lt;br /&gt;        # Create and setup transmit path flow graph&lt;br /&gt;        self.connect(self.packet_transmitter, self.amp, self.u)&lt;br /&gt;&lt;br /&gt;    def _setup_usrp_sink(self):&lt;br /&gt;        """&lt;br /&gt;        Creates a USRP sink, determines the settings for best bitrate,&lt;br /&gt;        and attaches to the transmitter's subdevice.&lt;br /&gt;        """&lt;br /&gt;        #self.u = usrp2.source_32fc(options.interface, options.mac_addr)&lt;br /&gt;        #self.u = usrp2.sink_32fc (options._interface, options._mac_addr)&lt;br /&gt;        self.u = usrp2.sink_32fc("eth0","00:50:C2:85:31:5A")  #fiske hard coded &lt;br /&gt;        dac_rate = self.u.dac_rate();&lt;br /&gt;&lt;br /&gt;        # derive values of bitrate, samples_per_symbol, and interp from&lt;br /&gt;desired info&lt;br /&gt;        (self._bitrate, self._samples_per_symbol, self._interp) = \&lt;br /&gt;            pick_tx_bitrate(self._bitrate,&lt;br /&gt;self._modulator_class.bits_per_symbol(),&lt;br /&gt;                            self._samples_per_symbol, self._interp,&lt;br /&gt;dac_rate)&lt;br /&gt;        &lt;br /&gt;        #fiske_removed self.u.set_interp_rate(self._interp)&lt;br /&gt;&lt;br /&gt;        # determine the daughterboard subdevice we're using&lt;br /&gt;        #if self._tx_subdev_spec is None:&lt;br /&gt;        #    self._tx_subdev_spec = usrp.pick_tx_subdevice(self.u)&lt;br /&gt;        #self.u.set_mux(usrp.determine_tx_mux_value(self.u,&lt;br /&gt;self._tx_subdev_spec))&lt;br /&gt;        #self.subdev = usrp.selected_subdev(self.u, self._tx_subdev_spec)&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;    def set_freq(self, target_freq):&lt;br /&gt;        """&lt;br /&gt;        Set the center frequency we're interested in.&lt;br /&gt;&lt;br /&gt;        @param target_freq: frequency in Hz&lt;br /&gt;        @rypte: bool&lt;br /&gt;&lt;br /&gt;        Tuning is a two step process.  First we ask the front-end to&lt;br /&gt;        tune as close to the desired frequency as it can.  Then we use&lt;br /&gt;        the result of that operation and our target_frequency to&lt;br /&gt;        determine the value for the digital up converter.&lt;br /&gt;        """&lt;br /&gt;        r = self.u.set_center_freq(target_freq)&lt;br /&gt;        if r:&lt;br /&gt;            return True&lt;br /&gt;&lt;br /&gt;        return False&lt;br /&gt;        &lt;br /&gt;    def set_gain(self, gain):&lt;br /&gt;        """&lt;br /&gt;        Sets the analog gain in the USRP&lt;br /&gt;        """&lt;br /&gt;        self.gain = gain&lt;br /&gt;        self.u.set_gain(gain)&lt;br /&gt;&lt;br /&gt;    def set_tx_amplitude(self, ampl):&lt;br /&gt;        """&lt;br /&gt;        Sets the transmit amplitude sent to the USRP&lt;br /&gt;        @param: ampl 0 &amp;lt;= ampl &amp;lt; 32768.  Try 8000&lt;br /&gt;        """&lt;br /&gt;        self._tx_amplitude = max(0.0, min(ampl, 32767.0))&lt;br /&gt;        self.amp.set_k(self._tx_amplitude)&lt;br /&gt;        &lt;br /&gt;    def set_auto_tr(self, enable):&lt;br /&gt;        """&lt;br /&gt;        Turns on auto transmit/receive of USRP daughterboard (if exits; else&lt;br /&gt;ignored)&lt;br /&gt;        """&lt;br /&gt;        return self.u.set_auto_tr(enable)&lt;br /&gt;        &lt;br /&gt;    def send_pkt(self, payload='', eof=False):&lt;br /&gt;        """&lt;br /&gt;        Calls the transmitter method to send a packet&lt;br /&gt;        """&lt;br /&gt;        return self.packet_transmitter.send_pkt(payload, eof)&lt;br /&gt;        &lt;br /&gt;    def bitrate(self):&lt;br /&gt;        return self._bitrate&lt;br /&gt;&lt;br /&gt;    def samples_per_symbol(self):&lt;br /&gt;        return self._samples_per_symbol&lt;br /&gt;&lt;br /&gt;    def interp(self):&lt;br /&gt;        return self._interp&lt;br /&gt;&lt;br /&gt;    def add_options(normal, expert):&lt;br /&gt;        """&lt;br /&gt;        Adds transmitter-specific options to the Options Parser&lt;br /&gt;        """&lt;br /&gt;        add_freq_option(normal)&lt;br /&gt;        if not normal.has_option('--bitrate'):&lt;br /&gt;            normal.add_option("-r", "--bitrate", type="eng_float",&lt;br /&gt;default=None,&lt;br /&gt;                              help="specify bitrate.  samples-per-symbol and&lt;br /&gt;interp/decim will be derived.")&lt;br /&gt;        normal.add_option("-e", "--interface", type="string",&lt;br /&gt;default="eth0",&lt;br /&gt;                          help="select Ethernet interface, default is eth0")&lt;br /&gt;        normal.add_option("-m", "--mac-addr", type="string", default="",&lt;br /&gt;                          help="select USRP by MAC address, default is&lt;br /&gt;auto-select")&lt;br /&gt;        #normal.add_option("-T", "--tx-subdev-spec", type="subdev",&lt;br /&gt;default=None,&lt;br /&gt;        #                  help="select USRP Tx side A or B")&lt;br /&gt;        normal.add_option("", "--tx-amplitude", type="eng_float",&lt;br /&gt;default=12000, metavar="AMPL",&lt;br /&gt;                          help="set transmitter digital amplitude: 0 &amp;lt;= AMPL&lt;br /&gt;&amp;lt; 32768 [default=%default]")&lt;br /&gt;        normal.add_option("-v", "--verbose", action="store_true",&lt;br /&gt;default=False)&lt;br /&gt;&lt;br /&gt;        expert.add_option("-S", "--samples-per-symbol", type="int",&lt;br /&gt;default=None,&lt;br /&gt;                          help="set samples/symbol [default=%default]")&lt;br /&gt;        expert.add_option("", "--tx-freq", type="eng_float", default=None,&lt;br /&gt;                          help="set transmit frequency to FREQ&lt;br /&gt;[default=%default]", metavar="FREQ")&lt;br /&gt;        expert.add_option("-i", "--interp", type="intx", default=None,&lt;br /&gt;                          help="set fpga interpolation rate to INTERP&lt;br /&gt;[default=%default]")&lt;br /&gt;        expert.add_option("", "--log", action="store_true", default=False,&lt;br /&gt;                          help="Log all parts of flow graph to file&lt;br /&gt;(CAUTION: lots of data)")&lt;br /&gt;        expert.add_option("","--use-whitener-offset", action="store_true",&lt;br /&gt;default=False,&lt;br /&gt;                          help="make sequential packets use different&lt;br /&gt;whitening")&lt;br /&gt;&lt;br /&gt;    # Make a static method to call before instantiation&lt;br /&gt;    add_options = staticmethod(add_options)&lt;br /&gt;&lt;br /&gt;    def _print_verbage(self):&lt;br /&gt;        """&lt;br /&gt;        Prints information about the transmit path&lt;br /&gt;        """&lt;br /&gt;        print "Using TX d'board %s"    % (self.u.daughterboard_id(),)&lt;br /&gt;        print "Tx amplitude     %s"    % (self._tx_amplitude)&lt;br /&gt;        print "modulation:      %s"    % (self._modulator_class.__name__)&lt;br /&gt;        print "bitrate:         %sb/s" %&lt;br /&gt;(eng_notation.num_to_str(self._bitrate))&lt;br /&gt;        print "samples/symbol:  %3d"   % (self._samples_per_symbol)&lt;br /&gt;        print "interp:          %3d"   % (self._interp)&lt;br /&gt;        print "Tx Frequency:    %s"    %&lt;br /&gt;(eng_notation.num_to_str(self._tx_freq))&lt;br /&gt;        &lt;br /&gt;&lt;br /&gt;def add_freq_option(parser):&lt;br /&gt;    """&lt;br /&gt;    Hackery that has the -f / --freq option set both tx_freq and rx_freq&lt;br /&gt;    """&lt;br /&gt;    def freq_callback(option, opt_str, value, parser):&lt;br /&gt;        parser.values.rx_freq = value&lt;br /&gt;        parser.values.tx_freq = value&lt;br /&gt;&lt;br /&gt;    if not parser.has_option('--freq'):&lt;br /&gt;        parser.add_option('-f', '--freq', type="eng_float",&lt;br /&gt;                          action="callback", callback=freq_callback,&lt;br /&gt;                          help="set Tx and/or Rx frequency to FREQ&lt;br /&gt;[default=%default]",&lt;br /&gt;                          metavar="FREQ")&lt;br /&gt;&lt;br /&gt;benchmark_rx.py&lt;br /&gt;&lt;br /&gt;#!/usr/bin/env python&lt;br /&gt;#&lt;br /&gt;# Copyright 2005,2006,2007 Free Software Foundation, Inc.&lt;br /&gt;# &lt;br /&gt;# This file is part of GNU Radio&lt;br /&gt;# &lt;br /&gt;# GNU Radio is free software; you can redistribute it and/or modify&lt;br /&gt;# it under the terms of the GNU General Public License as published by&lt;br /&gt;# the Free Software Foundation; either version 3, or (at your option)&lt;br /&gt;# any later version.&lt;br /&gt;# &lt;br /&gt;# GNU Radio is distributed in the hope that it will be useful,&lt;br /&gt;# but WITHOUT ANY WARRANTY; without even the implied warranty of&lt;br /&gt;# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&lt;br /&gt;# GNU General Public License for more details.&lt;br /&gt;# &lt;br /&gt;# You should have received a copy of the GNU General Public License&lt;br /&gt;# along with GNU Radio; see the file COPYING.  If not, write to&lt;br /&gt;# the Free Software Foundation, Inc., 51 Franklin Street,&lt;br /&gt;# Boston, MA 02110-1301, USA.&lt;br /&gt;# &lt;br /&gt;&lt;br /&gt;from gnuradio import gr, gru, modulation_utils&lt;br /&gt;from gnuradio import usrp2&lt;br /&gt;from gnuradio import eng_notation&lt;br /&gt;from gnuradio.eng_option import eng_option&lt;br /&gt;from optparse import OptionParser&lt;br /&gt;&lt;br /&gt;import random&lt;br /&gt;import struct&lt;br /&gt;import sys&lt;br /&gt;&lt;br /&gt;# from current dir&lt;br /&gt;from receive_path_usrp2 import receive_path&lt;br /&gt;import fusb_options&lt;br /&gt;&lt;br /&gt;#import os&lt;br /&gt;#print os.getpid()&lt;br /&gt;#raw_input('Attach and press enter: ')&lt;br /&gt;&lt;br /&gt;class my_top_block(gr.top_block):&lt;br /&gt;    def __init__(self, demodulator, rx_callback, options):&lt;br /&gt;        gr.top_block.__init__(self)&lt;br /&gt;        self.rxpath = receive_path(demodulator, rx_callback, options) &lt;br /&gt;        self.connect(self.rxpath)&lt;br /&gt;&lt;br /&gt;#&lt;br /&gt;/////////////////////////////////////////////////////////////////////////////&lt;br /&gt;#                                   main&lt;br /&gt;#&lt;br /&gt;/////////////////////////////////////////////////////////////////////////////&lt;br /&gt;&lt;br /&gt;global n_rcvd, n_right&lt;br /&gt;&lt;br /&gt;def main():&lt;br /&gt;    global n_rcvd, n_right&lt;br /&gt;&lt;br /&gt;    n_rcvd = 0&lt;br /&gt;    n_right = 0&lt;br /&gt;    &lt;br /&gt;    def rx_callback(ok, payload):&lt;br /&gt;        global n_rcvd, n_right&lt;br /&gt;        (pktno,) = struct.unpack('!H', payload[0:2])&lt;br /&gt;        n_rcvd += 1&lt;br /&gt;        if ok:&lt;br /&gt;            n_right += 1&lt;br /&gt;&lt;br /&gt;        print "ok = %5s  pktno = %4d  n_rcvd = %4d  n_right = %4d" % (&lt;br /&gt;            ok, pktno, n_rcvd, n_right)&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;    demods = modulation_utils.type_1_demods()&lt;br /&gt;&lt;br /&gt;    # Create Options Parser:&lt;br /&gt;    parser = OptionParser (option_class=eng_option,&lt;br /&gt;conflict_handler="resolve")&lt;br /&gt;    expert_grp = parser.add_option_group("Expert")&lt;br /&gt;&lt;br /&gt;    parser.add_option("-m", "--modulation", type="choice",&lt;br /&gt;choices=demods.keys(), &lt;br /&gt;                      default='gmsk',&lt;br /&gt;                      help="Select modulation from: %s [default=%%default]"&lt;br /&gt;                            % (', '.join(demods.keys()),))&lt;br /&gt;&lt;br /&gt;    receive_path.add_options(parser, expert_grp)&lt;br /&gt;&lt;br /&gt;    for mod in demods.values():&lt;br /&gt;        mod.add_options(expert_grp)&lt;br /&gt;&lt;br /&gt;    fusb_options.add_options(expert_grp)&lt;br /&gt;    (options, args) = parser.parse_args ()&lt;br /&gt;&lt;br /&gt;    if len(args) != 0:&lt;br /&gt;        parser.print_help(sys.stderr)&lt;br /&gt;        sys.exit(1)&lt;br /&gt;&lt;br /&gt;    if options.rx_freq is None:&lt;br /&gt;        sys.stderr.write("You must specify -f FREQ or --freq FREQ\n")&lt;br /&gt;        parser.print_help(sys.stderr)&lt;br /&gt;        sys.exit(1)&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;    # build the graph&lt;br /&gt;    tb = my_top_block(demods[options.modulation], rx_callback, options)&lt;br /&gt;&lt;br /&gt;    r = gr.enable_realtime_scheduling()&lt;br /&gt;    if r != gr.RT_OK:&lt;br /&gt;        print "Warning: Failed to enable realtime scheduling."&lt;br /&gt;&lt;br /&gt;    tb.start()        # start flow graph&lt;br /&gt;    tb.wait()         # wait for it to finish&lt;br /&gt;&lt;br /&gt;if __name__ == '__main__':&lt;br /&gt;    try:&lt;br /&gt;        main()&lt;br /&gt;    except KeyboardInterrupt:&lt;br /&gt;        pass&lt;br /&gt;&lt;br /&gt;receive_path_usrp2.py&lt;br /&gt;&lt;br /&gt;#!/usr/bin/env python&lt;br /&gt;#&lt;br /&gt;# Copyright 2005,2006,2007 Free Software Foundation, Inc.&lt;br /&gt;# &lt;br /&gt;# This file is part of GNU Radio&lt;br /&gt;# &lt;br /&gt;# GNU Radio is free software; you can redistribute it and/or modify&lt;br /&gt;# it under the terms of the GNU General Public License as published by&lt;br /&gt;# the Free Software Foundation; either version 3, or (at your option)&lt;br /&gt;# any later version.&lt;br /&gt;# &lt;br /&gt;# GNU Radio is distributed in the hope that it will be useful,&lt;br /&gt;# but WITHOUT ANY WARRANTY; without even the implied warranty of&lt;br /&gt;# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&lt;br /&gt;# GNU General Public License for more details.&lt;br /&gt;# &lt;br /&gt;# You should have received a copy of the GNU General Public License&lt;br /&gt;# along with GNU Radio; see the file COPYING.  If not, write to&lt;br /&gt;# the Free Software Foundation, Inc., 51 Franklin Street,&lt;br /&gt;# Boston, MA 02110-1301, USA.&lt;br /&gt;# &lt;br /&gt;&lt;br /&gt;from gnuradio import gr, gru, blks2&lt;br /&gt;from gnuradio import usrp2&lt;br /&gt;from gnuradio import eng_notation&lt;br /&gt;import copy&lt;br /&gt;import sys&lt;br /&gt;&lt;br /&gt;# from current dir&lt;br /&gt;from pick_bitrate import pick_rx_bitrate&lt;br /&gt;&lt;br /&gt;#&lt;br /&gt;/////////////////////////////////////////////////////////////////////////////&lt;br /&gt;#                              receive path&lt;br /&gt;#&lt;br /&gt;/////////////////////////////////////////////////////////////////////////////&lt;br /&gt;&lt;br /&gt;class receive_path(gr.hier_block2):&lt;br /&gt;    def __init__(self, demod_class, rx_callback, options):&lt;br /&gt;&lt;br /&gt;        gr.hier_block2.__init__(self, "receive_path",&lt;br /&gt;                                gr.io_signature(0, 0, 0), # Input signature&lt;br /&gt;                                gr.io_signature(0, 0, 0)) # Output signature&lt;br /&gt;&lt;br /&gt;        options = copy.copy(options)    # make a copy so we can&lt;br /&gt;destructively modify&lt;br /&gt;&lt;br /&gt;        self._interface          = options.interface           # the USRP&lt;br /&gt;board attached&lt;br /&gt;        self._mac_addr           = options.mac_addr&lt;br /&gt;        self._verbose            = options.verbose&lt;br /&gt;        self._rx_freq            = options.rx_freq         # receiver's&lt;br /&gt;center frequency&lt;br /&gt;        self._rx_gain            = options.rx_gain         # receiver's gain&lt;br /&gt;        #self._rx_subdev_spec     = options.rx_subdev_spec  # daughterboard&lt;br /&gt;to use&lt;br /&gt;        self._bitrate            = options.bitrate         # desired bit&lt;br /&gt;rate &lt;br /&gt;        self._decim              = options.decim           # Decimating rate&lt;br /&gt;for the USRP (prelim) &lt;br /&gt;        self._samples_per_symbol = options.samples_per_symbol  # desired&lt;br /&gt;samples/symbol&lt;br /&gt;        self._fusb_block_size    = options.fusb_block_size # usb info for USRP&lt;br /&gt;        self._fusb_nblocks       = options.fusb_nblocks    # usb info for&lt;br /&gt;USRP&lt;br /&gt;&lt;br /&gt;        self._rx_callback   = rx_callback      # this callback is fired when&lt;br /&gt;there's a packet available&lt;br /&gt;        self._demod_class   = demod_class      # the demodulator_class we're&lt;br /&gt;using&lt;br /&gt;&lt;br /&gt;        if self._rx_freq is None:&lt;br /&gt;            sys.stderr.write("-f FREQ or --freq FREQ or --rx-freq FREQ must&lt;br /&gt;be specified\n")&lt;br /&gt;            raise SystemExit&lt;br /&gt;&lt;br /&gt;        # Set up USRP source; also adjusts decim, samples_per_symbol, and&lt;br /&gt;bitrate&lt;br /&gt;        self._setup_usrp_source()&lt;br /&gt;&lt;br /&gt;        g = self.u.gain_range()&lt;br /&gt;        if options.show_rx_gain_range:&lt;br /&gt;            print "Rx Gain Range: minimum = %g, maximum = %g, step size =&lt;br /&gt;%g" \&lt;br /&gt;                  % (g[0], g[1], g[2])&lt;br /&gt;&lt;br /&gt;        self.set_gain(options.rx_gain)&lt;br /&gt;&lt;br /&gt;        self.set_auto_tr(True)                 # enable Auto&lt;br /&gt;Transmit/Receive switching&lt;br /&gt;&lt;br /&gt;        # Set RF frequency&lt;br /&gt;        ok = self.set_freq(self._rx_freq)&lt;br /&gt;        if not ok:&lt;br /&gt;            print "Failed to set Rx frequency to %s" %&lt;br /&gt;(eng_notation.num_to_str(self._rx_freq))&lt;br /&gt;            raise ValueError, eng_notation.num_to_str(self._rx_freq)&lt;br /&gt;&lt;br /&gt;        # copy the final answers back into options for use by demodulator&lt;br /&gt;        options.samples_per_symbol = self._samples_per_symbol&lt;br /&gt;        options.bitrate = self._bitrate&lt;br /&gt;        options.decim = self._decim&lt;br /&gt;&lt;br /&gt;        # Get demod_kwargs&lt;br /&gt;        demod_kwargs =&lt;br /&gt;self._demod_class.extract_kwargs_from_options(options)&lt;br /&gt;        # Fix USRP2 -&amp;gt; USRP1 scaling&lt;br /&gt;        self.scale = gr.multiply_const_cc(32768)&lt;br /&gt;        # Design filter to get actual channel we want&lt;br /&gt;        sw_decim = 1&lt;br /&gt;        chan_coeffs = gr.firdes.low_pass (1.0,                  # gain&lt;br /&gt;                                          sw_decim *&lt;br /&gt;self._samples_per_symbol, # sampling rate&lt;br /&gt;                                          1.0,                  # midpoint&lt;br /&gt;of trans. band&lt;br /&gt;                                          0.5,                  # width of&lt;br /&gt;trans. band&lt;br /&gt;                                          gr.firdes.WIN_HANN)   # filter&lt;br /&gt;type &lt;br /&gt;&lt;br /&gt;        # Decimating channel filter&lt;br /&gt;        # complex in and out, float taps&lt;br /&gt;        self.chan_filt = gr.fft_filter_ccc(sw_decim, chan_coeffs)&lt;br /&gt;        #self.chan_filt = gr.fir_filter_ccf(sw_decim, chan_coeffs)&lt;br /&gt;&lt;br /&gt;        # receiver&lt;br /&gt;        self.packet_receiver = \&lt;br /&gt;            blks2.demod_pkts(self._demod_class(**demod_kwargs),&lt;br /&gt;                             access_code=None,&lt;br /&gt;                             callback=self._rx_callback,&lt;br /&gt;                             threshold=-1)&lt;br /&gt;    &lt;br /&gt;        # Carrier Sensing Blocks&lt;br /&gt;        alpha = 0.001&lt;br /&gt;        thresh = 30   # in dB, will have to adjust&lt;br /&gt;&lt;br /&gt;        if options.log_rx_power == True:&lt;br /&gt;            self.probe = gr.probe_avg_mag_sqrd_cf(thresh,alpha)&lt;br /&gt;            self.power_sink = gr.file_sink(gr.sizeof_float, "rxpower.dat")&lt;br /&gt;            self.connect(self.chan_filt, self.probe, self.power_sink)&lt;br /&gt;        else:&lt;br /&gt;            self.probe = gr.probe_avg_mag_sqrd_c(thresh,alpha)&lt;br /&gt;            self.connect(self.chan_filt, self.probe)&lt;br /&gt;&lt;br /&gt;        # Display some information about the setup&lt;br /&gt;        if self._verbose:&lt;br /&gt;            self._print_verbage()&lt;br /&gt;            &lt;br /&gt;        self.connect(self.u, self.scale, self.chan_filt,&lt;br /&gt;self.packet_receiver)&lt;br /&gt;&lt;br /&gt;    def _setup_usrp_source(self):&lt;br /&gt;        self.u = usrp2.source_32fc (self._interface, self._mac_addr)&lt;br /&gt;        adc_rate = self.u.adc_rate()&lt;br /&gt;&lt;br /&gt;        # derive values of bitrate, samples_per_symbol, and decim from&lt;br /&gt;desired info&lt;br /&gt;        (self._bitrate, self._samples_per_symbol, self._decim) = \ &lt;br /&gt;            pick_rx_bitrate(self._bitrate,&lt;br /&gt;self._demod_class.bits_per_symbol(), \&lt;br /&gt;                            self._samples_per_symbol, self._decim, adc_rate) &lt;br /&gt;&lt;br /&gt;        self.u.set_decim(self._decim)&lt;br /&gt;        # determine the daughterboard subdevice we're using&lt;br /&gt;        #if self._rx_subdev_spec is None:&lt;br /&gt;        #    self._rx_subdev_spec = usrp.pick_rx_subdevice(self.u)&lt;br /&gt;        #self.subdev = usrp.selected_subdev(self.u, self._rx_subdev_spec)&lt;br /&gt;&lt;br /&gt;        #self.u.set_mux(usrp.determine_rx_mux_value(self.u,&lt;br /&gt;self._rx_subdev_spec))&lt;br /&gt;&lt;br /&gt;    def set_freq(self, target_freq):&lt;br /&gt;        """&lt;br /&gt;        Set the center frequency we're interested in.&lt;br /&gt;&lt;br /&gt;        @param target_freq: frequency in Hz&lt;br /&gt;        @rypte: bool&lt;br /&gt;&lt;br /&gt;        Tuning is a two step process.  First we ask the front-end to&lt;br /&gt;        tune as close to the desired frequency as it can.  Then we use&lt;br /&gt;        the result of that operation and our target_frequency to&lt;br /&gt;        determine the value for the digital up converter.&lt;br /&gt;        """&lt;br /&gt;        r = self.u.set_center_freq(target_freq)&lt;br /&gt;        if r:&lt;br /&gt;            return True&lt;br /&gt;&lt;br /&gt;        return False&lt;br /&gt;&lt;br /&gt;    def set_gain(self, gain):&lt;br /&gt;        """&lt;br /&gt;        Sets the analog gain in the USRP&lt;br /&gt;        """&lt;br /&gt;        if gain is None:&lt;br /&gt;            r = self.u.gain_range()&lt;br /&gt;            gain = (r[0] + r[1])/2               # set gain to midpoint&lt;br /&gt;        self.gain = gain&lt;br /&gt;        return self.u.set_gain(gain)&lt;br /&gt;&lt;br /&gt;    def set_auto_tr(self, enable):&lt;br /&gt;        #return self.u.set_auto_tr(enable)&lt;br /&gt;        return&lt;br /&gt;        &lt;br /&gt;    def bitrate(self):&lt;br /&gt;        return self._bitrate&lt;br /&gt;&lt;br /&gt;    def samples_per_symbol(self):&lt;br /&gt;        return self._samples_per_symbol&lt;br /&gt;&lt;br /&gt;    def decim(self):&lt;br /&gt;        return self._decim&lt;br /&gt;&lt;br /&gt;    def carrier_sensed(self):&lt;br /&gt;        """&lt;br /&gt;        Return True if we think carrier is present.&lt;br /&gt;        """&lt;br /&gt;        #return self.probe.level() &amp;gt; X&lt;br /&gt;        return self.probe.unmuted()&lt;br /&gt;&lt;br /&gt;    def carrier_threshold(self):&lt;br /&gt;        """&lt;br /&gt;        Return current setting in dB.&lt;br /&gt;        """&lt;br /&gt;        return self.probe.threshold()&lt;br /&gt;&lt;br /&gt;    def set_carrier_threshold(self, threshold_in_db):&lt;br /&gt;        """&lt;br /&gt;        Set carrier threshold.&lt;br /&gt;&lt;br /&gt;        @param threshold_in_db: set detection threshold&lt;br /&gt;        @type threshold_in_db:  float (dB)&lt;br /&gt;        """&lt;br /&gt;        self.probe.set_threshold(threshold_in_db)&lt;br /&gt;    &lt;br /&gt;        &lt;br /&gt;    def add_options(normal, expert):&lt;br /&gt;        """&lt;br /&gt;        Adds receiver-specific options to the Options Parser&lt;br /&gt;        """&lt;br /&gt;        add_freq_option(normal)&lt;br /&gt;        if not normal.has_option("--bitrate"):&lt;br /&gt;            normal.add_option("-r", "--bitrate", type="eng_float",&lt;br /&gt;default=None,&lt;br /&gt;                              help="specify bitrate.  samples-per-symbol and&lt;br /&gt;interp/decim will be derived.")&lt;br /&gt;        normal.add_option("-e", "--interface", type="string",&lt;br /&gt;default="eth0",&lt;br /&gt;                          help="select Ethernet interface, default is eth0")&lt;br /&gt;        normal.add_option("-m", "--mac-addr", type="string", default="",&lt;br /&gt;                          help="select USRP by MAC address, default is&lt;br /&gt;auto-select")&lt;br /&gt;        #normal.add_option("-R", "--rx-subdev-spec", type="subdev",&lt;br /&gt;default=None,&lt;br /&gt;        #                  help="select USRP Rx side A or B")&lt;br /&gt;        normal.add_option("", "--rx-gain", type="eng_float", default=None,&lt;br /&gt;metavar="GAIN",&lt;br /&gt;                          help="set receiver gain in dB [default=midpoint]. &lt;br /&gt;See also --show-rx-gain-range")&lt;br /&gt;        normal.add_option("", "--show-rx-gain-range", action="store_true",&lt;br /&gt;default=False, &lt;br /&gt;                          help="print min and max Rx gain available on&lt;br /&gt;selected daughterboard")&lt;br /&gt;        normal.add_option("-v", "--verbose", action="store_true",&lt;br /&gt;default=False)&lt;br /&gt;        expert.add_option("-S", "--samples-per-symbol", type="int",&lt;br /&gt;default=None,&lt;br /&gt;                          help="set samples/symbol [default=%default]")&lt;br /&gt;        expert.add_option("", "--rx-freq", type="eng_float", default=None,&lt;br /&gt;                          help="set Rx frequency to FREQ&lt;br /&gt;[default=%default]", metavar="FREQ")&lt;br /&gt;        expert.add_option("-d", "--decim", type="intx", default=None,&lt;br /&gt;                          help="set fpga decimation rate to DECIM&lt;br /&gt;[default=%default]")&lt;br /&gt;        expert.add_option("", "--log", action="store_true", default=False,&lt;br /&gt;                          help="Log all parts of flow graph to files&lt;br /&gt;(CAUTION: lots of data)")&lt;br /&gt;        expert.add_option("", "--log-rx-power", action="store_true",&lt;br /&gt;default=False,&lt;br /&gt;                          help="Log receive signal power to file (CAUTION:&lt;br /&gt;lots of data)")&lt;br /&gt;&lt;br /&gt;    # Make a static method to call before instantiation&lt;br /&gt;    add_options = staticmethod(add_options)&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;    def _print_verbage(self):&lt;br /&gt;        """&lt;br /&gt;        Prints information about the receive path&lt;br /&gt;        """&lt;br /&gt;        print "\nReceive Path:"&lt;br /&gt;        print "Using RX d'board %s"    % (self.u.daughterboard_id(),)&lt;br /&gt;        print "Rx gain:         %g"    % (self.gain,)&lt;br /&gt;        print "modulation:      %s"    % (self._demod_class.__name__)&lt;br /&gt;        print "bitrate:         %sb/s" %&lt;br /&gt;(eng_notation.num_to_str(self._bitrate))&lt;br /&gt;        print "samples/symbol:  %3d"   % (self._samples_per_symbol)&lt;br /&gt;        print "decim:           %3d"   % (self._decim)&lt;br /&gt;        print "Rx Frequency:    %s"    %&lt;br /&gt;(eng_notation.num_to_str(self._rx_freq))&lt;br /&gt;        # print "Rx Frequency:    %f"    % (self._rx_freq)&lt;br /&gt;&lt;br /&gt;    def __del__(self):&lt;br /&gt;        # Avoid weak reference error&lt;br /&gt;        #del self.subdev&lt;br /&gt;        return&lt;br /&gt;            &lt;br /&gt;def add_freq_option(parser):&lt;br /&gt;    """&lt;br /&gt;    Hackery that has the -f / --freq option set both tx_freq and rx_freq&lt;br /&gt;    """&lt;br /&gt;    def freq_callback(option, opt_str, value, parser):&lt;br /&gt;        parser.values.rx_freq = value&lt;br /&gt;        parser.values.tx_freq = value&lt;br /&gt;&lt;br /&gt;    if not parser.has_option('--freq'):&lt;br /&gt;        parser.add_option('-f', '--freq', type="eng_float",&lt;br /&gt;                          action="callback", callback=freq_callback,&lt;br /&gt;                          help="set Tx and/or Rx frequency to FREQ&lt;br /&gt;[default=%default]",&lt;br /&gt;                          metavar="FREQ")&lt;br /&gt;&lt;br /&gt;pick_bitrate.py&lt;br /&gt;&lt;br /&gt;#&lt;br /&gt;# Copyright 2005,2006 Free Software Foundation, Inc.&lt;br /&gt;# &lt;br /&gt;# This file is part of GNU Radio&lt;br /&gt;# &lt;br /&gt;# GNU Radio is free software; you can redistribute it and/or modify&lt;br /&gt;# it under the terms of the GNU General Public License as published by&lt;br /&gt;# the Free Software Foundation; either version 3, or (at your option)&lt;br /&gt;# any later version.&lt;br /&gt;# &lt;br /&gt;# GNU Radio is distributed in the hope that it will be useful,&lt;br /&gt;# but WITHOUT ANY WARRANTY; without even the implied warranty of&lt;br /&gt;# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&lt;br /&gt;# GNU General Public License for more details.&lt;br /&gt;# &lt;br /&gt;# You should have received a copy of the GNU General Public License&lt;br /&gt;# along with GNU Radio; see the file COPYING.  If not, write to&lt;br /&gt;# the Free Software Foundation, Inc., 51 Franklin Street,&lt;br /&gt;# Boston, MA 02110-1301, USA.&lt;br /&gt;# &lt;br /&gt;&lt;br /&gt;_default_bitrate = 500e3&lt;br /&gt;&lt;br /&gt;_valid_samples_per_symbol = (2,3,4,5,6,7)&lt;br /&gt;&lt;br /&gt;def _gen_tx_info(converter_rate):&lt;br /&gt;    results = []&lt;br /&gt;    for samples_per_symbol in _valid_samples_per_symbol:&lt;br /&gt;        for interp in range(16, 512 + 1, 4):&lt;br /&gt;            bitrate = converter_rate / interp / samples_per_symbol&lt;br /&gt;            results.append((bitrate, samples_per_symbol, interp))&lt;br /&gt;    results.sort()&lt;br /&gt;    return results&lt;br /&gt;&lt;br /&gt;def _gen_rx_info(converter_rate):&lt;br /&gt;    results = []&lt;br /&gt;    for samples_per_symbol in _valid_samples_per_symbol:&lt;br /&gt;        for decim in range(8, 256 + 1, 2):&lt;br /&gt;            bitrate = converter_rate / decim / samples_per_symbol&lt;br /&gt;            results.append((bitrate, samples_per_symbol, decim))&lt;br /&gt;    results.sort()&lt;br /&gt;    return results&lt;br /&gt;    &lt;br /&gt;def _filter_info(info, samples_per_symbol, xrate):&lt;br /&gt;    if samples_per_symbol is not None:&lt;br /&gt;        info = [x for x in info if x[1] == samples_per_symbol]&lt;br /&gt;    if xrate is not None:&lt;br /&gt;        info = [x for x in info if x[2] == xrate]&lt;br /&gt;    return info&lt;br /&gt;&lt;br /&gt;def _pick_best(target_bitrate, bits_per_symbol, info):&lt;br /&gt;    """&lt;br /&gt;    @returns tuple (bitrate, samples_per_symbol, interp_rate_or_decim_rate)&lt;br /&gt;    """&lt;br /&gt;    if len(info) == 0:&lt;br /&gt;        raise RuntimeError, "info is zero length!"&lt;br /&gt;&lt;br /&gt;    if target_bitrate is None:     # return the fastest one&lt;br /&gt;        return info[-1]&lt;br /&gt;    &lt;br /&gt;    # convert bit rate to symbol rate&lt;br /&gt;    target_symbolrate = target_bitrate / bits_per_symbol&lt;br /&gt;    &lt;br /&gt;    # Find the closest matching symbol rate.&lt;br /&gt;    # In the event of a tie, the one with the lowest samples_per_symbol&lt;br /&gt;wins.&lt;br /&gt;    # (We already sorted them, so the first one is the one we take)&lt;br /&gt;&lt;br /&gt;    best = info[0]&lt;br /&gt;    best_delta = abs(target_symbolrate - best[0])&lt;br /&gt;    for x in info[1:]:&lt;br /&gt;        delta = abs(target_symbolrate - x[0])&lt;br /&gt;        if delta &amp;lt; best_delta:&lt;br /&gt;            best_delta = delta&lt;br /&gt;            best = x&lt;br /&gt;&lt;br /&gt;    # convert symbol rate back to bit rate&lt;br /&gt;    return ((best[0] * bits_per_symbol),) + best[1:]&lt;br /&gt;&lt;br /&gt;def _pick_bitrate(bitrate, bits_per_symbol, samples_per_symbol,&lt;br /&gt;                  xrate, converter_rate, gen_info):&lt;br /&gt;    """&lt;br /&gt;    @returns tuple (bitrate, samples_per_symbol, interp_rate_or_decim_rate)&lt;br /&gt;    """&lt;br /&gt;    if not isinstance(bits_per_symbol, int) or bits_per_symbol &amp;lt; 1:&lt;br /&gt;        raise ValueError, "bits_per_symbol must be an int &amp;gt;= 1"&lt;br /&gt;    &lt;br /&gt;    if samples_per_symbol is not None and xrate is not None:  # completely&lt;br /&gt;determined&lt;br /&gt;        return (float(converter_rate) / xrate / samples_per_symbol,&lt;br /&gt;                samples_per_symbol, xrate)&lt;br /&gt;&lt;br /&gt;    if bitrate is None and samples_per_symbol is None and xrate is None:&lt;br /&gt;        bitrate = _default_bitrate&lt;br /&gt;&lt;br /&gt;    # now we have a target bitrate and possibly an xrate or&lt;br /&gt;    # samples_per_symbol constraint, but not both of them.&lt;br /&gt;&lt;br /&gt;    return _pick_best(bitrate, bits_per_symbol,&lt;br /&gt;                      _filter_info(gen_info(converter_rate),&lt;br /&gt;samples_per_symbol, xrate))&lt;br /&gt;    &lt;br /&gt;#&lt;br /&gt;---------------------------------------------------------------------------------------&lt;br /&gt;&lt;br /&gt;def pick_tx_bitrate(bitrate, bits_per_symbol, samples_per_symbol,&lt;br /&gt;                    interp_rate, converter_rate=128e6): &lt;br /&gt;    """&lt;br /&gt;    Given the 4 input parameters, return at configuration that matches&lt;br /&gt;&lt;br /&gt;    @param bitrate: desired bitrate or None&lt;br /&gt;    @type bitrate: number or None&lt;br /&gt;    @param bits_per_symbol: E.g., BPSK -&amp;gt; 1, QPSK -&amp;gt; 2, 8-PSK -&amp;gt; 3&lt;br /&gt;    @type bits_per_symbol: integer &amp;gt;= 1&lt;br /&gt;    @param samples_per_symbol: samples/baud (aka samples/symbol)&lt;br /&gt;    @type samples_per_symbol: number or None&lt;br /&gt;    @param interp_rate: USRP interpolation factor&lt;br /&gt;    @type interp_rate: integer or None&lt;br /&gt;    @param converter_rate: converter sample rate in Hz&lt;br /&gt;    @type converter_rate: number&lt;br /&gt;&lt;br /&gt;    @returns tuple (bitrate, samples_per_symbol, interp_rate)&lt;br /&gt;    """&lt;br /&gt;    return _pick_bitrate(bitrate, bits_per_symbol, samples_per_symbol,&lt;br /&gt;                         interp_rate, converter_rate, _gen_tx_info)&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;def pick_rx_bitrate(bitrate, bits_per_symbol, samples_per_symbol,&lt;br /&gt;                    decim_rate, converter_rate=64e6): &lt;br /&gt;    """&lt;br /&gt;    Given the 4 input parameters, return at configuration that matches&lt;br /&gt;&lt;br /&gt;    @param bitrate: desired bitrate or None&lt;br /&gt;    @type bitrate: number or None&lt;br /&gt;    @param bits_per_symbol: E.g., BPSK -&amp;gt; 1, QPSK -&amp;gt; 2, 8-PSK -&amp;gt; 3&lt;br /&gt;    @type bits_per_symbol: integer &amp;gt;= 1&lt;br /&gt;    @param samples_per_symbol: samples/baud (aka samples/symbol)&lt;br /&gt;    @type samples_per_symbol: number or None&lt;br /&gt;    @param decim_rate: USRP decimation factor&lt;br /&gt;    @type decim_rate: integer or None&lt;br /&gt;    @param converter_rate: converter sample rate in Hz&lt;br /&gt;    @type converter_rate: number&lt;br /&gt;&lt;br /&gt;    @returns tuple (bitrate, samples_per_symbol, decim_rate)&lt;br /&gt;    """&lt;br /&gt;    return _pick_bitrate(bitrate, bits_per_symbol, samples_per_symbol,&lt;br /&gt;                         decim_rate, converter_rate, _gen_rx_info)&lt;br /&gt;&lt;br /&gt;Thanks in advance for your cooperation.&lt;/pre&gt;&lt;br /&gt;&lt;span style="font-size: large;"&gt;&lt;b&gt;(2)&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;Hi,&lt;br /&gt;&lt;br /&gt;This is what I get when I run benchmark _tx.py and benchmark_rx.py&lt;br /&gt;respectively on USRP2 with transmit_path_usrp2.py and receive_path_usrp2.py&lt;br /&gt;respectively:&lt;br /&gt;&lt;br /&gt;benchmark_tx.py:-&lt;br /&gt;&lt;br /&gt;m...@mcrl-desktop:~/gnuradio/gnuradio-examples/python/digital$ sudo&lt;br /&gt;./benchmark_tx.py -f 2400M -v&lt;br /&gt;usrp2::ctor reset_db failed&lt;br /&gt;usrp2::ctor set_rx_gain failed&lt;br /&gt;usrp2::ctor set_tx_interp failed&lt;br /&gt;usrp2::ctor set_rx_scale_iq failed&lt;br /&gt;&amp;gt;&amp;gt;&amp;gt; gr_fir_fff: using SSE&lt;br /&gt;bits per symbol = 1&lt;br /&gt;Gaussian filter bt = 0.35&lt;br /&gt;Using TX d'board 43&lt;br /&gt;Tx amplitude     12000&lt;br /&gt;modulation:      gmsk_mod&lt;br /&gt;bitrate:         500kb/s&lt;br /&gt;samples/symbol:    2&lt;br /&gt;interp:          100&lt;br /&gt;Tx Frequency:    2.4G&lt;br /&gtm...@mcrl-desktop:~/gnuradio/gnuradio-examples/python/digital$&lt;br /&gt; &lt;br /&gt;&lt;br /&gt;benchmark_rx.py:-&lt;br /&gt;&lt;br /&gt;m...@mcrl-desktop:~/gnuradio/gnuradio-examples/python/digital$ sudo&lt;br /&gt;./benchmark_rx.py -f 2400M -v&lt;br /&gt;usrp2::ctor reset_db failed&lt;br /&gt;&amp;gt;&amp;gt;&amp;gt; gr_fir_fff: using SSE&lt;br /&gt;bits per symbol = 1&lt;br /&gt;M&amp;amp;M clock recovery omega = 2.000000&lt;br /&gt;M&amp;amp;M clock recovery gain mu = 0.175000&lt;br /&gt;M&amp;amp;M clock recovery mu = 0.500000&lt;br /&gt;M&amp;amp;M clock recovery omega rel. limit = 0.005000&lt;br /&gt;frequency error = 0.000000&lt;br /&gt;&lt;br /&gt;Receive Path:&lt;br /&gt;Using RX d'board 39&lt;br /&gt;Rx gain:         35&lt;br /&gt;modulation:      gmsk_demod&lt;br /&gt;bitrate:         500kb/s&lt;br /&gt;samples/symbol:    2&lt;br /&gt;decim:           100&lt;br /&gt;Rx Frequency:    2.4G&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Now the same thing for usrp1 but using transmit_path.py and receive_path.py&lt;br /&gt;which is already provided in gnuradio:&lt;br /&gt;&lt;br /&gt;benchmark_tx.py:-&lt;br /&gt;&lt;br /&gt;m...@mcrl-desktop:~/gnuradio/gnuradio-examples/python/digital$ sudo&lt;br /&gt;./benchmark_tx.py -f 2400M -v&lt;br /&gt;&amp;gt;&amp;gt;&amp;gt; gr_fir_fff: using SSE&lt;br /&gt;bits per symbol = 1&lt;br /&gt;Gaussian filter bt = 0.35&lt;br /&gt;Using TX d'board A: Flex 2400 Tx MIMO B&lt;br /&gt;Tx amplitude     12000&lt;br /&gt;modulation:      gmsk_mod&lt;br /&gt;bitrate:         500kb/s&lt;br /&gt;samples/symbol:    2&lt;br /&gt;interp:          128&lt;br /&gt;Tx Frequency:    2.4G&lt;br /&gtm...@mcrl-desktop:~/gnuradio/gnuradio-examples/python/digital$&lt;br /&gt; &lt;br /&gt;&lt;br /&gt;benchmark_rx.py:-&lt;br /&gt;&lt;br /&gt;m...@mcrl-desktop:~/gnuradio/gnuradio-examples/python/digital$ sudo&lt;br /&gt;./benchmark_rx.py -f 2400M -v&lt;br /&gt;&amp;gt;&amp;gt;&amp;gt; gr_fir_fff: using SSE&lt;br /&gt;bits per symbol = 1&lt;br /&gt;M&amp;amp;M clock recovery omega = 2.000000&lt;br /&gt;M&amp;amp;M clock recovery gain mu = 0.175000&lt;br /&gt;M&amp;amp;M clock recovery mu = 0.500000&lt;br /&gt;M&amp;amp;M clock recovery omega rel. limit = 0.005000&lt;br /&gt;frequency error = 0.000000&lt;br /&gt;&lt;br /&gt;Receive Path:&lt;br /&gt;Using RX d'board A: Flex 2400 Rx MIMO B&lt;br /&gt;Rx gain:         45&lt;br /&gt;modulation:      gmsk_demod&lt;br /&gt;bitrate:         500kb/s&lt;br /&gt;samples/symbol:    2&lt;br /&gt;decim:            64&lt;br /&gt;Rx Frequency:    2.4G&lt;br /&gt;&lt;br /&gt;I am using the same pick_bitrate.py file that is already provided in&lt;br /&gt;gnuradio. As it can be seen that both usrp systems have the default bit rate&lt;br /&gt;irrespective of whether it acts as receiver or transmitter. My concern is&lt;br /&gt;with the interpolation and decimation. Do I need to make changes to the&lt;br /&gt;pick_bitrate.py file for USRP2? If yes, then what kind of changes. I also&lt;br /&gt;observed that even though USRP2 shows a bit rate of 500kbps, however I&lt;br /&gt;believe that its transmitting too fast which does not allow USRP1 to receive&lt;br /&gt;correctly.I would greatly appreciate any help in this matter.&lt;br /&gt;&lt;br /&gt;Thanks in advance.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;&lt;span style="font-size: large;"&gt;(3)&lt;/span&gt;&lt;/b&gt;&lt;/pre&gt;&lt;br /&gt;&lt;pre&gt;At a minimum, you will need to call pick_tx_bitrate and&lt;br /&gt;pick_rx_bitrate providing proper rates for the ADC and DAC.  They&lt;br /&gt;default to the values appropriate for the USRP1.  However, it looks&lt;br /&gt;like you'll need a USRP2 version since they encode the acceptable&lt;br /&gt;ranges for interpolation and decimation which are different between&lt;br /&gt;the USRP1 and USRP2.&lt;br /&gt;&lt;br /&gt;Eric&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;&lt;span style="font-size: large;"&gt;(4)&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;pre&gt;Hi,&lt;br /&gt;&lt;br /&gt;I already tried to set the value of the converter_rate in pick_tx_bitrate&lt;br /&gt;and Pick_rx_bitrate according to the ADC and DAC specifications of u...@. I&lt;br /&gt;set it to 200e6 in pick_tx_bitrate and in pick_rx_bitrate. But even that did&lt;br /&gt;not worked. I am confused with how to modify the pick_bitrate.py file for&lt;br /&gt;usrp2. I am not able to determine the different parameters that I need to&lt;br /&gt;provide for usrp2. If anyone has already worked on it then please help me to&lt;br /&gt;modify the pick_bitrate file for usrp2. Also if any other changes are&lt;br /&gt;required in other python files.&lt;br /&gt;&lt;br /&gt;Thanks in advance.&lt;br /&gt;&lt;br /&gt;Smith&lt;/pre&gt;&lt;br /&gt;&lt;b&gt;&lt;span style="font-size: large;"&gt;(5)&lt;/span&gt;&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;tt&gt;The DAC rate is 100e6.  The "bitrate" is the desired data rate of the  &lt;/tt&gt;&lt;tt&gt;over the air modulation.  It should be MUCH less, like 100k to 1M or so. &lt;/tt&gt;&lt;br /&gt;&lt;tt&gt;There is absolutely nothing in any of the systems for which 200e6 is a  &lt;/tt&gt;&lt;tt&gt;correct choice. &lt;/tt&gt;&lt;br /&gt;&lt;pre style="margin: 0em;"&gt;Matt&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7382892549759040576/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/advance-info-about-usrp-trans.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7382892549759040576'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7382892549759040576'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/advance-info-about-usrp-trans.html' title='advance info. about usrp trans.'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5994249862775469061</id><published>2010-10-17T23:59:00.000-05:00</published><updated>2010-10-17T23:59:37.963-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Why dont you read the "readme" file first?!</title><content type='html'>it's fucking awful to find everything in readme file, while I spent nearly 10 hours wander around in the internet......&lt;br /&gt;&lt;br /&gt;==========&lt;br /&gt;&lt;br /&gt;/gnuradio3.2.2/gnuradio-examples/python/digital/README&lt;br /&gt;&lt;br /&gt;Quick overview of what's here:&lt;br /&gt;&lt;br /&gt;* benchmark_tx.py: generates packets of the size you&lt;br /&gt;specify and sends them across the air using the USRP.&amp;nbsp; Known to work&lt;br /&gt;well using the USRP with the RFX transceiver daughterboards.&lt;br /&gt;You can specify the bitrate to use with the -r &lt;bitrate&gt; command line&lt;br /&gt;parameter.&amp;nbsp; The default is 500k.&amp;nbsp; Some machines will do 1M or more.&lt;br /&gt;You can select the modulation to use with the -m &lt;modulation&gt; command&lt;br /&gt;line argument.&amp;nbsp; The legal values for &lt;modulation&gt; are gmsk, dbpsk and dqpsk.&lt;br /&gt;&lt;br /&gt;* benchmark_rx.py: the receiver half of benchmark_tx.py.&lt;br /&gt;Command line arguments are pretty much the same as rx.&amp;nbsp; Works well&lt;br /&gt;with a USRP and RFX transceiver daughterboards.&amp;nbsp; Will also work&lt;br /&gt;with TVRX daugherboard, but you'll need to fiddle with the gain.&amp;nbsp; See&lt;br /&gt;below.&amp;nbsp; Prints a summary of each packet received and keeps a running&lt;br /&gt;total of packets received, and how many of them were error free.&lt;br /&gt;There are two levels of error reporting going on.&amp;nbsp; If the access code&lt;br /&gt;(PN code) and header of a packet were properly detected, then you'll&lt;br /&gt;get an output line.&amp;nbsp; If the CRC32 of the payload was correct you get&lt;br /&gt;"ok = True", else "ok = False".&amp;nbsp; The "pktno" is extracted from the&lt;br /&gt;received packet.&amp;nbsp; If there are skipped numbers, you're missing some&lt;br /&gt;packets.&amp;nbsp; Be sure you've got a suitable antenna connected to the TX/RX&lt;br /&gt;port on each board.&amp;nbsp; For the RFX-400, "70 cm" / 420 MHz antennas for ham&lt;br /&gt;handi-talkies work great.&amp;nbsp; These are available at ham radio supplies,&lt;br /&gt;etc.&amp;nbsp; The boards need to be at least 3m apart.&amp;nbsp; You can also try&lt;br /&gt;experimenting with the rx gain (-g &lt;gain&gt; command line option).&lt;br /&gt;&lt;br /&gt;Generally speaking, I start the rx first on one machine, and then fire&lt;br /&gt;up the tx on the other machine.&amp;nbsp; The tx also supports a discontinous&lt;br /&gt;transmission mode where it sends bursts of 5 packets and then waits 1&lt;br /&gt;second.&amp;nbsp; This is useful for ensuring that all the receiver control&lt;br /&gt;loops lock up fast enough.&lt;br /&gt;&lt;br /&gt;* tunnel.py: This program provides a framework for building your own&lt;br /&gt;MACs.&amp;nbsp; It creates a "TAP" interface in the kernel, typically gr0,&lt;br /&gt;and sends and receives ethernet frames through it.&amp;nbsp; See&lt;br /&gt;/usr/src/linux/Documentation/networking/tuntap.txt and/or Google for&lt;br /&gt;"universal tun tap".&amp;nbsp; The Linux 2.6 kernel includes the tun module, you&lt;br /&gt;don't have to build it.&amp;nbsp; You may have to "modprobe tun" if it's not&lt;br /&gt;loaded by default.&amp;nbsp; If /dev/net/tun doesn't exist, try "modprobe tun".&lt;br /&gt;&lt;br /&gt;To run this program you'll need to be root or running with the&lt;br /&gt;appropriate capability to open the tun interface.&amp;nbsp; You'll need to fire&lt;br /&gt;up two copies on different machines.&amp;nbsp; Once each is running you'll need&lt;br /&gt;to ifconfig the gr0 interface to set the IP address.&lt;br /&gt;&lt;br /&gt;This will allow two machines to talk, but anything beyond the two&lt;br /&gt;machines depends on your networking setup.&amp;nbsp; Left as an exercise...&lt;br /&gt;&lt;br /&gt;On machine A:&lt;br /&gt;&lt;br /&gt;&amp;nbsp; $ su&lt;br /&gt;&amp;nbsp; # ./tunnel.py --freq 423.0M --bitrate 500k&lt;br /&gt;&amp;nbsp; # # in another window on A, also as root...&lt;br /&gt;&amp;nbsp; # ifconfig gr0 192.168.200.1&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;On machine B:&lt;br /&gt;&lt;br /&gt;&amp;nbsp; $ su&lt;br /&gt;&amp;nbsp; # ./tunnel.py --freq 423.0M --bitrate 500k&lt;br /&gt;&amp;nbsp; # # in another window on B, also as root...&lt;br /&gt;&amp;nbsp; # ifconfig gr0 192.168.200.2&lt;br /&gt;&lt;br /&gt;Now, on machine A you shold be able to ping machine B:&lt;br /&gt;&lt;br /&gt;&amp;nbsp; $ ping 192.168.200.2&lt;br /&gt;&lt;br /&gt;and you should see some output for each packet in the&lt;br /&gt;tunnel.py window if you used the -v option.&lt;br /&gt;&lt;br /&gt;Likewise, on machine B:&lt;br /&gt;&lt;br /&gt;&amp;nbsp; $ ping 192.168.200.1&lt;br /&gt;&lt;br /&gt;This now uses a carrier sense MAC, so you should be able to ssh&lt;br /&gt;between the machines, web browse, etc.&lt;br /&gt;&lt;br /&gt;* run_length.py: This program takes a single argument '-f FILE' and&lt;br /&gt;outputs the number of runs of similar bits within the file. It is&lt;br /&gt;useful as a diagnostic tool when experimenting with line coding or&lt;br /&gt;whitening algorithms.&lt;/gain&gt;&lt;/modulation&gt;&lt;/modulation&gt;&lt;/bitrate&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5994249862775469061/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/why-dont-you-read-readme-file-first.html#comment-form' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5994249862775469061'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5994249862775469061'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/why-dont-you-read-readme-file-first.html' title='Why dont you read the &quot;readme&quot; file first?!'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5151942774827382687</id><published>2010-10-17T20:10:00.001-05:00</published><updated>2010-10-17T20:10:43.039-05:00</updated><app:control xmlns:app='http://purl.org/atom/app#'><app:draft>yes</app:draft></app:control><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>gnuradio and usrp</title><content type='html'>&lt;a href="http://radioware.nd.edu/documentation"&gt;http://radioware.nd.edu/documentation&lt;/a&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br clear="all"&gt;---------------------------------&lt;br&gt;Qiong Wu&lt;br&gt; </content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5151942774827382687'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5151942774827382687'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2219454216975926286</id><published>2010-10-17T17:20:00.001-05:00</published><updated>2010-11-01T13:15:58.361-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Network'/><title type='text'>How to test USRP when you get it</title><content type='html'>&lt;span style="font-family: Arial;"&gt;&lt;b&gt;prerequisites:&lt;/b&gt;&lt;br /&gt;1. install Linux: need to select a OS &lt;a href="http://gnuradio.org/trac/wiki/GettingStarted"&gt;here&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial;"&gt;2. install GNU Radio:&amp;nbsp;&amp;nbsp;&amp;nbsp; --&lt;a href="http://gnuradio.org/trac/wiki"&gt;http://gnuradio.org/trac/wiki&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial;"&gt;3. (optional) read the hardware documents:&amp;nbsp;&amp;nbsp;&amp;nbsp; --&lt;a href="http://gnuradio.org/trac/wiki/USRP"&gt;http://gnuradio.org/trac/wiki/USRP&lt;/a&gt; &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; user guide/install guide:&amp;nbsp;&amp;nbsp;&amp;nbsp; --&lt;a href="http://www.comsec.com/wiki?UsrpInstall"&gt;http://www.comsec.com/wiki?UsrpInstall&lt;/a&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; All the datasheets can be downloaded &lt;a href="http://www.wu.ece.ufl.edu/projects/wirelessVideo/project/GNU_Radio_USRP/datasheet.zip"&gt; here&lt;/a&gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial;"&gt;4. (optional) read driver source code &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; the source codes related to USRP:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; /usrp&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  firmware: for 8051 in USB controller, mostly writen as .c and .a51&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  FPGA: for FPGA, mostly writen as .v (it seems fpga only has SRAM inside, so it  need to download software for fpga every time)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  host: for PC, mostly writen as .cc&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; /gr-usrp&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  driver for dauther board: mostly writen as .py and .cc&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  /gnuradio-example/python/usrp&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  example for single usrp board: all writen in .py&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  /gnuradio-example/python/multi-usrp&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;  example for multi usrp boards: all writen in .py&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial;"&gt; &lt;br /&gt;&lt;b&gt;begin to test:&lt;/b&gt;&lt;br /&gt;1. How to power on and start test:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; step1. before plug in USB cable, open  two terminal.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; step2. to see a real time display of  all log messages: tail -f /var/log/messages (to check the usb driver is  correctly installed)&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; How to stop and power off:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; step1. stop the program.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; step2. disconnect USB connection and  power off&lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial;"&gt;2. test a script for usrp first without daughter board, which file I need to  test? &lt;br /&gt;--&lt;a href="http://www.comsec.com/wiki?UsrpInstall"&gt;http://www.comsec.com/wiki?UsrpInstall&lt;/a&gt;&lt;br /&gt;gnuradio\gnuradio-examples\python\usrp\usrp_siggen.py &amp;amp; usrp_fft.py&lt;br /&gt;&lt;br /&gt;3. how to test the transmitter and receiver for daughter board?&lt;br /&gt;The antenna should be connect by Tx/Rx SMA but NOT Rx2! there is a switch for  Rx2 and the switch is off in default!&lt;br /&gt;The Tx and Rx can NOT be connected directly by cable! need a attenuator about  40-50 dB!!&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1) /gnuradio-examples/python/usrp/usrp_siggen.py and usrp_fft.py to observe  signal&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2) /gnuradio-examples/python/digital/benchmark_tx.py and benchmark_rx.py to test  data transmission.&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; The boards need to be at least 3m  apart. --/home/james/gnuradio/gnuradio-examples/python/digital/README&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3) use tx_voice.py and rx_voice.py to test voice transmission. &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; 4) some also said to test /gnuradio-examples/python/usrp/usrp_nbfm_ptt.py to  test full duplex voice call, but I can't make it works.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;test voice:&lt;/b&gt;&lt;br /&gt;1. gnuradio-examples\python\audio\dial_tone.py as tutorial&lt;br /&gt;2. gnuradio-examples\python\audio\audio_copy.py&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; gnuradio-examples\python\audio\audio_to_file.py&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; gnuradio-examples\python\audio\audio_play.py&lt;br /&gt;3. gnuradio-examples\python\digital_voice\encdec.py to test by one USRP&lt;br /&gt;4.  gnuradio-examples\python\digital\tx_voice.py&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; gnuradio-examples\python\digital\rx_voice.py to test by two  USRP&lt;br /&gt;&lt;br /&gt;&lt;b&gt;test data:&lt;/b&gt;&lt;br /&gt;1.  gnuradio-examples\python\digital\benchmark_tx.py&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; gnuradio-examples\python\digital\benchmark_rx.py to test by  two USRP&lt;br /&gt;&lt;br /&gt;&lt;b&gt;suggested by others:&lt;/b&gt;&lt;br /&gt;1. &lt;a href="http://www.nabble.com/High-packet-error-and-reception-problems-with-RFX-2400-t3522095.html"&gt; http://www.nabble.com/High-packet-error-and-reception-problems-with-RFX-2400-t3522095.html&lt;/a&gt;&lt;br /&gt;./benchmark_tx.py -f 2412M --bitrate 500k -v --tx-amplitude=30000&lt;br /&gt;usrp_siggen.py and usrp_oscope.py&lt;br /&gt;./benchmark_rx.py -f 2412M --bitrate 100k -v --rx-gain=75&lt;br /&gt;--in digital folder&lt;br /&gt;&lt;br /&gt;2. &lt;a href="http://staff.washington.edu/jon/gr-osx/gr-osx-usrp.html#using"&gt; http://staff.washington.edu/jon/gr-osx/gr-osx-usrp.html#using&lt;/a&gt;&lt;br /&gt;benchmark_usb.py Estimate throughput of USB&lt;br /&gt;usrp_siggen.py Signal generator&lt;br /&gt;usrp_oscope.py Oscilloscope (screenshot)&lt;br /&gt;usrp_fft.py Spectrum analyzer (screenshot)&lt;/span&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2219454216975926286/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/how-to-test-usrp-when-you-get-it.html#comment-form' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2219454216975926286'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2219454216975926286'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/how-to-test-usrp-when-you-get-it.html' title='How to test USRP when you get it'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7673564794562937525</id><published>2010-10-17T15:24:00.001-05:00</published><updated>2010-10-17T15:24:27.588-05:00</updated><app:control xmlns:app='http://purl.org/atom/app#'><app:draft>yes</app:draft></app:control><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Introductory Tour of the GNU Radio Project</title><content type='html'>&lt;p&gt;&lt;img src="http://www.gnu.org/software/gnuradio/images/gnuradio12.png" alt="http://www.gnu.org/software/gnuradio/images/gnuradio12.png" title="http://www.gnu.org/software/gnuradio/images/gnuradio12.png"&gt;&lt;/p&gt; &lt;ul&gt;&lt;li&gt;&lt;a href="http://www.joshknows.com/gnuradio#intro"&gt;Introduction&lt;/a&gt; &lt;/li&gt;&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Software_radio"&gt;Software Defined Radio&lt;/a&gt; &lt;/li&gt;&lt;li&gt;&lt;a href="http://www.joshknows.com/gnuradio#usrp"&gt;The USRP&lt;/a&gt; &lt;/li&gt;&lt;li&gt;&lt;a href="http://www.joshknows.com/gnuradio#install"&gt;Installing GNU Radio&lt;/a&gt; &lt;/li&gt;&lt;li&gt;&lt;a href="http://www.joshknows.com/gnuradio#using"&gt;Using GNU Radio&lt;/a&gt; &lt;/li&gt;&lt;li&gt;&lt;a href="http://www.joshknows.com/gnuradio#example"&gt;Learning By Example&lt;/a&gt; &lt;/li&gt;&lt;li&gt;&lt;a href="http://www.joshknows.com/gnuradio#usrp_example"&gt;USRP Examples&lt;/a&gt; &lt;/li&gt;&lt;li&gt;&lt;a href="http://www.joshknows.com/gnuradio#datatypes"&gt;Data Types&lt;/a&gt; &lt;/li&gt;&lt;li&gt;&lt;a href="http://www.joshknows.com/gnuradio</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7673564794562937525'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7673564794562937525'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-273898054558092691</id><published>2010-10-12T17:33:00.001-05:00</published><updated>2010-10-12T17:33:59.291-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>ways to keep from duplicating path variable in csh</title><content type='html'>&lt;pre class="prettyprint"&gt;&lt;code&gt;&lt;span class="com"&gt;#!/usr/bin/perl&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;#&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# ^^ ensure this is pointing to the correct location.&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;#&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# Title: &amp;nbsp; &amp;nbsp;SLimPath&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# Author: &amp;nbsp; David "Shoe Lace" Pyke &lt;eselle@users.sourceforge.net&gt;&lt;/eselle@users.sourceforge.net&gt;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# &amp;nbsp; : &amp;nbsp; Tim Nelson &lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# Purpose: To create a slim version of my envirnoment path so as to eliminate&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# &amp;nbsp; &amp;nbsp; &amp;nbsp; duplicate entries and ensure that the "." path was last.&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# Date Created: April 1st 1999&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# Revision History:&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# &amp;nbsp; 01/04/99: initial tests.. didn't wok verywell at all&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# &amp;nbsp; &amp;nbsp; &amp;nbsp; : retreived path throught '$ENV' call&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# &amp;nbsp; 07/04/99: After an email from Tim Nelson &lt;wayland@ne.com.au&gt; got it to&lt;/wayland@ne.com.au&gt;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; work.&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# &amp;nbsp; &amp;nbsp; &amp;nbsp; : used 'push' to add to array&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# &amp;nbsp; &amp;nbsp; &amp;nbsp; : used 'join' to create a delimited string from a list/array.&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# &amp;nbsp; 16/02/00: fixed cmd-line options to look/work better&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# &amp;nbsp; 25/02/00: made verbosity level-oriented&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;#&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;#&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="kwd"&gt;use&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="typ"&gt;Getopt&lt;/span&gt;&lt;span class="pun"&gt;::&lt;/span&gt;&lt;span class="typ"&gt;Std&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="kwd"&gt;sub&lt;/span&gt;&lt;span class="pln"&gt; printlevel&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;br /&gt;$initial_str &lt;/span&gt;&lt;span class="pun"&gt;=&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;""&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;$debug_mode &lt;/span&gt;&lt;span class="pun"&gt;=&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;""&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;$delim_chr &lt;/span&gt;&lt;span class="pun"&gt;=&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;":"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;$opt_v &lt;/span&gt;&lt;span class="pun"&gt;=&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="lit"&gt;1&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;br /&gt;getopts&lt;/span&gt;&lt;span class="pun"&gt;(&lt;/span&gt;&lt;span class="str"&gt;"v:hd:l:e:s:"&lt;/span&gt;&lt;span class="pun"&gt;);&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;br /&gt;OPTS&lt;/span&gt;&lt;span class="pun"&gt;:&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;{&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; $opt_h &lt;/span&gt;&lt;span class="pun"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="kwd"&gt;do&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;{&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="kwd"&gt;print&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"\n$0 [-v level] [-d level] [-l delim] ( -e varname | -s strname | -h )"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="kwd"&gt;print&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"\nWhere:"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="kwd"&gt;print&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"\n &amp;nbsp; -h &amp;nbsp;This help"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="kwd"&gt;print&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"\n &amp;nbsp; -d &amp;nbsp;Debug level"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="kwd"&gt;print&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"\n &amp;nbsp; -l &amp;nbsp;Delimiter (between path vars)"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="kwd"&gt;print&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"\n &amp;nbsp; -e &amp;nbsp;Specify environment variable (NB: don't include \$ sign)"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="kwd"&gt;print&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"\n &amp;nbsp; -s &amp;nbsp;String (ie. $0 -s \$PATH:/looser/bin/)"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="kwd"&gt;print&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"\n &amp;nbsp; -v &amp;nbsp;Verbosity (0 = quiet, 1 = normal, 2 = verbose)"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="kwd"&gt;print&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"\n"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="kwd"&gt;exit&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="pun"&gt;};&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; $opt_d &lt;/span&gt;&lt;span class="pun"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="kwd"&gt;do&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;{&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; printlevel &lt;/span&gt;&lt;span class="lit"&gt;1&lt;/span&gt;&lt;span class="pun"&gt;,&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"You selected debug level $opt_d\n"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $debug_mode &lt;/span&gt;&lt;span class="pun"&gt;=&lt;/span&gt;&lt;span class="pln"&gt; $opt_d&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="pun"&gt;};&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; $opt_l &lt;/span&gt;&lt;span class="pun"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="kwd"&gt;do&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;{&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; printlevel &lt;/span&gt;&lt;span class="lit"&gt;1&lt;/span&gt;&lt;span class="pun"&gt;,&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"You are going to delimit the string with \"$opt_l\"\n"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $delim_chr &lt;/span&gt;&lt;span class="pun"&gt;=&lt;/span&gt;&lt;span class="pln"&gt; $opt_l&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="pun"&gt;};&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; $opt_e &lt;/span&gt;&lt;span class="pun"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="kwd"&gt;do&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;{&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="kwd"&gt;if&lt;/span&gt;&lt;span class="pun"&gt;(&lt;/span&gt;&lt;span class="pln"&gt;$opt_s&lt;/span&gt;&lt;span class="pun"&gt;)&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;{&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="kwd"&gt;die&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"Cannot specify BOTH env var and string\n"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;}&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; printlevel &lt;/span&gt;&lt;span class="lit"&gt;1&lt;/span&gt;&lt;span class="pun"&gt;,&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"Using Environment variable \"$opt_e\"\n"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $initial_str &lt;/span&gt;&lt;span class="pun"&gt;=&lt;/span&gt;&lt;span class="pln"&gt; $ENV&lt;/span&gt;&lt;span class="pun"&gt;{&lt;/span&gt;&lt;span class="pln"&gt;$opt_e&lt;/span&gt;&lt;span class="pun"&gt;};&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="pun"&gt;};&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; $opt_s &lt;/span&gt;&lt;span class="pun"&gt;&amp;amp;&amp;amp;&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="kwd"&gt;do&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;{&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; printlevel &lt;/span&gt;&lt;span class="lit"&gt;1&lt;/span&gt;&lt;span class="pun"&gt;,&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"Using String \"$opt_s\"\n"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; $initial_str &lt;/span&gt;&lt;span class="pun"&gt;=&lt;/span&gt;&lt;span class="pln"&gt; $opt_s&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="pun"&gt;};&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="pun"&gt;}&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="kwd"&gt;if&lt;/span&gt;&lt;span class="pun"&gt;(&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;(&lt;/span&gt;&lt;span class="pln"&gt;$&lt;/span&gt;&lt;span class="com"&gt;#ARGV != 1) and !$opt_e and !$opt_s){&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="kwd"&gt;die&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"Nothing to work with -- try $0 -h\n"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="pun"&gt;}&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;br /&gt;$what &lt;/span&gt;&lt;span class="pun"&gt;=&lt;/span&gt;&lt;span class="pln"&gt; shift &lt;/span&gt;&lt;span class="lit"&gt;@ARGV&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# Split path using the delimiter&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="lit"&gt;@dirs&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;=&lt;/span&gt;&lt;span class="pln"&gt; split&lt;/span&gt;&lt;span class="pun"&gt;(&lt;/span&gt;&lt;span class="str"&gt;/$delim_chr/&lt;/span&gt;&lt;span class="pun"&gt;,&lt;/span&gt;&lt;span class="pln"&gt; $initial_str&lt;/span&gt;&lt;span class="pun"&gt;);&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;br /&gt;$dest&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="lit"&gt;@newpath&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;=&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;();&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;LOOP&lt;/span&gt;&lt;span class="pun"&gt;:&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="kwd"&gt;foreach&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;(&lt;/span&gt;&lt;span class="lit"&gt;@dirs&lt;/span&gt;&lt;span class="pun"&gt;){&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="com"&gt;# Ensure the directory exists and is a directory&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="kwd"&gt;if&lt;/span&gt;&lt;span class="pun"&gt;(!&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;-&lt;/span&gt;&lt;span class="pln"&gt;e &lt;/span&gt;&lt;span class="pun"&gt;)&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;{&lt;/span&gt;&lt;span class="pln"&gt; printlevel &lt;/span&gt;&lt;span class="lit"&gt;1&lt;/span&gt;&lt;span class="pun"&gt;,&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"$_ does not exist\n"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="kwd"&gt;next&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;}&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="com"&gt;# If the directory is ., set $dot and go around again&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="kwd"&gt;if&lt;/span&gt;&lt;span class="pun"&gt;(&lt;/span&gt;&lt;span class="pln"&gt;$_ eq &lt;/span&gt;&lt;span class="str"&gt;'.'&lt;/span&gt;&lt;span class="pun"&gt;)&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;{&lt;/span&gt;&lt;span class="pln"&gt; $dot &lt;/span&gt;&lt;span class="pun"&gt;=&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="lit"&gt;1&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="kwd"&gt;next&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;}&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# &amp;nbsp; if ($_ ne `realpath $_`){&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; printlevel 2, "$_ becomes ".`realpath $_`."\n";&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# &amp;nbsp; }&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="kwd"&gt;undef&lt;/span&gt;&lt;span class="pln"&gt; $dest&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="com"&gt;#$_=Stdlib::realpath($_,$dest);&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="com"&gt;# Check for duplicates and dot path&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="kwd"&gt;foreach&lt;/span&gt;&lt;span class="pln"&gt; $adir &lt;/span&gt;&lt;span class="pun"&gt;(&lt;/span&gt;&lt;span class="lit"&gt;@newpath&lt;/span&gt;&lt;span class="pun"&gt;)&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;{&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="kwd"&gt;if&lt;/span&gt;&lt;span class="pun"&gt;(&lt;/span&gt;&lt;span class="pln"&gt;$_ eq $adir&lt;/span&gt;&lt;span class="pun"&gt;)&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;{&lt;/span&gt;&lt;span class="pln"&gt; &lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; printlevel &lt;/span&gt;&lt;span class="lit"&gt;2&lt;/span&gt;&lt;span class="pun"&gt;,&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"Duplicate: $_\n"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="kwd"&gt;next&lt;/span&gt;&lt;span class="pln"&gt; LOOP&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt; &lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="pun"&gt;}}&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; push &lt;/span&gt;&lt;span class="lit"&gt;@newpath&lt;/span&gt;&lt;span class="pun"&gt;,&lt;/span&gt;&lt;span class="pln"&gt; $_&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="pun"&gt;}&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="com"&gt;# Join creates a string from a list/array delimited by the first expression&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="kwd"&gt;print&lt;/span&gt;&lt;span class="pln"&gt; join&lt;/span&gt;&lt;span class="pun"&gt;(&lt;/span&gt;&lt;span class="pln"&gt;$delim_chr&lt;/span&gt;&lt;span class="pun"&gt;,&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="lit"&gt;@newpath&lt;/span&gt;&lt;span class="pun"&gt;)&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;.&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;(&lt;/span&gt;&lt;span class="pln"&gt;$dot &lt;/span&gt;&lt;span class="pun"&gt;?&lt;/span&gt;&lt;span class="pln"&gt; $delim_chr&lt;/span&gt;&lt;span class="pun"&gt;.&lt;/span&gt;&lt;span class="str"&gt;".\n"&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;:&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"\n"&lt;/span&gt;&lt;span class="pun"&gt;);&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;br /&gt;printlevel &lt;/span&gt;&lt;span class="lit"&gt;1&lt;/span&gt;&lt;span class="pun"&gt;,&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="str"&gt;"Thank you for using $0\n"&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="kwd"&gt;exit&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="kwd"&gt;sub&lt;/span&gt;&lt;span class="pln"&gt; printlevel &lt;/span&gt;&lt;span class="pun"&gt;{&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="kwd"&gt;my&lt;/span&gt;&lt;span class="pun"&gt;(&lt;/span&gt;&lt;span class="pln"&gt;$level&lt;/span&gt;&lt;span class="pun"&gt;,&lt;/span&gt;&lt;span class="pln"&gt; $string&lt;/span&gt;&lt;span class="pun"&gt;)&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;=&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="lit"&gt;@_&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="kwd"&gt;if&lt;/span&gt;&lt;span class="pun"&gt;(&lt;/span&gt;&lt;span class="pln"&gt;$opt_v &lt;/span&gt;&lt;span class="pun"&gt;&amp;gt;=&lt;/span&gt;&lt;span class="pln"&gt; $level&lt;/span&gt;&lt;span class="pun"&gt;)&lt;/span&gt;&lt;span class="pln"&gt; &lt;/span&gt;&lt;span class="pun"&gt;{&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="kwd"&gt;print&lt;/span&gt;&lt;span class="pln"&gt; STDERR $string&lt;/span&gt;&lt;span class="pun"&gt;;&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span class="pun"&gt;}&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="pun"&gt;}&lt;/span&gt;&lt;span class="pln"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/273898054558092691/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/ways-to-keep-from-duplicating-path.html#comment-form' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/273898054558092691'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/273898054558092691'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/ways-to-keep-from-duplicating-path.html' title='ways to keep from duplicating path variable in csh'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-136395657894006812</id><published>2010-10-11T13:14:00.001-05:00</published><updated>2010-11-01T13:13:18.362-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>"C/C++ Development Tooling" plug in Eclipse</title><content type='html'>It is weird that the official website of &lt;a href="http://www.eclipse.org/cdt/" target="_blank"&gt;CDT&lt;/a&gt; does not contain anything about how to integrate the CDT with an existing Eclipse, and so does its google search within the website. However, except the awkward "import project" method (at least, for me... I have tried several times on the username/password to ssh the remote server), the method mentioned &lt;a href="http://download.eclipse.org/tools/cdt/builds/7.0.0/I.I201006141710/index.html" target="_blank"&gt;here&lt;/a&gt; is much more straightforward. For more information, the Eclipse CDT &lt;a href="http://wiki.eclipse.org/CDT/User/DownloadCDT5.0" target="_blank"&gt;wiki&lt;/a&gt; is a nice place to go.&lt;br /&gt;&lt;br /&gt;The method is:&lt;br /&gt;&lt;br /&gt;1. Download the &lt;a href="http://download.eclipse.org/tools/cdt/builds/7.0.0/I.I201006141710/cdt-master-7.0.0-I201006141710.zip"&gt;master zip file&lt;/a&gt; and put it somewhere on your machine.&lt;br /&gt;2. Fire up Eclipse (The Platform Run-time 3.6 is minimum recommended)&lt;br /&gt;3. Help-&amp;gt;Install New Software...&lt;br /&gt;4. Add... in the master zip as an Archive site&lt;br /&gt;5. Under CDT Main Features select the one you want. C/C++ Development Tools is the main one. The SDK adds in the schemas and source for building extensions to the CDT. The C/C++ Development Platform is the Tools without the GNU toolchain support.&lt;br /&gt;6. You can install other neat things, including the Mylyn bridge, from the CDT Optional Features category.&lt;br /&gt;&lt;br /&gt;ps.&lt;br /&gt;the Pydev install web address is: http://pydev.org/updates/&lt;br /&gt;The EPIC for perl can be downloaded from: http://e-p-i-c.sf.net/updates. And it also need the ActivePerl (http://www.activestate.com/Products/activeperl/) for windows os.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/136395657894006812/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/cc-development-tooling-plug-in-eclipse.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/136395657894006812'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/136395657894006812'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/cc-development-tooling-plug-in-eclipse.html' title='&quot;C/C++ Development Tooling&quot; plug in Eclipse'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7547767991817464536</id><published>2010-10-05T14:06:00.001-05:00</published><updated>2010-11-01T13:15:39.636-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>void pointers</title><content type='html'>from comp.lang.c (&lt;a href="http://groups.google.com/group/comp.lang.c/browse_thread/thread/8f42cce6ecd8d85a?hl=en"&gt;click&lt;/a&gt;)&lt;br /&gt;======&lt;br /&gt;&lt;br /&gt;1st paste:&lt;br /&gt;&lt;br /&gt;steve wrote:&lt;br /&gt;&amp;gt; Hey guys,&lt;br /&gt;&amp;gt; I have a delemna which I can't figure out.&lt;br /&gt;&amp;gt; This is regarding "void pointers" and I confess, I really don't&lt;br /&gt;&amp;gt; understand them nearly enough to even understand what the problem is.&lt;br /&gt;&lt;br /&gt;A void pointer is an address of a region of memory (which may or may not&lt;br /&gt;be occupied).&amp;nbsp; It is an error to attempt to use a void value in an&lt;br /&gt;expression, hence why compilers will often warn you if you dereference a&lt;br /&gt;void pointer.&lt;br /&gt;(Note to the regulars: I'm probably not being perfectly accurate here,&lt;br /&gt;but I don't think c.l.c pedantry is what steve needs)&lt;br /&gt;(Note to steve: the correct spelling is dilemma)&lt;br /&gt;&lt;br /&gt;&amp;gt;&amp;nbsp;&amp;nbsp; void * params[5];&lt;br /&gt;&lt;br /&gt;This creates an array of 5 pointers to void.&amp;nbsp; It does not create an&lt;br /&gt;array of "void" (as you seem to think).&lt;br /&gt;&amp;gt;&amp;nbsp;&amp;nbsp; int int_param_values[5] = {1,2,3,4,5};&lt;br /&gt;&lt;br /&gt;&amp;gt;&amp;nbsp;&amp;nbsp; char **str_param_values;&lt;br /&gt;&lt;br /&gt;&amp;gt;&amp;nbsp;&amp;nbsp; str_param_values = malloc(5 * sizeof(char *));&lt;br /&gt;&amp;gt;&amp;nbsp;&amp;nbsp; str_param_values[0] = malloc(10 * sizeof(char));&lt;br /&gt;&amp;gt;&amp;nbsp;&amp;nbsp; strcpy(str_param_values[0], "hello");&lt;br /&gt;&lt;br /&gt;&amp;gt;&amp;nbsp;&amp;nbsp; double dbl_param_values[5] = {1.1, 2.2, 3.3};&lt;br /&gt;&lt;br /&gt;This creates an array of int, an array of char *, and an array of&lt;br /&gt;double, and initialises them in various ways.&lt;br /&gt;Note two things: firstly, it would probably make more sense for&lt;br /&gt;str_param_values to be an array of 5 char *, and allocated on the stack,&lt;br /&gt;with&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; char *str_param_values[5];&lt;br /&gt;There is no obvious need for it to be on the heap.&lt;br /&gt;Secondly, you have not tested the return value of malloc() in either of&lt;br /&gt;these calls; I realise this is only example code (incidentally, you will&lt;br /&gt;get more informative answers if you post actual code; then we know what&lt;br /&gt;you're trying to achieve!) but nonetheless it bears pointing out.&lt;br /&gt;&lt;br /&gt;&amp;gt; I can then assign my data values, to the array,&lt;br /&gt;&amp;gt; like so:&lt;br /&gt;&amp;gt;&amp;nbsp;&amp;nbsp; params[indx] = (void*)int_param_values[ndx];&lt;br /&gt;&lt;br /&gt;This is casting an int to a void *.&amp;nbsp; This is generally incorrect as an&lt;br /&gt;int is not a pointer type.&amp;nbsp; It just so happens that you are, IIRC,&lt;br /&gt;allowed to do this by a special provision to allow the use of integer&lt;br /&gt;expressions as pointers.&amp;nbsp; In this case this is clearly not what you are&lt;br /&gt;doing as, for instance, params[0] is now (void *)1; this is now a&lt;br /&gt;pointer to the memory with address 1, which probably isn't even mapped&lt;br /&gt;in your program's address space (if you're on a memory managed&lt;br /&gt;architecture.&amp;nbsp; On, say, an embedded system you might want to do this).&lt;br /&gt;&lt;br /&gt;&amp;gt;&amp;nbsp;&amp;nbsp; params[indx] = (void*)str_param_values[ndx];&lt;br /&gt;&lt;br /&gt;This is casting a char * to a void *.&amp;nbsp; This is allowed because both are&lt;br /&gt;pointer types.&amp;nbsp; params[indx] now points to the first character of&lt;br /&gt;str_param_values[ndx].&lt;br /&gt;&lt;br /&gt;&amp;gt; These two methods compile just fine and work as expected.&lt;br /&gt;&amp;gt; However, this statement will not compile:&lt;br /&gt;&amp;gt;&amp;nbsp;&amp;nbsp; params[indx] = (void*)dbl_param_values[ndx];&lt;br /&gt;&lt;br /&gt;This is casting a double to a void *.&amp;nbsp; This is not allowed; a double is&lt;br /&gt;not the same size as, nor anything like, a void *.&amp;nbsp; Unlike an int it&lt;br /&gt;cannot even reasonably be interpreted as an address; what location in&lt;br /&gt;memory would (void *)0.5 point to?&amp;nbsp; It's just silly really!&lt;br /&gt;&lt;br /&gt;&amp;gt; and generates this compiler error:&lt;br /&gt;&lt;br /&gt;&amp;gt; "...cast from 'double' to 'pointer to void' is illegal"&lt;br /&gt;&lt;br /&gt;Quite right too.&lt;br /&gt;&lt;br /&gt;&amp;gt; When it's all said and done, the idea is to pass the data referred to&lt;br /&gt;&amp;gt; in the array as function parameters,&lt;br /&gt;&amp;gt; like so:&lt;br /&gt;&lt;br /&gt;&amp;gt;&amp;nbsp;&amp;nbsp; MyFunction(params[0], params[1], etc.);&lt;br /&gt;&lt;br /&gt;There are two appropriate methods I can think of.&amp;nbsp; One is to use&lt;br /&gt;varargs; if the function's first argument gives it some way of deducing&lt;br /&gt;the types of the remaining arguments, it can do so.&amp;nbsp; This is for&lt;br /&gt;instance how the *printf() family of functions work.&lt;br /&gt;&lt;br /&gt;The other is to use void *, but populate it not with the data themselves&lt;br /&gt;but with pointers to them; for instance your doubles would become&lt;br /&gt;something like:&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; params[indx] = (void *)&amp;amp;dbl_param_values[ndx];&lt;br /&gt;where we assign the /address/ of the double to the pointer; we are now&lt;br /&gt;casting a double * to a void *, which makes much more sense as both are&lt;br /&gt;pointer types.&lt;br /&gt;&lt;br /&gt;One question I do have: given your function prototype as you have it,&lt;br /&gt;where the only arguments are the params[] elements, how does the&lt;br /&gt;function know to what the pointers refer (i.e., whether you have used an&lt;br /&gt;int, a double, a char *, or whatever).&lt;br /&gt;If, of course, it is simply, say, printing their addresses, it need not&lt;br /&gt;know; but if it is using their values, it will have to be told, since&lt;br /&gt;not only does it not know their true types, it doesn't even know their&lt;br /&gt;sizes, and a pointer without size information is not much use.&lt;br /&gt;&lt;br /&gt;Note also that you cannot make an array of void and store the values&lt;br /&gt;(ints, doubles etc.) in that, because void has no storage size.&lt;br /&gt;&lt;br /&gt;Perhaps the real solution to your problems, however, is to use a struct&lt;br /&gt;or union.&lt;br /&gt;&lt;br /&gt;I can't really give any more specific advice without some information as&lt;br /&gt;to what you're trying to achieve.&lt;br /&gt;&lt;br /&gt;-Edward&lt;br /&gt;==========&lt;br /&gt;&lt;br /&gt;2nd paste:&lt;br /&gt;&lt;br /&gt;Hey Ed,&lt;br /&gt;thanks for your indepth reply.&lt;br /&gt;Very helpful.&lt;br /&gt;&lt;br /&gt;&amp;gt; (Note to steve: the correct spelling is dilemma)&lt;br /&gt;&lt;br /&gt;Sorry for that.&lt;br /&gt;I'm one of those people prone to typos and misspelling.&lt;br /&gt;I should have run spell check, I usually do.&lt;br /&gt;&lt;br /&gt;&lt;snip&gt;&lt;br /&gt;&amp;gt; &amp;gt;&amp;nbsp;&amp;nbsp; void * params[5];&lt;br /&gt;&lt;br /&gt;&amp;gt; This creates an array of 5 pointers to void.&amp;nbsp; It does not create an&lt;br /&gt;&amp;gt; array of "void" (as you seem to think).&amp;gt;&amp;nbsp;&amp;nbsp; int int_param_values[5] = {1,2,3,4,5};&lt;br /&gt;&lt;/snip&gt;&lt;br /&gt;&lt;br /&gt;No, I get that.&lt;br /&gt;My understanding was that it was creating an "array of 5 pointers to&lt;br /&gt;void".&lt;br /&gt;Which I then intended to populate with the addresses of the variables.&lt;br /&gt;&lt;br /&gt;&lt;snip&gt;&lt;br /&gt;&amp;gt; Note two things: firstly, it would probably make more sense for&lt;br /&gt;&amp;gt; str_param_values to be an array of 5 char *, and allocated on the stack,&lt;br /&gt;&amp;gt; with&lt;br /&gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; char *str_param_values[5];&lt;br /&gt;&lt;/snip&gt;&lt;br /&gt;&lt;br /&gt;Actually, I did try that.&lt;br /&gt;It did not produce the result I was hoping for.&lt;br /&gt;&lt;br /&gt;&lt;snip&gt;&lt;br /&gt;&lt;br /&gt;&amp;gt; This is casting a double to a void *.&amp;nbsp; This is not allowed; a double is&lt;br /&gt;&amp;gt; not the same size as, nor anything like, a void *.&amp;nbsp; Unlike an int it&lt;br /&gt;&amp;gt; cannot even reasonably be interpreted as an address; what location in&lt;br /&gt;&amp;gt; memory would (void *)0.5 point to?&amp;nbsp; It's just silly really!&lt;br /&gt;&lt;br /&gt;Clearly I'm wrong here, but, I was making the 'assumption' that a&lt;br /&gt;"pointer to void" was just that,&lt;br /&gt;a pointer to the address of a variable of an undertermined type.&lt;br /&gt;Regardless of the size of the variable.&lt;br /&gt;On a given system, are not addresses the same size ?&lt;br /&gt;&lt;br /&gt;What I'm after here, is a "generic" mechanism for holding addresses of&lt;br /&gt;mixed variable types.&lt;br /&gt;i.e.: an array of addresses.&lt;br /&gt;Be they of type int, or char, or double, etc.&lt;br /&gt;&lt;br /&gt;What I'm (really) after here is to construct a 'generic mechanism' for&lt;br /&gt;calling functions within DLLs at RunTime.&lt;br /&gt;These DLLs, their Functions and Parameters passed are not known at&lt;br /&gt;compile time.&lt;br /&gt;&lt;br /&gt;Research indicated that void pointers was the way to do this.&lt;br /&gt;&lt;br /&gt;Suggestions ?&lt;br /&gt;&lt;br /&gt;Steve&amp;nbsp;&lt;/snip&gt;&lt;br /&gt;==========&lt;br /&gt;&lt;br /&gt;3rd paste:&lt;br /&gt;&lt;br /&gt;steve wrote:&lt;br /&gt;&amp;gt;&amp;gt; Note two things: firstly, it would probably make more sense for&lt;br /&gt;&amp;gt;&amp;gt; str_param_values to be an array of 5 char *, and allocated on the stack,&lt;br /&gt;&amp;gt;&amp;gt; with&lt;br /&gt;&amp;gt;&amp;gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; char *str_param_values[5];&lt;br /&gt;&amp;gt; &lt;br /&gt;&lt;br /&gt;&amp;gt; Actually, I did try that.&lt;br /&gt;&amp;gt; It did not produce the result I was hoping for.&lt;br /&gt;&lt;br /&gt;Curious.&amp;nbsp; It certainly should have.&lt;br /&gt;&lt;br /&gt;&amp;gt;&amp;gt; This is casting a double to a void *.&amp;nbsp; This is not allowed; a double is&lt;br /&gt;&amp;gt;&amp;gt; not the same size as, nor anything like, a void *.&amp;nbsp; Unlike an int it&lt;br /&gt;&amp;gt;&amp;gt; cannot even reasonably be interpreted as an address; what location in&lt;br /&gt;&amp;gt;&amp;gt; memory would (void *)0.5 point to?&amp;nbsp; It's just silly really!&lt;br /&gt;&lt;br /&gt;&amp;gt; Clearly I'm wrong here, but, I was making the 'assumption' that a&lt;br /&gt;&amp;gt; "pointer to void" was just that,&lt;br /&gt;&amp;gt; a pointer to the address of a variable of an undertermined type.&lt;br /&gt;&amp;gt; Regardless of the size of the variable.&lt;br /&gt;&amp;gt; On a given system, are not addresses the same size ?&lt;br /&gt;&lt;br /&gt;Your assumption is valid; the problem is that you weren't putting a&lt;br /&gt;pointer to the double into the void *, you were trying to put the double&lt;br /&gt;itself into the void *.&amp;nbsp; As mentioned elsewhere in the thread, the '&amp;amp;'&lt;br /&gt;operator is what you're looking for.&lt;br /&gt;&lt;br /&gt;&amp;gt; What I'm after here, is a "generic" mechanism for holding addresses of&lt;br /&gt;&amp;gt; mixed variable types.&lt;br /&gt;&amp;gt; i.e.: an array of addresses.&lt;br /&gt;&amp;gt; Be they of type int, or char, or double, etc.&lt;br /&gt;&lt;br /&gt;&amp;gt; What I'm (really) after here is to construct a 'generic mechanism' for&lt;br /&gt;&amp;gt; calling functions within DLLs at RunTime.&lt;br /&gt;&amp;gt; These DLLs, their Functions and Parameters passed are not known at&lt;br /&gt;&amp;gt; compile time.&lt;br /&gt;&lt;br /&gt;&amp;gt; Research indicated that void pointers was the way to do this.&lt;br /&gt;&lt;br /&gt;Firstly, I can't think of a good reason why you would want to do this.&lt;br /&gt;It sounds as though you've come up with some idea for a 'generic&lt;br /&gt;mechanism' without actually having any use cases in mind.&lt;br /&gt;Besides, linking against ill-defined interfaces is a bad idea.&amp;nbsp; If&lt;br /&gt;you're trying to define functionality at runtime, an embedded scripting&lt;br /&gt;language is the way to go.&lt;br /&gt;But if you /really/ want this, void pointers will do it - but you have&lt;br /&gt;to remember that what you assign to the void pointer has to, itself, be&lt;br /&gt;a pointer too (hence why your double to void * cast wasn't valid).&amp;nbsp; Also&lt;br /&gt;remember that if you pass a pointer, the callee can modify the&lt;br /&gt;referenced object.&amp;nbsp; This may not be what you want.&lt;br /&gt;What it /really/ sounds like is that you want function overloading&lt;br /&gt;and/or dynamic types - in other words, you're trying to make C more like&lt;br /&gt;C++ or Java.&amp;nbsp; From my perspective that seems like a silly thing to do:&lt;br /&gt;why would you want C++ in the first place - and if you do, you know&lt;br /&gt;where to find it ;)&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;-Edward&lt;br /&gt;==========&lt;br /&gt;&lt;br /&gt;&amp;nbsp;BTW, the &lt;a href="http://dev-null.chu.cam.ac.uk/"&gt;website&lt;/a&gt; of Edward is worth viewing.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7547767991817464536/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/void-pointers.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7547767991817464536'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7547767991817464536'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/void-pointers.html' title='void pointers'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-240774047404021233</id><published>2010-10-03T14:57:00.000-05:00</published><updated>2010-10-03T14:57:58.216-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>visualize resume</title><content type='html'>两篇讲美化简历的日志，从第一篇阮一峰的&lt;a href="http://www.ruanyifeng.com/blog/2010/09/infographic_resume.html"&gt;日志&lt;/a&gt;可以链接到第二篇(&lt;a href="http://www.vizualresume.com/10-free-resume-templates-257.html"&gt;click&lt;/a&gt;)。乍一看心里还在想，若要使能这么做简历简直太炫了。直到看到英文那篇日志最后的评论，才算是豁然开朗。转贴到这里。&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;All of them suck.&lt;/b&gt; It’s nice eyecandy, but as a recruiter I wouldn’t want to waste my time to read them. My eyes would be hopping around without focus and I would be confused where to read next.&lt;br /&gt;&lt;br /&gt;Evalotta Lamm's one would be the best of them if she had used only one column and a classic list from top to bottom. All the others that use two or more columns or completely defy any resumé standard are crap.&lt;br /&gt;&lt;br /&gt;Imagine what Albert Lo's, Luc Pestille's and Sarah Parmenter's example looks like if the recruiter has to copy/print the resumé in black and white…&lt;br /&gt;&lt;br /&gt;Also never ever make your name stand out in a huge text size, come down from your high horse. No boss cares about someone that proudly displays his name, but has little experience or bad works. Even with a succesful career, you don’t need to show your name in an egoistical, arrogant way.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;Playing around with a resumé design is only for people who can't come up with a convincing portfolio. Be creative in your works, keep your resumé simple and boring.&lt;/b&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/240774047404021233/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/visualize-resume.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/240774047404021233'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/240774047404021233'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/visualize-resume.html' title='visualize resume'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3776429895037419427</id><published>2010-09-24T15:44:00.000-05:00</published><updated>2010-09-24T15:44:15.159-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Setup “monitor” mode and disable CRC checking</title><content type='html'>1. Live Monitoring and Writing Raw 802.11 Packets — From madwifi README&lt;br /&gt;&lt;br /&gt;The driver can be used in a live “monitor” mode, by creating a monitor&lt;br /&gt;VAP and sending packets to it. All packets sent to a monitor mode VAP&lt;br /&gt;will bypass any state machine.&lt;br /&gt;&lt;br /&gt;To create a monitor VAP, use:&lt;br /&gt;&lt;br /&gt;wlanconfig ath1 create wlandev wifi0 wlanmode monitor&lt;br /&gt;ifconfig ath1 up&lt;br /&gt;&lt;br /&gt;Finally, you can choose to receive packets on ath1 in several different&lt;br /&gt;packet formats:&lt;br /&gt;&lt;br /&gt;echo ’801′ &amp;gt; /proc/sys/net/ath1/dev_type # only 802.11 headers&lt;br /&gt;echo ’802′ &amp;gt; /proc/sys/net/ath1/dev_type # prism2 headers&lt;br /&gt;echo ’803′ &amp;gt; /proc/sys/net/ath1/dev_type # radiotap headers&lt;br /&gt;echo ’804′ &amp;gt; /proc/sys/net/ath1/dev_type # atheros descriptors&lt;br /&gt;&lt;br /&gt;2. Disable CRC and PHY error checking&lt;br /&gt;&lt;br /&gt;Allows monitor VAPs to process frames that have been marked&lt;br /&gt;as errors by the hardware. Two new sysctl entries are created,&lt;br /&gt;“monitor_crc_errors” and “monitor_phy_errors”. When these are set&lt;br /&gt;to 1, the monitor mode interface will pass through frames that have&lt;br /&gt;been marked with HAL_RXERR_CRC and HAL_RXERR_PHY respectively.&lt;br /&gt;Default is to maintain current behaviour – no rx errors are passed&lt;br /&gt;through.&lt;br /&gt;&lt;br /&gt;echo ’1′ &amp;gt; /proc/sys/net/ath1/monitor_crc_errors # Disable CRC error checking&lt;br /&gt;&lt;br /&gt;echo ’1′ &amp;gt; /proc/sys/net/ath1/monitor_phy_errors # Disable PHY error checking</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3776429895037419427/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/setup-monitor-mode-and-disable-crc.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3776429895037419427'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3776429895037419427'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/setup-monitor-mode-and-disable-crc.html' title='Setup “monitor” mode and disable CRC checking'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-935115730830904378</id><published>2010-09-24T14:01:00.000-05:00</published><updated>2010-09-24T14:01:37.218-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>some helpful webpages</title><content type='html'>Good Sites for Researchers and Students (&lt;a href="http://www.cs.ucr.edu/%7Emichalis/techwriting.html"&gt;click&lt;/a&gt;)&lt;br /&gt;&lt;br /&gt;Especially, there are something really worth reading:&lt;br /&gt;Graduate School Survival Guide (&lt;a href="http://faculty.washington.edu/wpratt/advice.htm"&gt;click&lt;/a&gt;)&lt;br /&gt;Writing Technical Articles (&lt;a href="http://www.cs.columbia.edu/%7Ehgs/etc/writing-style.html"&gt;cllick&lt;/a&gt;)&lt;br /&gt;Networking on the Network: A Guide to Professional Skills for PhD Student (&lt;a href="http://www.cs.uwyo.edu/%7Ejlc/courses/5000/networking_Agre.pdf"&gt;click&lt;/a&gt;)&lt;br /&gt;Useful Things to Know About Ph. D. Thesis Research (&lt;a href="http://www.eecs.harvard.edu/%7Ehtk/thesis.htm"&gt;click&lt;/a&gt;)&lt;br /&gt;Resources for Ph.D. Students (&lt;a href="http://enl.usc.edu/%7Ecs694/research_resources.html"&gt;click&lt;/a&gt;)&lt;br /&gt;Sources of good advice (&lt;a href="http://www.cs.bu.edu/fac/byers/advice.html"&gt;click&lt;/a&gt;)&lt;br /&gt;So long, and thanks for the Ph.D. (for cs major) (&lt;a href="http://www.cs.unc.edu/%7Eazuma/hitch4.html"&gt;click&lt;/a&gt;)</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/935115730830904378/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/some-helpful-webpages.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/935115730830904378'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/935115730830904378'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/some-helpful-webpages.html' title='some helpful webpages'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8613586506408422380</id><published>2010-09-20T19:08:00.002-05:00</published><updated>2010-09-20T19:08:15.715-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Today's word: tweak</title><content type='html'>&lt;ul&gt;&lt;li class="dct-em"&gt; &lt;div class="dct-em"&gt; &lt;span class="dct-tt"&gt;Twist or pull (something) sharply&lt;/span&gt; &lt;/div&gt;&lt;ul&gt;&lt;li class="dct-ee"&gt; &lt;div class="dct-ee"&gt; &lt;span class="dct-tt"&gt;he &lt;em&gt;tweaked&lt;/em&gt; the boy's ear&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;li class="dct-em"&gt; &lt;div class="dct-em"&gt; &lt;span class="dct-tt"&gt;Improve (a mechanism or system) by making fine adjustments to it&lt;/span&gt; &lt;/div&gt;&lt;ul&gt;&lt;li class="dct-ee"&gt; &lt;div class="dct-ee"&gt; &lt;span class="dct-tt"&gt;engineers &lt;em&gt;tweak&lt;/em&gt; the car's operating systems during the race&lt;/span&gt; &lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/li&gt;&lt;/ul&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8613586506408422380/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/todays-word-tweak.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8613586506408422380'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8613586506408422380'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/todays-word-tweak.html' title='Today&apos;s word: tweak'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-36887412337980064</id><published>2010-09-17T23:18:00.002-05:00</published><updated>2010-11-01T13:15:11.631-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>Eclipse, x64 or x86?</title><content type='html'>64位的系统，才知道自己的浏览器是32位的……谢谢国家，谢谢oracle，谢谢java installer。折腾了半天的64位eclipse，修了这个错修那个错，就如同这个帖子一样（&lt;a href="http://www.satya-weblog.com/2010/07/eclipse-error-failed-to-load-the-jni-shared-library-cprogram-files-x86javajre6binclientjvm-dll.html"&gt;here&lt;/a&gt;）。是下面的一个回复帮了我～&lt;br /&gt;&lt;br /&gt;Nietvoordekat: "I have a 64 bit Windows 7, didn't check if I had the 32 or 64 bit Java installed. Easy and fast check to do, is whether or not your Java folder is in Program Files or Program Files(x86). If you've got both of these maps and it's in the x86 one, you'll need the 32 bit download. You might wanna move that tip up from the bottom to the top, it shouldn't take more then 10 secs to check."</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/36887412337980064/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/eclipse-for-java-and-python.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/36887412337980064'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/36887412337980064'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/eclipse-for-java-and-python.html' title='Eclipse, x64 or x86?'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-9000172795754446200</id><published>2010-09-14T18:23:00.001-05:00</published><updated>2010-09-14T18:23:52.498-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>20100914</title><content type='html'>strcat&lt;br /&gt;save&lt;br /&gt;dlmwrite&lt;br /&gt;some basic sorting algorthms&lt;br /&gt;&lt;br /&gt;TODO: ghost and tcpdump.&lt;br /&gt;where the CSI is in the sourcecode.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/9000172795754446200/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/20100914.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/9000172795754446200'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/9000172795754446200'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/20100914.html' title='20100914'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7037976202973638868</id><published>2010-09-09T20:16:00.000-05:00</published><updated>2011-02-28T14:21:26.807-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>today's update</title><content type='html'>今天学到的东西&lt;br /&gt;rm&lt;br /&gt;scp&lt;br /&gt;mkdir&lt;br /&gt;mv&lt;br /&gt;...&lt;br /&gt;data quota exceeded&lt;br /&gt;some basic perl rules&lt;br /&gt;&lt;br /&gt;待学的东西&lt;br /&gt;vim&lt;br /&gt;tcpdump&lt;br /&gt;&lt;br /&gt;实验室工作今儿到此为止。开始写作业了～</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7037976202973638868/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/todays-update.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7037976202973638868'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7037976202973638868'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/todays-update.html' title='today&apos;s update'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5091065804366012338</id><published>2010-09-08T11:18:00.001-05:00</published><updated>2010-09-08T11:20:18.815-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>setup wireless LAN among Ubuntu linux OS</title><content type='html'>Fix Wireless Ad-Hoc in GUI [&lt;a href="http://www.ubuntugeek.com/creating-an-adhoc-host-with-ubuntu.html"&gt;click&lt;/a&gt;]&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Wireless Extensions CLI tools&lt;br /&gt;This process is often used as the fall back position if the gui tools fail to work. The following example uses eth1 for the wifi interface though this may be wlan0, ath0 or something else in your case.&lt;br /&gt;&lt;br /&gt;Preparation:&lt;br /&gt;Ensure that network manager has been stopped and then bring the interface down.&lt;br /&gt;&lt;b&gt;sudo service network-manager stop&lt;/b&gt;&lt;br /&gt;&lt;b&gt;sudo ifconfig eth1 down&lt;/b&gt;&lt;br /&gt;&lt;b&gt;iwconfig (or ifconfig)&lt;/b&gt; //look up if there is anything abnormal&lt;br /&gt;&lt;b&gt;sudo dhclient eth1&lt;/b&gt; &amp;nbsp;////Bring the interface back up&lt;br /&gt;&lt;br /&gt;Configuration:&lt;br /&gt;&lt;b&gt;sudo iwconfig eth1 mode ad-hoc&lt;/b&gt; &amp;nbsp;//Switch the card into ad hoc mode&lt;br /&gt;&lt;b&gt;*sudo iwconfig eth1 channel 4&lt;/b&gt; &amp;nbsp;//Set the channel/frequency that you want to use.&lt;br /&gt;&lt;b&gt;sudo iwconfig eth1 essid 'name'&lt;/b&gt; &amp;nbsp;//Add the name (ssid) for the network you want to create/join. Use single quotes if there is a space in the name.&lt;br /&gt;&lt;b&gt;*sudo iwconfig eth1 key 1234567890&lt;/b&gt; &amp;nbsp;//Add a WEP encryption key&lt;br /&gt;&lt;b&gt;*sudo dhclient eth1&lt;/b&gt; &amp;nbsp;//Start dhclient to get an address&lt;br /&gt;&lt;b&gt;sudo ifconfig eth1 169.254.34.2 &lt;/b&gt;&amp;nbsp;//If you want to do it manually, you will have to make up an IP address.&lt;br /&gt;&lt;br /&gt;You should now be connected to the ad hoc network. Use the iwconfig command to view the cell being used. This must match the same cell on the other PCs that you want to connect to.&lt;br /&gt;&lt;br /&gt;Testing:&lt;br /&gt;&lt;b&gt;ping 169.254.34.2&lt;/b&gt; &amp;nbsp;//Once you have two or more computers connected to the ad hoc network, all of them showing the same cell number and having different IP addresses, then try pinging one from the others. If that doesn't work then try specifying the interface name along with the address.&lt;br /&gt;&lt;b&gt;ping -I eth1 169.254.34.2&lt;/b&gt; &amp;nbsp;//If you have more than one interface with link-local addresses there can be some routing confusion, so I recommend that you bring down these unused interfaces while connected to non-DHCP networks. If the other interfaces are all on DHCP networks, such as in the case of InternetConnectionSharing this is not necessary.&lt;br /&gt;sudo ifdown eth0&lt;br /&gt;&lt;br /&gt;Example Interfaces File:&lt;br /&gt;Currently Network Manager does not support static address settings and Network-Admin does not support ad hoc networks. So instead we can configure the network in the /etc/network/interfaces file. The following is an example.&lt;br /&gt;&lt;br /&gt;auto lo&lt;br /&gt;iface lo inet loopback&lt;br /&gt;&lt;br /&gt;auto eth1&lt;br /&gt;iface eth1 inet static&lt;br /&gt;wireless-mode ad-hoc&lt;br /&gt;wireless-channel 4&lt;br /&gt;wireless-essid 'name'&lt;br /&gt;wireless-key 1234567890&lt;br /&gt;address 192.168.0.2&lt;br /&gt;netmask 255.255.255.0&lt;br /&gt;gateway 192.168.0.1&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;ps. some useful command:&lt;br /&gt;ifconfig [&lt;a href="http://www.faqs.org/docs/linux_network/x-087-2-iface.ifconfig.html"&gt;click&lt;/a&gt;] &amp;nbsp;iwconfig [&lt;a href="http://gd.tuwien.ac.at/linuxcommand.org/man_pages/iwconfig8.html"&gt;click&lt;/a&gt;]&lt;br /&gt;wlanconfig [&lt;a href="http://linux.die.net/man/8/wlanconfig"&gt;click&lt;/a&gt;] &amp;nbsp;tcpdump [&lt;a href="http://www.tcpdump.org/tcpdump_man.html"&gt;click&lt;/a&gt;]</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5091065804366012338/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/setup-wireless-lan-among-ubuntu-linux.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5091065804366012338'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5091065804366012338'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/setup-wireless-lan-among-ubuntu-linux.html' title='setup wireless LAN among Ubuntu linux OS'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-879664796634763709</id><published>2010-09-08T01:57:00.000-05:00</published><updated>2010-09-08T01:57:02.162-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>rssi and snr</title><content type='html'>In telecommunications, received signal strength indicator (RSSI) is a measurement of the power present in a received radio signal. RSSI is generic radio receiver technology metric, which is usually invisible to the user of device containing the receiver, but is directly known to users of wireless networking of IEEE 802.11 protocol family. RSSI is often done in the intermediate frequency (IF) stage before the IF amplifier. In zero-IF systems, it is done in the baseband signal chain, before the baseband amplifier. RSSI output is often a DC analog level. It can also be sampled by an internal ADC and the resulting codes available directly or via peripheral or internal processor bus.&lt;br /&gt;&lt;br /&gt;"RSSI" values have unspecified unit, ie. their meaning depends on manufacturer. Some report as dBm, some as a percent, some even in milliwatts. There is no standard. Also, the proper way to find SNR *is* to subtract dB values, as dB are logarithmic and hence the difference of logs is the same as a ratio without log. In other words, if a signal has amplitude 1 and noise is 0.5, the SNR is (1/0.5) = 2, but if the signal is measured as being at (say) -12 dB and noise floor is -16 dB, the SNR is (-12-(-16)) = 4 dB.&lt;br /&gt;&lt;br /&gt;Moreover, link quality depends on many other factors and the signal-to-noise ratio (computed from rssi and noise floor) is only one such factor.&lt;br /&gt;&lt;br /&gt;And finally, finding SNR of a wifi signal by subtracting noise floor from the rssi is of course only applicable if both values are reported in a log/dB scale. Otherwise if they are linear you'd need to use ratio (as you said) and if they are some other sort of scale then who knows what needs to be used!</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/879664796634763709/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/rssi-and-snr.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/879664796634763709'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/879664796634763709'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/rssi-and-snr.html' title='rssi and snr'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8998071557198164915</id><published>2010-09-07T21:45:00.000-05:00</published><updated>2010-09-07T21:45:46.998-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>nice advice (by prof. Elaine Rich)</title><content type='html'>&lt;div class="Section1"&gt;&lt;h1 align="center" style="text-align: center;"&gt;&lt;span style="font-family: Arial;"&gt;The Computer Sciences Department Rules to Live By&lt;/span&gt;&lt;/h1&gt;&lt;div align="center" class="MsoNormal" style="text-align: center;"&gt;&lt;span style="font-family: Arial;"&gt;November 2, 2008&lt;/span&gt;&lt;/div&gt;&lt;span style="font-family: Arial;"&gt;The Computer Sciences Department is a community of scholars and students. Each of us thrives if the community thrives. Each of us thus has an individual responsibility to strive, not just for our own goals, but for the goals of the larger community. In this document, &lt;span class="GramE"&gt;a group of the faculty have&lt;/span&gt; laid out a set of ground rules designed to make our department the kind of community in which we all want to live. If a professor in one of your classes has pointed you here, you should view this document as part of the syllabus for that class. &lt;/span&gt;&lt;br /&gt;&lt;h2&gt;&lt;span style="font-family: Arial;"&gt;As a Student, What You Can Expect from Your Department&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;span style="font-family: Arial;"&gt;I. The CS Curriculum&lt;/span&gt;&lt;/h3&gt;&lt;ul type="disc"&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;The &lt;span class="GramE"&gt;faculty as a whole have&lt;/span&gt; the      responsibility to formulate a curriculum that will prepare you for a      lifetime of work in the field of computing. Yes, some of what you learn      will get you a job right away. Some of what you learn may seem more      esoteric and less essential. But remember that the &lt;span class="GramE"&gt;faculty      have&lt;/span&gt; lived through a lot of changes in the field. They've all had      to learn new ideas, new programming language, new architectures, and new      applications many times (and without the aid of classes or textbooks).      They've got a lot of first hand understanding of the fundamental concepts      that make it easiest to adapt as new things come along. Trust a bit and      take advantage of this expertise. Try to like every class you take. &lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span style="font-family: Arial;"&gt;II. Each Class that You Take&lt;/span&gt;&lt;/h3&gt;&lt;ul type="disc"&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;The most important thing that each of your teachers should give you      is a guided tour through the subject matter of the class. After all, you      can go to the bookstore, buy books, read them, and write some code without      ever signing up for a class. But, whenever you do sign up for a class, you      have the right to expect that the instructor has read a lot of books,      solved a lot of problems, and then chosen, from all of that material, 14      weeks of the most important ideas presented in the clearest fashion. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;You have the right to expect that every instructor will show up for      class on time and be prepared to conduct the class. &lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span style="font-family: Arial;"&gt;III. Responsiveness from the Instructional Staff&lt;/span&gt;&lt;/h3&gt;&lt;ul type="disc"&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;In most of your CS classes, you will have an instructor, one or      more TAs, and possibly a set of proctors. &lt;span class="GramE"&gt;This group of      people, working as a team, have&lt;/span&gt; the responsibility to do everything      they can to help you learn. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Your instructor, TAs, and proctors should treat you with respect      and encourage you to seek help when you need it. &lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span style="font-family: Arial;"&gt;IV. Grades&lt;/span&gt;&lt;/h3&gt;&lt;ul type="disc"&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Publication of the Grading Policy: You have a right to be told, within      the first four days of the semester, how grades in each class will be      determined. You will be told what the basis of the grade will be and how      much weight will be assigned to each component of the grade. In some      classes, you may be told even more, for example, what numeric scores will      be assigned what letter &lt;span class="GramE"&gt;grades.&lt;/span&gt; But keep in mind      that this isn't always possible. Classes that use different exams each      semester may have very different score distributions from one semester to      the next so it isn't possible to know in advance what thresholds make      sense. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Fairness: You have a right to expect that grades will be assigned      fairly. Every student who turns in the same quality of work will receive      the same grade. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Feedback: You have a right to see your graded work and to      understand what, if &lt;span class="GramE"&gt;anything,&lt;/span&gt; was wrong with the      work you submitted. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Punctuality: You have a right to expect that exams and assignments      will be graded in a timely fashion. It's hard to be more specific on this      since the amount of time required to do a good job of grading depends so      heavily on the kind of work and the staffing level of the class. One      concrete thing you should expect is that you will have gotten some      substantive feedback on your performance in each class before the Q drop      deadline. &lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h2&gt;&lt;span style="font-family: Arial;"&gt;As a Student, What the Department Can Expect from You&lt;/span&gt;&lt;/h2&gt;&lt;h3&gt;&lt;a href="" name="honesty"&gt;&lt;span style="font-family: Arial;"&gt;I. Academic Honesty&lt;/span&gt;&lt;/a&gt;&lt;/h3&gt;&lt;div class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;The University and the Department are committed to preserving the reputation of your degree. It means a lot to you. In order to guarantee that every degree means what it says it means, we must enforce a strict policy that guarantees that the work that you turn in is your own and that the grades you receive measure your personal achievements in your classes: &lt;/span&gt;&lt;/div&gt;&lt;span style="font-family: Arial;"&gt;Every piece of work that you turn in with your name on it must be yours and yours alone unless explicitly allowed by an instructor in a particular class. Specifically, unless otherwise authorized by an instructor: &lt;/span&gt;&lt;br /&gt;&lt;ul type="disc"&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Students may not discuss their      work with anyone except the instructor and other members of the      instructional staff (TA, Section Leader or Lab Proctor). &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Students may not acquire from any      source (e.g., another student or an internet site) a partial or complete      solution to a problem or project that has been assigned. &lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;div class="MsoNormal"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;You are responsible for complying with this policy in two ways: &lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="margin-left: 0.75in; text-indent: -0.25in;"&gt;&lt;span style="font-family: Arial;"&gt;1.&lt;span style="font: normal normal normal 7pt/normal 'Times New Roman';"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-family: Arial;"&gt;You must not turn in work that is not yours, except as expressly permitted by the instructor of each course. &lt;/span&gt;&lt;/div&gt;&lt;div class="MsoNormal" style="margin-left: 0.75in; text-indent: -0.25in;"&gt;&lt;span style="font-family: Arial;"&gt;2.&lt;span style="font: normal normal normal 7pt/normal 'Times New Roman';"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/span&gt;&lt;/span&gt;&lt;span style="font-family: Arial;"&gt;You must take all reasonable precautions to prevent your work from being stolen.&amp;nbsp; It is important that you do nothing that would enable someone else to turn in work that is not theirs.&amp;nbsp; Do not share your work with anyone else.&amp;nbsp; Make sure that you adequately protect all your files.&amp;nbsp; Even after you have finished a class, do not share your work or published answers with the students who come after you.&amp;nbsp; They need to do their work on their own.&lt;/span&gt;&lt;/div&gt;&lt;i&gt;&lt;span style="font-family: Arial;"&gt;IMPORTANT: The penalty for academic dishonesty will be a course grade of F and a referral of the case to the Dean of Students Office. Further penalties, including suspension or expulsion from the University may be imposed by that office.&lt;/span&gt;&lt;/i&gt;&lt;span style="font-family: Arial;"&gt; &lt;/span&gt;&lt;br /&gt;&lt;span style="font-family: Arial;"&gt;One final word: This policy is not intended to discourage students from learning from each other, nor is it unmindful of the fact that most significant work in computer science and in the computing industry is done by teams of people working together. But, because of our need to assign individual grades, we are forced to impose an otherwise artificial requirement for individual work. In some classes, it is possible to allow and even encourage collaboration in ways that do not interfere with the instructor's ability to assign grades. In these cases, your instructor will make clear to you exactly what kinds of collaboration are allowed for that class. &lt;/span&gt;&lt;br /&gt;&lt;h3&gt;&lt;span style="font-family: Arial;"&gt;II. Attendance at Classes and Exams&lt;/span&gt;&lt;/h3&gt;&lt;ul type="disc"&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Specific policies on class      attendance will be set by individual instructors. Make sure you follow      those policies. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Whether you come to class or not,      you are responsible for keeping up with what happens in class. If you miss      a class (other than for illness or an emergency), it is not reasonable for      you to expect your instructor or TA to repeat just for you the material      that was covered in the class that you missed. This applies both to the      content of the class as well as to announcements about class policies,      events, deadlines, or whatever. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Final examination schedules are      published at the time of &lt;span class="SpellE"&gt;preregistration&lt;/span&gt;. If you      are making end-of-semester travel plans, make sure that you will still be      here to take each of your finals at the scheduled time. Travel plans are      not a valid reason for missing an exam or asking for a special exam time. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;The policy on makeup exams will      be set by individual instructors. Sometimes a makeup will be allowed, but      many times it will not be. Except for emergencies, you must take each exam      at its scheduled time unless you have made prior arrangements with the      instructor. Keep in mind that is often difficult or impossible for an      instructor to create a separate makeup exam that is guaranteed to be of      equal difficulty as the regular exam. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Demands of a job or job      interviewing are never valid reasons for missing a class (or a deadline or      an exam). &lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span style="font-family: Arial;"&gt;III. Classroom Behavior&lt;/span&gt;&lt;/h3&gt;&lt;ul type="disc"&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;You have the right to learn in      every class you attend. But you have the responsibility to help assure      that every other student shares that right. Specifically: &lt;/span&gt;&lt;/li&gt; &lt;ul type="circle"&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Come to       class on time. Do not leave early. These things are very disruptive.       Recognize that the buses and the parking space situation are       unpredictable elements and allow for that. If you must come late or leave       early (for example because of a doctor's appointment), let the instructor       know in advance. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Don't be       disruptive during class. Don't chat with your neighbor or rustle the       newspaper. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Don't allow your       electronic devices to be disruptive. Turn off your cell phone, beeper,       and watch alarm. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Participate.       &lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span style="font-family: Arial;"&gt;IV. Academic Work outside the Classroom&lt;/span&gt;&lt;/h3&gt;&lt;ul type="disc"&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;The only way to learn computer      science is to do it. You should plan to spend a substantial amount of time      outside the classroom working on each class that you take. For some      classes, that will mean programming. For others, it may mean reading,      studying, working problems, writing, or whatever. Don't let this work      slide. It will not generally possible either to do a programming project      or learn the material in a theoretical class the night before the due date      or the exam. You should be working on your own every week of the semester.      &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;A deadline is a deadline. Each      instructor will publish the class policy for turning in late work. Plan      your work accordingly. Don't push the deadlines and don't expect the      instructor to do anything other than what has been published. Even five      minutes is "late". Your instructor can't just acquiesce and accept your      project five minutes late. Then what about seven or ten or fifteen or      thirty? What about the other students in the class who had to miss some      other event in order to get their work in on time? Is it fair to them to      accept your work late? No. Plan that the printer will be down and the      busses will be late on the day your assignment is due. Don't cut it down      to the wire. And, if you do, accept the published consequences with grace.      &lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span style="font-family: Arial;"&gt;V. Faculty and Staff Interaction&lt;/span&gt;&lt;/h3&gt;&lt;div class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Your instructor, plus any TAs and/or proctors assigned to your class will work as a team to help you learn. But you need to interact with them in a reasonable way. Specifically: &lt;/span&gt;&lt;/div&gt;&lt;ul type="disc"&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Remember that the instructional &lt;span class="GramE"&gt;staff are&lt;/span&gt; a team. They will not all do everything. The      instructor will tell you who will be responsible for what. Respect that.      If you ask the wrong person your question, you probably won't get a      reasonable answer and you will waste their time as well as yours. For many      kinds of questions it really is better to ask the TAs or the proctors.      This is particularly true of &lt;span class="SpellE"&gt;nitty&lt;/span&gt; gritty      questions that arise in the labs, since the TAs and proctors are likely to      spend more time there than the instructor does. It's their job. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Email: &lt;/span&gt;&lt;/li&gt; &lt;ul type="circle"&gt;&lt;li class="MsoNormal"&gt;  &lt;span style="font-family: Arial;"&gt;The       University's &lt;/span&gt;&lt;span style="font-family: Arial;"&gt;&lt;a href="http://www.utexas.edu/its/policies/emailnotify.html"&gt;electronic       mail policy&lt;/a&gt; recognizes email as an effective way for your instructor       and TAs to inform you about important things that may be happening in       class. You are responsible for: &lt;/span&gt;&lt;/li&gt; &lt;ul type="square"&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Making sure that your instructor has a valid        email address for you. If you do not want to use the one that the        university has on record, then make sure to give your instructor another        one. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Reading your email every day. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Guaranteeing that your mailbox does not        overflow. &lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;div class="MsoNormal" style="margin-left: 1in;"&gt;&lt;span style="font-family: Arial;"&gt;Excuses such as, "My email box was full", "I don't use that email address any more", "I was too busy to check my email", "I was on an interview trip and couldn't check my email", or "My computer crashed and all of my email was destroyed" aren't acceptable. &lt;/span&gt;&lt;/div&gt;&lt;ul type="disc"&gt;&lt;ul type="circle"&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Email is also a very valuable way for you to       communicate with your instructor and &lt;span class="GramE"&gt;TAs.&lt;/span&gt; But be       sure you use it appropriately. Specifically: &lt;/span&gt;&lt;/li&gt; &lt;ul type="square"&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Using email, it's easy to ask a question or        make a comment that you'd never make in person. Be careful about this.        If you think that what you're about to say wouldn't be something you'd        feel comfortable going to office hours to say, you probably shouldn't        say it in email either. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;In particular, do not send email to your        instructor (or anyone else for that matter) when you're angry. You'll        regret it when you calm down and you'll have antagonized someone who is        important to you. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Remember that the instructor has a permanent        record of every email message. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Feel free to use email to ask questions about        projects and homework assignments. But keep in mind that, although email        is available, &lt;span class="GramE"&gt;neither the instructors or&lt;/span&gt; the        TAs are responsible for replying to email the instant it is sent. Don't        wait until the last minute before something is due to ask your        questions. Also, keep in mind that, if you ask a question that has a        nontrivial answer, it may not make sense for the instructor or TA to        write a small book for you. Sometimes it will be reasonable for them to        ask you either to bring the question to class or to come to office hours        to discuss it. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Although it's easy for you to dash off an email        question, it takes time for the instructor or the TA to answer it. Don't        ask questions to which you can find the answer somewhere else. For        example, don't write to your instructor to ask where the regularly        scheduled final exam is. (It's on the Registrar's web site.) Don't write        and ask how much the first midterm counts. (It should be on the class        syllabus.) Don't ask what happened in a class that you missed (unless        you had an emergency). &lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Office hours are there for you to use. You can expect that the      person who is teaching your class loves the material and wants to share it      with anyone who will listen. If you have questions about what's been      covered in class or you're interested in finding out more about something,      go to office hours and ask. You'll probably find that it's hard to get the      faculty to shut up. The one thing that most &lt;span class="GramE"&gt;faculty&lt;/span&gt;      hate is students who only come to office hours to ask questions about      grades. If there's been a mistake in grading your work, of course, go and      ask (see below). But think twice before you go to office hours to ask      questions that give the impression that you care less about learning than      you do about grades. A few other points to keep in mind about office      hours: &lt;/span&gt;&lt;/li&gt; &lt;ul type="circle"&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;If you can't make it to regularly scheduled       office hours, ask for an appointment. But don't leave this to the day       before the exam. It may not be possible to find a suitable time on such       short notice. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Again, remember the team concept. The faculty       and TAs for your class will try to schedule their office hours to cover       as wide a range of times as possible. If you can't make it to one       person's office hours, try someone else. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Unless an office door is already open, knock       first and don't go in until you're invited to do so. &lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/ul&gt;&lt;h3&gt;&lt;span style="font-family: Arial;"&gt;VI. Grades&lt;/span&gt;&lt;/h3&gt;&lt;ul type="disc"&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Grades are a necessary evil. You don't like worrying about grades      and the faculty hate having to assign them. We'd all rather focus on the      content of our classes. But your degree is a commitment from the      University that you have achieved a certain level of expertise in the      classes you've taken, so we need some way to measure that. To make this      process work, you need to understand: &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;The grade you are given, either on an individual exam or assignment      or as your final grade, is not the starting point of a negotiation. It is      your grade unless a concrete error has been made. Do not go to see your      instructor or your TA to ask for a better grade because you want one or      you "feel you deserve it". Go only if you can document a specific error in      grading or in recording your scores. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Your grade is a reflection of only one thing: how well did you do      in the class. Nonacademic circumstances have no bearing on your grade.      Don't go to see your instructor and explain how important a better grade      is in your life. It would be unfair to other students and it would      undermine the meaning of the degree if the instructor responded to such      issues. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;If you believe that an error has been made in grading your work,      you have one week from the time that the work was returned to the class to      file a complaint in writing to your instructor. Note that this is one week      from the time that the instructor made the work available to the class. If      you missed class and didn't get your work until later, there is no      extension of the one week deadline. If you decide to submit a complaint      about the grading of your work, make sure to describe the issue clearly      and return the original work and your note to your instructor. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Errors can certainly be made in grading. But keep in mind that the      errors can be made either in your favor or not. So it's possible that if      you ask to have a piece of work &lt;span class="SpellE"&gt;regraded&lt;/span&gt; your      grade will go down rather than up. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;Remember that the most important characteristic of any grading      scheme is that it be scrupulously fair to everyone in the class. Keep this      in mind if you're thinking of asking, for example, for more partial credit      points on a problem. The important thing is not the exact number of points      that were taken off for each kind of mistake. The important thing is that      that number was the same for everyone. So it can't be changed once the      grading is done and the papers have been returned. &lt;/span&gt;&lt;/li&gt;&lt;li class="MsoNormal"&gt;&lt;span style="font-family: Arial;"&gt;You instructor will decide what it takes to get an A or a B or a C      or D in the class. Deciding the boundary cases is always hard. Your      instructor is under no obligation to make score cutoffs public or to tell      you how far away &lt;span class="GramE"&gt;your were&lt;/span&gt; from the next higher      grade. &lt;/span&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8998071557198164915/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/nice-advice-by-prof-elaine-rich.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8998071557198164915'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8998071557198164915'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/nice-advice-by-prof-elaine-rich.html' title='nice advice (by prof. Elaine Rich)'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2549353712866702233</id><published>2010-09-06T13:01:00.001-05:00</published><updated>2010-09-06T13:02:23.061-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>missing is a kind of sickness</title><content type='html'>&lt;pre&gt;当你在穿山越岭的另一边&lt;br /&gt;我在孤独的路上没有尽头&lt;/pre&gt;&lt;pre&gt;&amp;nbsp;&lt;/pre&gt;&lt;pre&gt;一辈子有多少的来不及发现&lt;/pre&gt;&lt;pre&gt;已经失去最重要的东西&lt;br /&gt;恍然大悟 早已远去&lt;br /&gt;为何总是在犯错之后&lt;br /&gt;才肯相信 错的是自己&lt;br /&gt;他们说这就是人生&lt;br /&gt;试著体会 试著忍住眼泪&lt;br /&gt;还是躲不开应该有的情绪&lt;br /&gt;我不会奢求世界停止转动&lt;br /&gt;我知道逃避一点都没有用&lt;br /&gt;只是这段时间里 尤其在夜里&lt;br /&gt;还是会想起 难忘的事情&lt;br /&gt;我想我的思念是一种病&lt;br /&gt;久久不能痊愈&lt;/pre&gt;&lt;pre&gt;&amp;nbsp;&lt;/pre&gt;&lt;pre&gt;当你在穿山越岭的另一边&lt;br /&gt;我在孤独的路上没有尽头&lt;br /&gt;时常感觉你在耳后的呼吸&lt;br /&gt;却未曾感觉你在心口的鼻息&lt;/pre&gt;&lt;pre&gt;&amp;nbsp;&lt;/pre&gt;&lt;pre&gt;汲汲营营&lt;br /&gt;忘记身边的人需要爱和关心&lt;br /&gt;藉口总是拉远了距离&lt;br /&gt;不知不觉 无声无息&lt;br /&gt;我们总是在抱怨事与愿违&lt;br /&gt;却不愿意回头看看自己&lt;br /&gt;想想自己 到底做了甚麼蠢事情&lt;br /&gt;也许是上帝给我一个试炼&lt;br /&gt;只是这伤口需要花点时间&lt;br /&gt;只是会想念 过去的一切&lt;br /&gt;那些人事物 会离我远去&lt;br /&gt;而我们终究也会远离&lt;br /&gt;变成回忆&lt;/pre&gt;&lt;pre&gt;&amp;nbsp;&lt;/pre&gt;&lt;pre&gt;当你在穿山越岭的另一边&lt;br /&gt;我在孤独的路上没有尽头&lt;br /&gt;时常感觉你在耳后的呼吸&lt;br /&gt;却未曾感觉你在心口的鼻息&lt;br /&gt;Oh 思念是一种病&lt;br /&gt;Oh 思念是一种病 一种病&lt;/pre&gt;&lt;pre&gt;&amp;nbsp;&lt;/pre&gt;&lt;pre&gt;多久没有说我爱你&lt;br /&gt;多久没有拥抱你所爱的人&lt;br /&gt;当这个世界不在那麼美好&lt;br /&gt;只有爱可以让他更好&lt;br /&gt;我相信一切都来得及&lt;br /&gt;别管那些纷纷扰扰&lt;br /&gt;别让不开心的事 停下了脚步&lt;br /&gt;就怕你不说 就怕你不做&lt;br /&gt;别让遗憾继续 一切都来得及&lt;/pre&gt;&lt;pre&gt;&amp;nbsp;&lt;/pre&gt;&lt;pre&gt;当你在穿山越岭的另一边&lt;br /&gt;我在孤独的路上没有尽头&lt;br /&gt;时常感觉你在耳后的呼吸&lt;br /&gt;却未曾感觉你在心口的鼻息&lt;br /&gt;当你在穿山越岭的另一边&lt;br /&gt;我在孤独的路上没有尽头&lt;br /&gt;时常感觉你在耳后的呼吸&lt;br /&gt;却未曾感觉你在心口的鼻息&lt;br /&gt;Oh 思念是一种病&lt;br /&gt;Oh 思念是一种病 一种病&lt;br /&gt;&lt;br /&gt;by 张震岳 - 思念是一种病&lt;/pre&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2549353712866702233/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/missing-is-kind-of-sickness.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2549353712866702233'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2549353712866702233'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/missing-is-kind-of-sickness.html' title='missing is a kind of sickness'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2024786434574000624</id><published>2010-09-01T10:27:00.001-05:00</published><updated>2010-09-01T10:27:49.603-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>rate adaptation for RT2870</title><content type='html'>&lt;span class="Apple-style-span" style="border-collapse: collapse; font-family: arial, sans-serif; font-size: 13px;"&gt;The rate selection of the driver is working as follow: firstly, identify the initial link speed with the FUNCTION "MlmeUpdateTxRates" in mlme.c, then set the transmition rate with FUNCTION "SetCommonHT" in cmm_info.c. Specifically the FUNCTION "RTMPSetDesiredRates" in \common\cmm_info.c is to set 802.11a/b/g data rate; and FUNCTION "RTMPSetHT", "RTMPSetIndividualHT", and "RTMPUpdateHTIE" in the same file are to set the 802.11n data rate, where set its value according to desired rate according to input parameter and bandwidth.&lt;/span&gt;&lt;span class="Apple-style-span" style="border-collapse: collapse; font-family: arial, sans-serif; font-size: 13px;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="Apple-style-span" style="border-collapse: collapse; font-family: arial, sans-serif; font-size: 13px;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="Apple-style-span" style="border-collapse: collapse; font-family: arial, sans-serif; font-size: 13px;"&gt;The FUNCTION "MlmeUpdateHtTxRates" in \include\mlme.c is to update the data rate used in 802.11n scenario. The update decision is made based on the desired PHY layer infromation saved in a struct, the updated channel parameters provided by FUNCTION "RTMPCheckHt" in the same file, and more importantly, the calculation provided by FUNCITON "MlmeSelectTxRateTable". The three function mentioned about communication with each other mainly via the array MCSSet[16], whose definition is in file \include\mlme.h.&lt;/span&gt;&lt;span class="Apple-style-span" style="border-collapse: collapse; font-family: arial, sans-serif; font-size: 13px;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="Apple-style-span" style="border-collapse: collapse; font-family: arial, sans-serif; font-size: 13px;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;span class="Apple-style-span" style="border-collapse: collapse; font-family: arial, sans-serif; font-size: 13px;"&gt;Furthermore, your advice about the rate selection range help me find the definition of high throughput in file \include\rtmp_def.h, where has two groups of transition rate: 0 to 7 (6Mbps to 54Mbps) for OFDM, and 0 to 33 (MCS_0 to MCS_32, and MCS_33 is auto-rate). As long as the dongle we chose have two transmission antennas, we can use MCS_0 to MCS_15, corresponding&amp;nbsp; up to 300Mbps. This can be set in file \common\cmm_profile.c, triggered by key words "FixedTxMode" or "HT_TxStream". However, because the algorithm will check the status of channel every time it updates the date rate, the original algorithm cannot set the rate to a specific number all the time.&lt;/span&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2024786434574000624/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/rate-adaptation-for-rt2870.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2024786434574000624'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2024786434574000624'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/09/rate-adaptation-for-rt2870.html' title='rate adaptation for RT2870'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6400836882211320786</id><published>2010-08-31T17:15:00.002-05:00</published><updated>2010-08-31T17:15:44.054-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>configuration of the testbed</title><content type='html'># all the machines should be upgraded to ubuntu 10.04 #&lt;br /&gt;&lt;br /&gt;PRE INSTALLATION&lt;br /&gt;----------------&lt;br /&gt;- note down the ip address of the eth0 interface&lt;br /&gt;&lt;br /&gt;INSTALLING UBUNTU&lt;br /&gt;-----------------&lt;br /&gt;- use the 10.04 ISO image from the CD&lt;br /&gt;- make sure the Fedora 4 partition is formatted and wiped out&lt;br /&gt;- use the username: lili, password: interference-&lt;machine-name&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; - for instance, if m/c name: ut-mesh-d-14.csres.utexas.edu; then password: interference-d14&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; if m/c name: ut-mesh-14.csres.utexas.edu; then password: interference-14&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;POST INSTALLATION&lt;br /&gt;-----------------&lt;br /&gt;A. Configuring the network interfaces&lt;br /&gt;- /etc/resolv.conf: create this file if it doesn't exist and use the following entries&lt;br /&gt;search public.utexas.edu&lt;br /&gt;nameserver 128.83.139.9&lt;br /&gt;&lt;br /&gt;- /etc/network/interfaces: add the entry&lt;br /&gt;&lt;br /&gt;auto eth0&lt;br /&gt;iface eth0 inet static&lt;br /&gt;address &lt;ip_address here=""&gt;&lt;br /&gt;gateway 128.83.141.1&lt;br /&gt;netmask 255.255.255.0&lt;br /&gt;network 128.83.141.0&lt;br /&gt;broadcast 128.83.141.255&lt;br /&gt;&lt;br /&gt;- sudo service network-manager stop (kills the network manager service, we don't need it)&lt;br /&gt;&lt;br /&gt;- sudo /etc/init.d/networking restart&lt;br /&gt;&amp;nbsp; - try connecting to the internet, should work!&lt;br /&gt;&lt;br /&gt;INSTALLING VIM, SSH and WIRESHARK&lt;br /&gt;---------------------------------&lt;br /&gt;- open the Administration-&amp;gt;Synaptic Packet Manager. Click Reload. (updates the package manager). Close the package manager.&lt;br /&gt;- sudo apt-get install ssh&lt;br /&gt;- sudo apt-get install vim&lt;br /&gt;- sudo apt-get install wireshark&lt;br /&gt;&lt;br /&gt;ADD RSA key of the host machine to this remote machine&lt;br /&gt;------------------------------------------------------&lt;br /&gt;- generate rsa key on the host machine using &lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; ssh-keygen -t rsa1 &lt;br /&gt;- cat ~/.ssh/&lt;rsa dump="" file=""&gt; &amp;gt;&amp;gt; ~/.ssh/authorized_keys@remote_machine&lt;br /&gt;- chmod 600 ~/.ssh/authorized_keys@remote_machine&lt;br /&gt;&lt;br /&gt;Update the SUDOERS file&lt;br /&gt;-----------------------&lt;br /&gt;- sudo visudo&lt;br /&gt;- &lt;begins&gt;&lt;br /&gt;User_Alias FULLTIMERS=lili&lt;br /&gt;lili&amp;nbsp;&amp;nbsp;&amp;nbsp; ALL=NOPASSWD:ALL&lt;br /&gt;FULLTIMERS ALL = NOPASSWD: ALL&lt;br /&gt;&amp;nbsp; &lt;ends&gt;&lt;br /&gt;&lt;br /&gt;Remove ath5k and install madwifi&lt;br /&gt;-------------------------------&lt;br /&gt;http://art.ubuntuforums.org/showthread.php?t=1163380&lt;br /&gt;&lt;br /&gt;IMPORTANT&lt;br /&gt;--------&lt;br /&gt;Driver Bug: Do not try to perform channel switch in the master mode; causes a hard freeze (Ref: http://madwifi-project.org/ticket/1903)&lt;br /&gt;&lt;/ends&gt;&lt;/begins&gt;&lt;/rsa&gt;&lt;/ip_address&gt;&lt;/machine-name&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/6400836882211320786/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/08/configuration-of-testbed.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6400836882211320786'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6400836882211320786'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/08/configuration-of-testbed.html' title='configuration of the testbed'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2945972493049850754</id><published>2010-08-16T07:59:00.000-05:00</published><updated>2010-08-16T08:00:09.115-05:00</updated><app:control xmlns:app='http://purl.org/atom/app#'><app:draft>yes</app:draft></app:control><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>im not happy</title><content type='html'>今天本应是个好日子，可是我真的不开心。大家都懂事，可是为什么出了问题呢。想发脾气都不知道去向哪里倾泻。于是更加不开心。&lt;br&gt; </content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2945972493049850754'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2945972493049850754'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8388926138167794559</id><published>2010-07-14T15:56:00.003-05:00</published><updated>2010-07-16T08:00:53.586-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>python editor &amp; IDE</title><content type='html'>留个印儿，待用。&lt;br /&gt;&lt;a href="http://www.vim.org/scripts/script.php?script_id=790"&gt;vim&lt;/a&gt;&lt;br /&gt;&lt;a href="http://ulipad.appspot.com/"&gt;ulipad&lt;/a&gt;&lt;br /&gt;&lt;a href="http://eric-ide.python-projects.org/"&gt;eric&lt;/a&gt;&lt;br /&gt;&lt;a href="http://pydev.org/"&gt;pydev&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.gnu.org/software/emacs/"&gt;emacs&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.eclipse.org/"&gt;eclipse&lt;/a&gt;&lt;br /&gt;&lt;a href="http://netbeans.org/"&gt;netbeans&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.activestate.com/komodo-edit"&gt;komodo&lt;/a&gt;&lt;br /&gt;&lt;a href="http://www.wingware.com/"&gt;wingIDE&lt;/a&gt;&lt;br /&gt;(the last two are commercial software)&lt;br /&gt;&lt;a href="http://www.douban.com/group/topic/12614469/"&gt;douban&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Learning to program is like learning to write good natural language. The best way to do it is to read some stuff written by masters of the form, write some things yourself, read a lot more, write a little more, read a lot more, write some more ... and repeat until your writing begins to develop the kind of strength and economy you see in your models.&lt;br /&gt;&lt;br /&gt;ps.今天看到篇很棒的文章《&lt;a href="http://catb.org/%7Eesr/faqs/hacker-howto.html#skills1"&gt;How to become a hacker&lt;/a&gt;》。文章很长，分期分批的看吧，里面的路线图以及很多思想当真是值得借鉴的。豆瓣小组当真是个好地方=]</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8388926138167794559/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/07/python-editor-ide.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8388926138167794559'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8388926138167794559'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/07/python-editor-ide.html' title='python editor &amp; IDE'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3496638588093551375</id><published>2010-07-11T20:19:00.000-05:00</published><updated>2010-07-11T20:19:33.729-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>funny words</title><content type='html'>韩乔生老师最牛的一次解说&lt;br /&gt;&lt;br /&gt;—7号球员夏普分球，传给了9号队员，9号队员也叫夏普，他们可能是兄弟。&lt;br /&gt;—在足坛活跃着很多兄弟，比如荷兰的德波尔兄弟，爱尔兰的基恩兄弟（韩老师到底也没有纠正的错误，爱尔兰的两个基恩不是兄弟）。好球，这个球传给10号传得非常好。&lt;br /&gt;—咦，10号怎么也叫夏普。可能是这样的，外国球员印在球衣上的只是姓，这些球员都姓夏普，就像韩国有很多球员都姓朴。漂亮，&lt;br /&gt;—10号连过两名队员，破门得分，11号上前祝贺，11号是–夏普(停顿好大一会）对不起，观众朋友，夏普是印在球衣上赞助商的名字。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3496638588093551375/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/07/funny-words.html#comment-form' title='2 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3496638588093551375'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3496638588093551375'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/07/funny-words.html' title='funny words'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>2</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4650467262297939883</id><published>2010-07-06T11:31:00.004-05:00</published><updated>2010-07-06T16:16:11.375-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>Associative container</title><content type='html'>pair类型，以及更为典型的map类型。既具有vector类型可以纵向联系某种特定数据类型的特点，又可以把两种不同数据类型但在应用中意义相关的数据横向联系起来。这种联系可以理解为“映射”，每个key和唯一的另一个数据类型存放地址相关。另一种理解方法，key值可以视为对应于其值value的一个指针或者是迭代器，只是这样的对应始终是一对一的。此外，map类型默认如果所查询的key值不存在，则自动添加到队尾，默认赋值0。这个特点很适合计数使用。&lt;br /&gt;&lt;br /&gt;但在单纯进行查找操作的时候则需要小心。若要仅仅确定某个key是否存在，可以使用m.count(k)，返回值为0或1。若要确定某个key值的具体位置，则可使用m.find(k)，若k键存在，则返回的是指向它的一个迭代器，若不存在，则返回指向超出队尾位置的迭代器，这个返回值和m.end()的返回值一致。&lt;br /&gt;&lt;br /&gt;//count number of times each word occurs in the input&lt;br /&gt;map&lt;string, int=""&gt; word_count&lt;/string,&gt;&lt;br /&gt;string word;&lt;br /&gt;while(cin &amp;gt;&amp;gt; word){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;++word_count[word]; &amp;nbsp; }&lt;br /&gt;&lt;br /&gt;//equal funtion with .insert&lt;br /&gt;......&lt;br /&gt;while(cin &amp;gt;&amp;gt; word){&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;//insert element with key equal to word and value 1&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;//if word already in word_count, insert does nothing&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;pair&lt;map&gt;&lt;string, int=""&gt;::iterator, bool&amp;gt; ret =&lt;/string,&gt;&lt;/map&gt;&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;word_count.insert(make_pair(word, 1));&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;if (!ret.second) &amp;nbsp; //word already in word_count&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;++ret.first-&amp;gt;second; &amp;nbsp; //increment counter&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;//which is equal to ++((ret.first)-&amp;gt;second);&lt;br /&gt;}&lt;br /&gt;&lt;br /&gt;这里有一点需要注意的，仍然是不同符号连用时优先级的问题。之前在c.lang组里面也遇到了这样的问题，简单的一段程序都会出现匪夷所思的结果。那么，得到的启发就是，在任何情况下，多写几层括号，既可以方便之后的阅读代码，又可以避免因为默认优先级而引起难以察觉的问题。&lt;br /&gt;&lt;br /&gt;ps. 设计程序的一个良好习惯是首先将程序需要完成的任务明确成条目，然后列出涉及的操作，明确了这些需要提供的操作，有助于建立需要的数据结构和实现这些行为。一般的顺序是，明确输入输出参量以及将其相关联起来的数据的结构--&amp;gt;明确程序行为-&amp;gt;根据数据结构设计类-&amp;gt;设计主函数-&amp;gt;设计输出函数--&amp;gt;设计成员函数。&lt;br /&gt;&lt;br /&gt;pps. 一篇介绍C++的文章(&lt;a href="http://blog.csdn.net/pongba/archive/2007/09/14/1785372.aspx"&gt;为什么C++&lt;/a&gt;)</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4650467262297939883/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/07/associative-container.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4650467262297939883'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4650467262297939883'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/07/associative-container.html' title='Associative container'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5313593238975214205</id><published>2010-07-05T18:08:00.000-05:00</published><updated>2010-07-05T18:08:47.202-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Work'/><title type='text'>Install Click in Ubuntu 10.04</title><content type='html'>GIT is the best way to acquire the code, so it is necessary to install this software first. Besides, there are several packages needed to patch before the click installs. And it is also tricky for the final step of installation.&lt;br /&gt;&lt;br /&gt;**************&lt;br /&gt;&lt;br /&gt;# git clone git://git.kernel.org/pub/scm/git/git.git&lt;br /&gt;&lt;br /&gt;# apt-get install git-core&lt;br /&gt;&lt;br /&gt;# git clone git://read.cs.ucla.edu/git/click&lt;br /&gt;&lt;br /&gt;# apt-get install autoconf&lt;br /&gt;&lt;br /&gt;# apt-get install libgtk2.0-dev&lt;br /&gt;&lt;br /&gt;# apt-get install libtool&lt;br /&gt;&lt;br /&gt;To update to the latest version checked in to the public repository, change into your working copy directory DIR and run:&lt;br /&gt;&lt;br /&gt;# git pull&lt;br /&gt;&lt;br /&gt;To fetch the Click packages:&lt;br /&gt;&lt;br /&gt;# git clone git://read.cs.ucla.edu/git/click-packages DIR&lt;br /&gt;&lt;br /&gt;Installation of Click:&lt;br /&gt;&lt;br /&gt;# cd CLICKDIR&lt;br /&gt;# ./configure --prefix=$HOME --enable-analysis --enable-test&lt;br /&gt;# make install&lt;br /&gt;&lt;br /&gt;The –prefix=$HOME configuration switch causes Click to install into your home directory. To run the Click driver and read its manual pages, you'll need to add $HOME/bin and $HOME/man&amp;nbsp; to your PATH and MANPATH environment variables, respectively. Alternatively, if you have root privilege on your machine, you can install Click in /usr/local, /usr/local/click, or wherever you'd like.&lt;br /&gt;&lt;br /&gt;The –enable-analysis and –enable-test configuration switches turn on support for two necessary sub-packages, including trace analysis and regression test elements.&lt;br /&gt;&lt;br /&gt;If you get a bus error when running Click on a Solaris or other non-x86 machine, try running your conﬁguration through click-align: “click-align config.click | click”. &lt;br /&gt;&lt;br /&gt;Furthermore, make sure your system has the necessary libraries and packages&lt;br /&gt;installed.&amp;nbsp; On a Debian or Ubuntu system, this will include automake,&lt;br /&gt;autoconf, libtool, libgtk2.0-dev (or libgtk2-dev), and graphviz.&amp;nbsp; Then:&lt;br /&gt;&lt;br /&gt;# cd CLICKDIR/apps/clicky&lt;br /&gt;# autoreconf -i&lt;br /&gt;# ./configure [--prefix=PREFIX] --with-click=CLICKPREFIX&lt;br /&gt;# make install&lt;br /&gt;&lt;br /&gt;That's done:)&lt;br /&gt;&lt;br /&gt;But on the other hand, there are some warning coming out, although they seem to be all right till now.&lt;br /&gt;&lt;br /&gt;FIRST &amp;amp; SECOND appear in the Click Configuration step.&lt;br /&gt;&lt;br /&gt;Your Linux kernel header files cause errors when included by a C++ program,&lt;br /&gt;so I won't try to compile the linuxmodule driver.&lt;br /&gt;&lt;br /&gt;There are two common reasons for this error:&lt;br /&gt;1. You have not applied the Linux kernel patch that comes with this distribution.&amp;nbsp; Apply the right patch and try again.&amp;nbsp; See the INSTALL file for more information.&lt;br /&gt;2. Your Linux configuration enables some functionality that is not yet covered by our patches.&amp;nbsp; Turn off this functionality and try again, or fix the error and tell us how you did it.&amp;nbsp; See the config.log file for more detailed information on the error.&lt;br /&gt;&lt;br /&gt;==============&lt;br /&gt;&lt;br /&gt;WARNING: `makeinfo' is missing on your system.&amp;nbsp; You should only need it if you modified a `.texi' or `.texinfo' file, or any other file indirectly affecting the aspect of the manual.&amp;nbsp; The spurious call might also be the consequence of using a buggy `make' (AIX, DU, IRIX).&amp;nbsp; You might want to install the `Texinfo' package or the `GNU make' package.&amp;nbsp; Grab either from any GNU archive site.&lt;br /&gt;&lt;br /&gt;=============&lt;br /&gt;&lt;br /&gt;The THIRD comes out when I build the Click install.&lt;br /&gt;&lt;br /&gt;click-elem2man: warning: category 'devices' begins with a lowercase letter (used in UMLSwitch)&lt;br /&gt;click-elem2man: warning: category 'devices' begins with a lowercase letter (used in UMLSwitch)&lt;br /&gt;../missing makeinfo ./click.texi&lt;br /&gt;WARNING: `makeinfo' is missing on your system.&amp;nbsp; You should only need it if&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; you modified a `.texi' or `.texinfo' file, or any other file&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; indirectly affecting the aspect of the manual.&amp;nbsp; The spurious&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; call might also be the consequence of using a buggy `make' (AIX,&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; DU, IRIX).&amp;nbsp; You might want to install the `Texinfo' package or&lt;br /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; the `GNU make' package.&amp;nbsp; Grab either from any GNU archive site.&lt;br /&gt;make[1]: [click.info] Error 1 (ignored)&lt;br /&gt;......&lt;br /&gt;install-info: warning: don't call programs like install-info with an absolute path,&lt;br /&gt;install-info: warning: /usr/sbin/install-info provided by dpkg is deprecated and will go away soon;&lt;br /&gt;install-info: warning: its replacement lives in /usr/bin/.&lt;br /&gt;This is not dpkg install-info anymore, but GNU install-info&lt;br /&gt;See the man page for ginstall-info for command line arguments&lt;br /&gt;install-info: No such file or directory for /root/share/info/click.info&lt;br /&gt;make[1]: [install-info] Error 1 (ignored)&lt;br /&gt;&lt;br /&gt;=============&lt;br /&gt;&lt;br /&gt;The FINAL one appears when I build the clicky.&lt;br /&gt;&lt;br /&gt;xcallbacks.c: In function ‘on_cut1_activate’:&lt;br /&gt;xcallbacks.c:11: warning: unused parameter ‘menuitem’&lt;br /&gt;xcallbacks.c:12: warning: unused parameter ‘user_data’&lt;br /&gt;xcallbacks.c: In function ‘on_copy1_activate’:&lt;br /&gt;xcallbacks.c:19: warning: unused parameter ‘menuitem’&lt;br /&gt;xcallbacks.c:20: warning: unused parameter ‘user_data’&lt;br /&gt;xcallbacks.c: In function ‘on_paste1_activate’:&lt;br /&gt;xcallbacks.c:27: warning: unused parameter ‘menuitem’&lt;br /&gt;xcallbacks.c:28: warning: unused parameter ‘user_data’&lt;br /&gt;xcallbacks.c: In function ‘on_clear1_activate’:&lt;br /&gt;xcallbacks.c:35: warning: unused parameter ‘menuitem’&lt;br /&gt;xcallbacks.c:36: warning: unused parameter ‘user_data’&lt;br /&gt;xcallbacks.c: In function ‘on_properties1_activate’:&lt;br /&gt;xcallbacks.c:43: warning: unused parameter ‘menuitem’&lt;br /&gt;xcallbacks.c:44: warning: unused parameter ‘user_data’&lt;br /&gt;xcallbacks.c: In function ‘on_preferences1_activate’:&lt;br /&gt;xcallbacks.c:51: warning: unused parameter ‘menuitem’&lt;br /&gt;xcallbacks.c:52: warning: unused parameter ‘user_data’&lt;br /&gt;xcallbacks.c: In function ‘on_about1_activate’:&lt;br /&gt;xcallbacks.c:59: warning: unused parameter ‘menuitem’&lt;br /&gt;xcallbacks.c:60: warning: unused parameter ‘user_data’</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5313593238975214205/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/07/install-click-in-ubuntu-1004.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5313593238975214205'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5313593238975214205'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/07/install-click-in-ubuntu-1004.html' title='Install Click in Ubuntu 10.04'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2913205469992182701</id><published>2010-07-02T18:56:00.003-05:00</published><updated>2010-07-20T11:08:45.806-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Work'/><title type='text'>Install RT2870 usb wireless adapter  in Ubuntu 10</title><content type='html'>Step 0 : At terminal, aaa@ubuntu:~$ sudo gedit /etc/modprobe.d/blacklist.conf. Add “blacklist rt2870usb” without quote at the end of the file, then save it.&lt;br /&gt;&lt;br /&gt;Step 1 : Download the latest rt2870 driver (&lt;a href="http://www.ralinktech.com/support.php?s=2"&gt;here&lt;/a&gt;) from Ralink.&lt;br /&gt;&lt;br /&gt;Step 2 : Untar the file and save to your home folder, and name it. (eg. the folder name is rt2870)&lt;br /&gt;&lt;br /&gt;Step 2.51 : According to the instruction I found in the internet, there should be another three steps done with the dongle: firstly, without plug your wireless usb at this moment, at terminal aaa@ubuntu:~$ type lsusb.&lt;br /&gt;&lt;br /&gt;Step 2.52 : Then plug in the wireless usb to the computer, type lsusb again, the&amp;nbsp;wireless usb ID (8 digits)&amp;nbsp;will be found. Write it down.&lt;br /&gt;&lt;br /&gt;Step 2.53 : Check it at aaa@ubuntu:~/rt2870/os/linux$, sudo gedit usb_main_dev.c. If the usb device is not included, add the wireless usb ID. Save the file. For example, the additional two lines are:&lt;br /&gt;{USB_DEVICE(0x0B05,0x1761)}, /* Asus */&lt;br /&gt;{USB_DEVICE(0x1761,0x0B05)}, /* Asus */&lt;br /&gt;&lt;br /&gt;Step 3 :&amp;nbsp;In Makefile,&amp;nbsp;set the "MODE = STA" in Makefile and chose the TARGET to Linux by set "TARGET = LINUX". Then, change the directory of RT28XX_DIR in line 7 by "aaa@ubuntu:~$&amp;nbsp;shell pwd". Finally, via the command "aaa@ubuntu:~$&amp;nbsp;shell uname -r",&amp;nbsp;define the linux kernel source include file path LINUX_SRC&amp;nbsp;modify to meet your need.&lt;br /&gt;&lt;br /&gt;Step 4 : At same terminal , sudo gedit config.mk, and change two settings.&lt;br /&gt;# Support Wpa_Supplicant&lt;br /&gt;HAS_WPA_SUPPLICANT=n → y&lt;br /&gt;# Support Native WpaSupplicant for Network Maganger&lt;br /&gt;HAS_NATIVE_WPA_SUPPLICANT_SUPPORT=n → y&lt;br /&gt;&lt;br /&gt;Step 5 : At aaa@ubuntu:~/rt2870$, sudo gedit Makefile, check the folllowing at the top of the file:&lt;br /&gt;RT28xx_MODE = STA&lt;br /&gt;TARGET = LINUX&lt;br /&gt;CHIPSET = 2870&lt;br /&gt;If ok, close the file. If not, change the setting as above.&lt;br /&gt;&lt;br /&gt;Step 6: rt2870 2.2.00 version do not support kernel 2.6.31-14-generic, so you have to do a patch. The download link is &lt;a href="http://launchpadlibrarian.net/35348337/rt2870-2.6.31.patch"&gt;here&lt;/a&gt;, and the patch is via "patch -p1 &amp;lt; rt2870-2.6.31.patch".If you get a message of unable to patch, then download and install Patch_2.5.9-5_amd64.deb.&lt;br /&gt;&lt;br /&gt;Step 7 : At aaa@ubuntu:~/rt2870$, do the compilation.&lt;br /&gt;sudo make uninstall&lt;br /&gt;sudo make clean&lt;br /&gt;sudo make&lt;br /&gt;sudo make install&lt;br /&gt;&lt;br /&gt;Step 8 : At aaa@ubuntu:~$ sudo modprobe rt2870sta&lt;br /&gt;&lt;br /&gt;Step 9 : At aaa@ubuntu”~$ sudo gedit /etc/rc.local, add following two lines prior to exit0.&lt;br /&gt;ifconfig ra0 up&lt;br /&gt;pkill NetworkManager&lt;br /&gt;save it, then at same terminal, sudo gedit /etc/modules, add rt2870sta, then save the file.&lt;br /&gt;&lt;br /&gt;Step 10 :At aaa@ubuntu:~$ ifconfig or iwconfig, you will see your wireless is up as ra0 or wlan0.&lt;br /&gt;&lt;br /&gt;Step 11 : Now configure networkmanager, use wep instead of wpa-psk or wpa2-psk. Your wireless will be able to connect to the internet. If there's no connection, then do step 12.&lt;br /&gt;&lt;br /&gt;Step 12 : Update networkmanager. Go to System – Software Sources – Other software, add the following line&lt;br /&gt;deb http://ppa.launchpad.net/network-manager/trunk/ubuntu karmic main&lt;br /&gt;&lt;br /&gt;That's the end.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2913205469992182701/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/07/install-rt2870-usb-wireless-adapter-in.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2913205469992182701'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2913205469992182701'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/07/install-rt2870-usb-wireless-adapter-in.html' title='Install RT2870 usb wireless adapter  in Ubuntu 10'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5589530466015873558</id><published>2010-07-02T18:43:00.003-05:00</published><updated>2010-07-05T17:53:19.800-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Work'/><title type='text'>Install madwifi in UBUNTU 10.04</title><content type='html'>When I install the madwifi driver from madwifi.org, the problem appears:&lt;br /&gt;&lt;blockquote&gt;&lt;br /&gt;&lt;pre&gt;&lt;code&gt;In file included from /home/user/madwifi/madwifi-hal-0.10.5.6/ath/../net80211/ieee80211_monitor.h:34,&lt;br /&gt;from /home/user/madwifi/madwifi-hal-0.10.5.6/ath/if_ath.c:75:&lt;br /&gt;/home/user/madwifi/madwifi-hal-0.10.5.6/ath/../ath/if_athvar.h:107: error: conflicting types for 'irqreturn_t'&lt;br /&gt;include/linux/irqreturn.h:16: note: previous declaration of 'irqreturn_t' was here&lt;br /&gt;/home/user/madwifi/madwifi-hal-0.10.5.6/ath/if_ath.c: In function 'ath_attach':&lt;br /&gt;/home/user/madwifi/madwifi-hal-0.10.5.6/ath/if_ath.c:478: error: 'struct net_device' has no member named 'priv'&lt;br /&gt;/home/user/madwifi/madwifi-hal-0.10.5.6/ath/if_ath.c:819: error: 'struct net_device' has no member named 'open'&lt;br /&gt;/home/user/madwifi/madwifi-hal-0.10.5.6/ath/if_ath.c:820: error: 'struct net_device' has no member named 'stop'&lt;br /&gt;/home/user/madwifi/madwifi-hal-0.10.5.6/ath/if_ath.c:821: error: 'struct net_device' has no member named 'hard_start_xmit'&lt;br /&gt;/home/user/madwifi/madwifi-hal-0.10.5.6/ath/if_ath.c:822: error: 'struct net_device' has no member named 'tx_timeout'&lt;br /&gt;.....&lt;br /&gt;.....&lt;br /&gt;.....&lt;br /&gt;make[3]: *** [/home/user/madwifi/madwifi-hal-0.10.5.6/ath/if_ath.o] Error 1&lt;br /&gt;make[2]: *** [/home/user/madwifi/madwifi-hal-0.10.5.6/ath] Error 2&lt;br /&gt;make[1]: *** [_module_/home/user/madwifi/madwifi-hal-0.10.5.6] Error 2&lt;br /&gt;make[1]: Leaving directory `/usr/src/linux-headers-2.6.31-14-generic'&lt;br /&gt;make: *** [modules] Error 2&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;This is due to the fact that there was a change in the kernel headers. The new kernels replaced the old net_device structure with a new one called net_device_ops. It looks like this change exists since kernel 2.6.29 and up.&lt;br /&gt;&lt;br /&gt;There currently is no stable release of the madwifi drivers for the new kernerls. But the madwifi project's latest trunk compiles and works fine (at least for me) and I have not noticed any issues yet. This should work with any Linux distribution with a kernel of 2.6.29 and above. To find out your kernel version run:&lt;br /&gt;&lt;blockquote&gt;$uname -r&lt;/blockquote&gt;Here is how to get and install it:&lt;br /&gt;&lt;br /&gt;1. You can either get the latest trunk from the madwifi website at &lt;a href="http://snapshots.madwifi-project.org/madwifi-trunk-current.tar.gz"&gt;here&lt;/a&gt; or use the one that worked for me (&lt;a href="http://dimitar.me/wp-content/uploads/2009/10/madwifi-trunk-r4099-20090929.tar.gz"&gt;click&lt;/a&gt;).&lt;br /&gt;&lt;br /&gt;2. Download and uncompress the files, cd to the directory containing the file. Then gunzip and untar the files:&lt;br /&gt;&lt;blockquote&gt;tar -xvzf madwifi-trunk-r4099-20090929.tar.gz&lt;/blockquote&gt;3. Cd into the newly created directory and install the drivers. Firstly, make sure you have the kernel headers:&lt;br /&gt;&lt;blockquote&gt;sudo apt-get install build-essential&lt;/blockquote&gt;Then compile and install:&lt;br /&gt;&lt;blockquote&gt;sudo make&lt;br /&gt;sudo make install&lt;/blockquote&gt;4. Add the ath_pci module to the kernel. You need to add a line to the end of the /etc/modules file. The line should read: ath_pci. You can do this with vi of course, but if you don't know the vi editor then it would be much easier to use gedit. So, do:&lt;br /&gt;&lt;blockquote&gt;sudo gedit /etc/modules&lt;/blockquote&gt;Add ath_pci to the end of the file. Here is how my file looks:&lt;br /&gt;&lt;blockquote&gt;&lt;pre&gt;&lt;code&gt;# /etc/modules: kernel modules to load at boot time.&lt;br /&gt;#&lt;br /&gt;# This file contains the names of kernel modules that should be loaded&lt;br /&gt;# at boot time, one per line. Lines beginning with "#" are ignored.&lt;br /&gt;&lt;br /&gt;lp&lt;br /&gt;sbp2&lt;br /&gt;ath_pci&lt;/code&gt;&lt;/pre&gt;&lt;/blockquote&gt;At this point you can reboot and you should have wireless. You could save yourself a reboot by modprobing the kernel with the ath_pci module like this:&lt;br /&gt;&lt;blockquote&gt;sudo modprobe ath_pci&lt;/blockquote&gt;That's done:)</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5589530466015873558/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/07/install-wireshark-madwifi-and-rt2870.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5589530466015873558'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5589530466015873558'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/07/install-wireshark-madwifi-and-rt2870.html' title='Install madwifi in UBUNTU 10.04'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8579322117066113234</id><published>2010-07-01T11:39:00.011-05:00</published><updated>2010-07-06T11:30:54.193-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>Digest: container</title><content type='html'>将一个容器复制给另一个容器时，类型必须匹配：容器类型和元素类型都必须一致。&lt;br /&gt;&lt;br /&gt;迭代器first和last如果满足以下两点，则可以形成一个迭代器范围：1、它们指向同一个容器中的元素或超出末端的下一个位置；如果两个迭代器不相等，则对first反复应用自增加运算必须能够到达last，即，务必在使用前检查last绝对不能位于first之前。&lt;br /&gt;&lt;br /&gt;使用迭代器时，通常可以编写程序使得要求迭代器有效的代码范围较短。然后，在该范围内，严格检查每一条语句，判断是否有元素增加或者删除，从而相应的调整迭代器的值。此外，任何insert、push、assign操作都会导致原迭代器失效。当编写循环将元素插入到vector或deque容器中时，程序必须确保迭代器在每次循环后都得到更新。&lt;br /&gt;vector"int"&lt;int&gt;::iterator first = v.begin(); //cache begin iterator&lt;br /&gt;//safer: recalaulate end on each trip whenever the loop adds/erases elements&lt;br /&gt;while (first != v.end()) { &amp;nbsp;//do some processing in block...&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; //insert new value, meanwhile update the first iterator&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; first = v.insert(first, 42);&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; ++first; &amp;nbsp; &amp;nbsp;//advance first just past the element added just now&lt;br /&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp; } &amp;nbsp; &amp;nbsp;//example ends&lt;br /&gt;&amp;nbsp;&amp;nbsp; &lt;br /&gt;在调用front或back函数之前，或者在对begin或end返回的迭代器进行解引用运算之前，必须保证容器非空。例如，进行 if(!ilist.empty()){...}的检查，否则，上述四个语句的操作都是没有定义的。&lt;/int&gt;&lt;br /&gt;&lt;br /&gt;&lt;int&gt;&lt;/int&gt;如果程序要求随机访问元素，则应使用vector或deque容器；如果程序必须在容器中间位置插入或者删除元素，则应采用list容器。如果无法确定某种应用应当采取哪种容器，则编写代码时应尝试只使用vector和list容器都提供的操作：使用迭代器，而不是下表，并且避免随机访问元素。这样编写代码，在必要的时候，可以很方便将程序从使用vector修改为使用list容器。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8579322117066113234/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/07/20100701-digest-container.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8579322117066113234'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8579322117066113234'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/07/20100701-digest-container.html' title='Digest: container'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3494787189536149142</id><published>2010-06-30T15:34:00.005-05:00</published><updated>2010-07-06T11:30:36.595-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>comp.lang.c is a good place:)</title><content type='html'>Q: I'm trying to define a few simple little function-like macros such as&lt;br /&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt;      &lt;/span&gt;#define square(x) x * x&lt;br /&gt;but they're not always working.&lt;br /&gt;----------&lt;br /&gt;A: &lt;b&gt;There are three important rules to remember when defining function-like macros&lt;/b&gt;:&lt;br /&gt;The macro expansion must always be parenthesized to protect any lower-precedence operators from the surrounding expression. Given the (incorrect) square() macro above, the invocation&lt;br /&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class="Apple-style-span" style="white-space: pre;"&gt;      &lt;/span&gt;1 / square(n)&lt;br /&gt;would expand to&lt;br /&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class="Apple-style-span" style="white-space: pre;"&gt;      &lt;/span&gt;1 / n * n&lt;br /&gt;(which evaluates as (1 / n) * n), while what you want is&lt;br /&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt;       &lt;/span&gt;1 / (n * n)&lt;br /&gt;(In this case, the problem is one of associativity rather than precedence, but the effect is the same.)&lt;br /&gt;Within the macro definition, all occurrences of the parameters must be parenthesized to protect any low-precedence operators in the actual arguments from the rest of the macro expansion. Again given the square() macro above, the invocation&lt;br /&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class="Apple-style-span" style="white-space: pre;"&gt;      &lt;/span&gt;square(n + 1)&lt;br /&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt;&lt;/span&gt;&lt;br /&gt;would expand to&lt;br /&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class="Apple-style-span" style="white-space: pre;"&gt;      &lt;/span&gt;n + 1 * n + 1&lt;br /&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt;&lt;/span&gt;&lt;br /&gt;But what you want is&lt;br /&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class="Apple-style-span" style="white-space: pre;"&gt;      &lt;/span&gt;(n + 1) * (n + 1)&lt;br /&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt;&lt;/span&gt;&lt;br /&gt;If a parameter appears several times in the expansion, the macro may not work properly if the actual argument is an expression with side effects. Yet again given the square() macro above, the invocation&lt;br /&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class="Apple-style-span" style="white-space: pre;"&gt;      &lt;/span&gt;square(i++)&lt;br /&gt;would expand to&lt;br /&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class="Apple-style-span" style="white-space: pre;"&gt;      &lt;/span&gt;i++ * i++&lt;br /&gt;which is undefined (see question 3.2).&lt;br /&gt;The proper definition of a square macro, to comply with rules 1 and 2 above, is&lt;br /&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class="Apple-style-span" style="white-space: pre;"&gt;      &lt;/span&gt;#define square(x) ((x) * (x))&lt;br /&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt;&lt;/span&gt;&lt;br /&gt;Complying with rule 3 is harder. Sometimes, careful exploitation of the short-circuiting behavior of the &amp;amp;&amp;amp;, ||, or ?: operators (see question 3.6) can arrange that a parameter which appears several times is guaranteed to be evaluated exactly once. Sometimes, the macro is just documented as being unsafe, and callers must remember not to use it on arguments with side effects. Other times, it may be advisable not to compose a function-like macro if it can't be made safe.&lt;br /&gt;(As a stylistic convention, macros are often defined with capitalized or all-upper-case names, to make it obvious that they are macros. It may be acceptable to define a function-like macro with an all-lower-case name, if it truly simulates a function, but only if it complies with all three rules above. Since the squaring macro we've been discussing does not, it should be defined as something like&lt;br /&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span class="Apple-style-span" style="white-space: pre;"&gt;      &lt;/span&gt;#define Square(x) ((x) * (x))&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;/* UNSAFE */&lt;br /&gt;if it is to be used at all.)&lt;br /&gt;&lt;br /&gt;References: K&amp;amp;R1 Sec. 4.11 p. 87&lt;br /&gt;K&amp;amp;R2 Sec. 4.11.2 p. 90&lt;br /&gt;H&amp;amp;S Secs. 3.3.6,3.3.7 pp. 49-50&lt;br /&gt;CT&amp;amp;P Sec. 6.2 pp. 78-80&lt;br /&gt;&lt;a href="http://groups.google.com/group/comp.lang.c/browse_thread/thread/57175d098e52a10d?hl=en"&gt;original question&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3494787189536149142/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/complangc-is-good-place.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3494787189536149142'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3494787189536149142'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/complangc-is-good-place.html' title='comp.lang.c is a good place:)'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-9177840571270403722</id><published>2010-06-29T15:31:00.003-05:00</published><updated>2010-07-06T11:30:08.761-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>Study digest: standard library functions</title><content type='html'>C vs. C++ 其中一个显式区别，就是后者增添了标准库类型，vector、string、bitset。&lt;br /&gt;&lt;br /&gt;以vector为例，实际上可将其看成是一个可变长度的数组，迭代器类比于增强版本的指针。而标准库函数最大的好处在于其成员函数，可以轻松地完成一些在C语言中需要特定代码段完成的功能。并且，就安全性而言，vector的迭代器也不必处处小心诸如指针初始化、或者指针越界之类的隐藏错误。&lt;br /&gt;&lt;br /&gt;而标准库函数中的string，比C语言中处理字符的char*，在实际应用中限制也更少。主要问题仍然是，C语言将字符串作为数组处理，则合并、拷贝时，必须考虑到起始点以及总长度的问题，这也就造成了代码块的可移植性受到了很大的限制。而C++不存在这样的问题，因为其语言的标准库处理所有的内存管理问题。只要在开始阶段定义了string型变量，则接下来的操作和一般的变量赋值加减的操作无异了。此外，C风格字符串一个更严重的缺陷在于默认null结尾字符的存在，strlen的返回值必须加一才是整个数组的真正长度，这样的细微之处很可能在数组操作时成为一个隐患。&lt;br /&gt;&lt;br /&gt;标准库提供的bitset操作，更直接，更容易阅读和书写、正确使用的可能性更高。而且，bitset对象的大小不受unsighed数的位数限制。通常来说，bitset优于整型数据的低级直接位操作。&lt;br /&gt;&lt;br /&gt;综上，C语言风格的内置数组和C++标准库函数相比，更易于出错，更难于理解难于调试，。所以除非是在极端要求代码执行速度的情况，否则使用C++的标准库函数更好。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/9177840571270403722/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/study-digest-standard-library-functions.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/9177840571270403722'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/9177840571270403722'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/study-digest-standard-library-functions.html' title='Study digest: standard library functions'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5139430596389843099</id><published>2010-06-28T11:06:00.002-05:00</published><updated>2010-07-06T11:30:24.665-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Programming'/><title type='text'>Digest: four important data type in C++</title><content type='html'>&lt;b&gt;1.const的用法：&lt;/b&gt;&lt;br /&gt;为什么使用const？采用符号常量写出的代码更容易维护；指针常常是边读边移动，而不是边写边移动；许多函数参数是只读不写的。const最常见用途是作为数组的界和switch分情况标号（也可以用枚举符代替）&lt;br /&gt;&lt;br /&gt;用法1：常量&lt;br /&gt;取代了C中的宏定义，声明时必须进行初始化。const限制了常量的使用方式，并没有描述常量应该如何分配。如果编译器知道了某const的所有使用，它甚至可以不为该const分配空间。最简单的常见情况就是常量的值在编译时已知，而且不需要分配存储。（摘自《C++ Program Language》）用const声明的变量虽然增加了分配空间，但是可以保证类型安全。C标准中，const定义的常量是全局的。在C++中，const对象默认为定义它的文件的局部变量，那么把它定义在头文件中，也就意味着每个包含该头文件的源文件都有了自己的const变量，其名称和值都是一样的。&lt;br /&gt;&lt;br /&gt;用法2：指针和常量&lt;br /&gt;使用指针时涉及到两个对象：该指针本身和被它所指的对象。将一个指针的声明用const“预先固定”将使那个对象而不是使这个指针成为常量。要将指针本身而不是被指对象声明为常量，必须使用声明运算符*const。所以出现在 * 之前的const是作为基础类型的一部分：&lt;br /&gt;char *const cp; //到char的const指针&lt;br /&gt;char const *pc1; //到const char的指针&lt;br /&gt;const char *pc2; //到const char的指针（后两个声明是等同的）&lt;br /&gt;从右向左读的记忆方式：&lt;br /&gt;cp is a const pointer to char.&lt;br /&gt;pc2 is a pointer to const char.&lt;br /&gt;&lt;br /&gt;用法3：const修饰函数传入参数&lt;br /&gt;将函数传入参数声明为const，以指明使用这种参数仅仅是为了效率的原因，而不是想让调用函数能够修改对象的值。同理，将指针参数声明为const，函数将不修改由这个参数所指的对象。通常修饰指针参数和引用参数：&lt;br /&gt;void Fun( const A *in); //修饰指针型传入参数&lt;br /&gt;void Fun(const A &amp;amp;in); //修饰引用型传入参数&lt;br /&gt;&lt;br /&gt;用法4：修饰函数返回值&lt;br /&gt;可以阻止用户修改返回值。返回值也要相应的付给一个常量或常指针。&lt;br /&gt;&lt;br /&gt;用法5：const修饰成员函数&lt;br /&gt;1、const对象只能访问const成员函数，而非const对象可以访问任意的成员函数，包括const成员函数；2、const对象的成员是不能修改的，而通过指针维护的对象确实可以修改的；3、const成员函数不可以修改对象的数据，不管对象是否具有const性质。编译时以是否修改成员数据为依据进行检查。&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;2.static的用法：&lt;/b&gt;&lt;br /&gt;静态变量作用范围在一个文件内，程序开始时分配空间，结束时释放空间，默认初始化为0，使用时可以改变其值。静态变量或静态函数只有本文件内的代码才能访问它，它的名字在其它文件中不可见。&lt;br /&gt;&lt;br /&gt;用法1：函数内部声明的static变量，可作为对象间的一种通信机制&lt;br /&gt;如果一局部变量被声明为static，那么将只有唯一的一个静态分配的对象，它被用于在该函数的所有调用中表示这个变量。这个对象将只在执行线程第一次到达它的定义使初始化。&lt;br /&gt;&lt;br /&gt;用法2：局部静态对象&lt;br /&gt;对于局部静态对象，构造函数是在控制线程第一次通过该对象的定义时调用。在程序结束时，局部静态对象的析构函数将按照他们被构造的相反顺序逐一调用，没有规定确切时间。&lt;br /&gt;&lt;br /&gt;用法3：静态成员和静态成员函数&lt;br /&gt;如果一个变量是类的一部分，但却不是该类的各个对象的一部分，它就被成为是一个static静态成员。一个static成员只有唯一的一份副本，而不像常规的非static成员那样在每个对象里各有一份副本。同理，一个需要访问类成员，而不需要针对特定对象去调用的函数，也被称为一个static成员函数。需要注意，类的静态成员函数只能访问类的静态成员（变量或函数）。&lt;br /&gt;&lt;br /&gt;&lt;b&gt;3.extern的用法：&lt;/b&gt;&lt;br /&gt;extern可以声明其他文件内定义的变量。在一个程序里，一个对象只能定义一次，它可以有多个声明，但类型必须完全一样。如果定义在全局作用域或者名字空间作用域里某一个变量没有初始化，它会被按照默认方式初始化。&lt;br /&gt;&lt;br /&gt;将变量或函数声明成外部链接，即该变量或函数名在其它函数中可见。被其修饰的变量（外部变量）是静态分配空间的，即程序开始时分配，结束时释放。在C++中，还可以指定使用另一语言链接，需要与特定的转换符一起使用。&lt;br /&gt;extern “C” 声明语句&lt;br /&gt;extern “C” { 声明语句块 }&lt;br /&gt;&lt;br /&gt;需要注意声明和定义之间的区别（from 《C++ Primer》）&lt;br /&gt;extern int ival1; &amp;nbsp; &amp;nbsp; //it's a&amp;nbsp;declaration.&lt;br /&gt;extern int ival2=10; &amp;nbsp;//initializer, so it's a definition.&lt;br /&gt;double fica_rate; &amp;nbsp; &amp;nbsp; //no extern, so it's a definition.&lt;br /&gt;同一个程序中，有两个以上的文件含有上述对于同一个变量的任一种定义，都会导致多重定义链接错误。&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;b&gt;4.volatile的用法：&lt;/b&gt;&lt;br /&gt;类型修正符（type-modifier），限定一个对象可被外部进程（操作系统、硬件或并发进程等）改变。volatile与变量连用，可以让变量被不同的线程访问和修改。常用于像中断处理程序之类的异步进程进行内存单元访问。声明时语法：&lt;br /&gt;int volatile vInt;&lt;br /&gt;&lt;br /&gt;除了基本类型外，对用户定义类型也可以用volatile类型进行修饰。特别注意：可以把一个非volatile int赋给volatile int，但是不能把非volatile对象赋给一个volatile对象。一个有volatile标识符的类只能访问它接口的子集，一个由类的实现者控制的子集。用户只能用const_cast来获得对类型接口的完全访问。此外，volatile向const一样会从类传递到它的成员。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5139430596389843099/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/digest-four-important-data-type-in-c.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5139430596389843099'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5139430596389843099'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/digest-four-important-data-type-in-c.html' title='Digest: four important data type in C++'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-975818231149919287</id><published>2010-06-25T15:13:00.001-05:00</published><updated>2010-06-25T15:21:07.560-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Movie'/><title type='text'>million dollar baby</title><content type='html'>和L的电话里说了好多。这样一部感动我的电影，让我有了想要写下些什么的冲动。&lt;br /&gt;&lt;br /&gt;电影中可用以回顾的东西太多，以至于我很难用其中的某一句话给电影在豆瓣里做一个标记——以前我总是习惯如此，拿自认为感触最深的一句话作为电影的总结，我曾经看过了。但百万宝贝不是。里面的很多话，用弗里德曼磁性的声音，演绎的犹如寓言：Winner is simply willing to do the things that loser won't......Boxing is about respect. Getting it for yourself, and taking it away from the other guy......If there's magic in boxing: it's the magic of fighting battles beyond endurance, beyond cracked ribs, ruptured kidneys, and detached retinas......&lt;b&gt;It's the magic of risking everything for a dream that nobody sees but you&lt;/b&gt;......Frankie liked to say that boxing is an unnatural act that everything in boxing is backwards. Sometimes, best way to deliver a punch is step back. But step back too far, you ain't fighting at all.......Boxing is an unnatural act. Because everything in it is backwards. You wanna move to the left you don't step left, you push on the right toe. To move right, you use your left toe. Instead of running from the pain, like a sane person would do, you step into it......&lt;br /&gt;&lt;br /&gt;看过开头，如同monga，我料到这会是悲剧一出。很久以前看到的一句话分外贴切，我们是糖，甜到哀伤。maggie，剧中出场时还有月余就满32岁的小女人。微笑着，面对埃斯特伍德一次次冷血的拒绝。微笑着，把食客们吃剩的牛扒包进锡纸里，并笑着告诉老板要拿它回家喂小狗。微笑着，拿过弗里德曼手中破旧的拳击鞋和speed ball，说自己先借着，买了就还回来。微笑着，拿到两美元小费攒齐了买新speed ball的所有钱，然后欣喜的在体育用品店老板柜台上掏出一大堆硬币以及小额钞票，这是她给自己32岁买的生日礼物。当然，埃斯特伍德决定收她为徒时候，她笑得更加灿烂。以及每次打赢比赛，都笑得很傻，问埃斯特伍德，老板，我打的不错吧。&lt;br /&gt;&lt;br /&gt;当然，她也有不笑的时候。比如镜头几次切换到她回家的公车上。藏在宽大的套头衫里，她表情严峻的注视着窗外；或者正在一口水，一口剩牛排，吃着晚餐。在家的时候，拿一个小本子，细心地记下每一小笔收入，算着再过多久能买个speed ball，或者还要再攒多久，可以给妈妈和妹妹买套房子。还有在gym的时候，永远在专注的全力以赴。&lt;br /&gt;&lt;br /&gt;三位主角，独自一人时，幽怨而缓慢的吉他配乐。训练室里的荤笑话和一群粗人挑逗的笑声。拳击场旁观中的尖叫声。还有出现很多的，拳头打击沙袋或者speed ball的声音，短促而有力。所有的这些声响，叠加在一起，观看时候，就实实在在的堵在我胸口上。&lt;br /&gt;&lt;br /&gt;她的结局，似乎早已注定。专注和不知疲惫的奉献，成就了这个世界冠军；而纯真又不知自我保护，让她在这个险恶的世界里，从伤痕累累最终倒下不起。看到最后才发觉，原来见方的拳击台，只是作者表达思想而戏剧化出来的一个舞台而已。光阴在此，演绎的更加绚烂而摄人心魄。一个人从降生开始，生命就成了无数的随机事件不断累积之和，加之事物与生俱来的两面性，很难讲如何才能够善始善终。言行无愧于本心，尽力而无愧于时间，倒是可以做到且要时刻警醒达到的。&lt;br /&gt;&lt;br /&gt;弗里德曼在影片最后宽慰埃斯特伍德的一段话：Maggie walked through that door with nothing but guts. No chance in the world of being what she needed to be. A year and a half later, she's fighting for the championship of the world. You did that. People die every day, Frankie. Mopping floors, washing dishes. And you know what their last thought is?--"I never got my shot." Because of you, Maggie got her shot. If she dies today, you know what her last thought will be?--"I think I did all right. I know I could rest with that."</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/975818231149919287/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/million-dollar-baby.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/975818231149919287'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/975818231149919287'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/million-dollar-baby.html' title='million dollar baby'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5713023366750842289</id><published>2010-06-25T07:55:00.002-05:00</published><updated>2011-02-28T14:21:26.807-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Network'/><title type='text'>Network Simulator</title><content type='html'>最近一直在鼓捣网络仿真软件，逐渐发现些开源的好处，大家都在整理资料，都在去努力完善一个项目。当这样的行为发生在某一群向着相同目标进发的专业人士身上，似乎惺惺相惜的感觉就更加强烈。当然，我还只能算作业余，逐渐把自己用到的链接添加在这里，应该比仅仅下载到本地的作用会更大。&lt;br /&gt;&lt;br /&gt;Useful references (order from more basic to more complex):&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www-sop.inria.fr/maestro/personnel/Eitan.Altman/COURS-NS/n3.pdf"&gt;NS Simulator for Beginners, lecture notes&lt;/a&gt; This is a very good point to begin with.&lt;br /&gt;&lt;a href="http://wcc.iiita.ac.in/ns/nstutorial.pdf"&gt;Sandeep Gupta NS tutorial&lt;/a&gt;&amp;nbsp; Very simple and straightforward slides.&lt;br /&gt;&lt;a href="http://nile.wpi.edu/NS/"&gt;NS by Examples&lt;/a&gt; Practical breakpoints to get involved. The comments are also useful if the current version of ns-2 cannot debug the original code.&lt;br /&gt;&lt;a href="http://www.isi.edu/nsnam/ns/tutorial/index.html"&gt;Marc Greis' Tutorial&lt;/a&gt;&amp;nbsp; This is the classic and most important tutorial. It has been fully recommend to MASTER the step-by-step exercises it describes, especially if you are going to change the NS2 code. The Ping Agent that he describes is very important to do it yourself, instead of simply downloading the c++ files and compiling it. Furthermore, refer to this post on the ns2 mailing list to know the additional steps required on the ping agent on the newest versions of NS2. (&lt;a href="http://mailman.isi.edu/pipermail/ns-users/2006-January/053697.html"&gt;click&lt;/a&gt;)&lt;br /&gt;&lt;a href="http://nsnam.isi.edu/nsnam/index.php/Main_Page"&gt;New NS wiki&lt;/a&gt; There are lots of information which order in a more structured way.&lt;br /&gt;&lt;a href="http://www-sop.inria.fr/mistral/personnel/Eitan.Altman/ns.htm"&gt;NS Simulator Courses for Beginner&lt;/a&gt; Although it has BEGINNER in the caption, the destination is to check the scripts. We can also refer to the /ns/tcl/ex and /ns/tcl/test directories of ns2 source tree.&lt;br /&gt;&lt;a href="http://www.isi.edu/nsnam/ns/ns-documentation.html"&gt;NS Manual&lt;/a&gt; is used to peek the reference documentation.&lt;br /&gt;&lt;a href="http://140.116.72.80/%7Esmallko/ns2/NS_From%20China.rar"&gt;NS中文手册&lt;/a&gt;&lt;br /&gt;&lt;a href="http://masimum.dif.um.es/nsrt-howto/pdf/nsrt-howto.pdf"&gt;Implementing a New Manet Unicast Routing Protocol in NS2&lt;/a&gt;&lt;br /&gt;&lt;a href="http://icapeople.epfl.ch/aad/teaching/ns/ns-2-for-the-impatient.pdf"&gt;ns2 for the Impatient&lt;/a&gt;&lt;br /&gt;&lt;a href="http://info.iet.unipi.it/%7Ecng/ns2measure/manual-060529.pdf"&gt;ns2measure manual&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Personal web pages: &lt;br /&gt;&lt;a href="http://140.116.72.80/%7Esmallko/ns2/ns2.htm"&gt;柯志亨教授的主页&lt;/a&gt; has many useful references and video guidance.&lt;br /&gt;&lt;a href="http://tagus.inesc-id.pt/%7Epestrela/ns2/"&gt;Pedro Vale Estrela's NS2 Page&lt;/a&gt;&lt;br /&gt;&lt;a href="http://personal.ee.surrey.ac.uk/Personal/L.Wood/ns/"&gt;Lloyd Wood's NS2 Page&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5713023366750842289/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/network-simulator.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5713023366750842289'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5713023366750842289'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/network-simulator.html' title='Network Simulator'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4781047785437917692</id><published>2010-06-19T16:37:00.001-05:00</published><updated>2010-06-19T16:38:36.729-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>recent update</title><content type='html'>一周的时间，生活改变了不少。可以按照自己的时间睡觉、起床。也可以躺在床上给小同学打电话。除了电话，一直不说话，感觉也还不错:) 做了一次西红柿牛腩，味道最终很像烤牛肉干，可以算作失之东隅收之桑榆么。出门跑步，把钥匙放在隔墙上，结果掉到了空心的墙壁中，钓了整整一晚。世界杯开幕了，兴趣一般，也许是听不到母语解说的缘故，不能嘲笑解说时而的短路，于是比赛也索然了很多。&lt;br /&gt;&lt;br /&gt;周三见了老师，笑眯眯的样子，应该是蛮好相处。组里的同学，接触较多的两个印度人，暂时还算友好。测量增益的实验，这周没有做成，下周一希望能用少量的时间完成。折腾了两天，终于自己安装好了cygwin和ns-2，竟然终究是版本兼容的问题，还枉费我卸了装、装了卸的鼓捣了半天gcc……上个学期dsp课程设计，我学会了应该如何解读完全陌生的matlab代码，这次学会了如何在感觉上乱七八糟的英文google信息中找到自己想要的东西，也算是有所得的。实验先从SISO的状况开始，仿真一下手中已有的几个算法，归一化所有的自变量，之后希望自己能给出一个MIMO的测试结果，这样结合实际测量的一些初步结果，就可以攒一篇论文出来了。&lt;br /&gt;&lt;br /&gt;效率高些。也希望这段时间快点过。我想回家了。 想她了。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4781047785437917692/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/recent-update.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4781047785437917692'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4781047785437917692'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/recent-update.html' title='recent update'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-67760147103800975</id><published>2010-06-11T11:39:00.000-05:00</published><updated>2010-06-11T11:39:47.706-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Good luck:)</title><content type='html'>Cherubic cutie, you will be alright. I will bless for you all day long...</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/67760147103800975/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/good-luck.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/67760147103800975'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/67760147103800975'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/good-luck.html' title='Good luck:)'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2954901973502129513</id><published>2010-06-03T21:25:00.001-05:00</published><updated>2010-06-06T09:45:03.604-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='belief'/><title type='text'>missing</title><content type='html'>其实什么事情都没有发生，日子就如往常般平淡着过着。可就是想你，无法抑制，不能自已。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2954901973502129513/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/missing.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2954901973502129513'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2954901973502129513'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/missing.html' title='missing'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2407398790746220039</id><published>2010-06-02T19:26:00.000-05:00</published><updated>2010-06-02T19:26:29.272-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>raining and waiting</title><content type='html'>austin的雨水总是很迷人。身处一个古香古色的自习室里，又是独自一人占据这个大屋子。桌子、百叶窗、窗掾的暗红色木质感配合淡黄色的灯光，让人感觉安逸。雨水就这样一阵阵间断而急促的敲打着玻璃。之前下雨时在宿舍，总会感慨，有个屋檐可以躲避雨水而安然入睡，真好。现在的感慨是，有个屋檐，可以静听雨声，读读书写写字，真好。总之，真好。&lt;br /&gt;&lt;br /&gt;6月12日老师才会从外地抵达学校。自己的研究方向最终的确定，也需要等到那会儿。然后，又是一个多月后，才能回国，才能见到lan。又是一个漫长的等待。我所能做的，就是按时做好自己份内的事情。然后每日掰着手指数上一遍。想念是很玄的东西，无论如何形容，都无法尽情展述。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2407398790746220039/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/raining-and-waiting.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2407398790746220039'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2407398790746220039'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/06/raining-and-waiting.html' title='raining and waiting'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5679411677914604497</id><published>2010-05-23T10:08:00.002-05:00</published><updated>2010-05-23T15:49:22.615-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='belief'/><title type='text'>@ Starbucks</title><content type='html'>昨天舍友对我说，你甭去学校看书了。&lt;br /&gt;我问为啥？&lt;br /&gt;他说，你这么努力我压力太大了。&lt;br /&gt;我只是笑，然后补充一句，这样充实着挺好的。&lt;br /&gt;他皱着眉头来回踱着步子，然后抬起头来对我说，你怎么从三四月份的时候开始，好像变了一个人似的，以前你还会偶尔比我起的晚的，现在我起床时候是完全看不见你了。&lt;br /&gt;&lt;br /&gt;事物是普遍联系的:)我生活中的基本改变都他晓得，但他显然还没有把所有这些联系到一起。&lt;br /&gt;&lt;br /&gt;初中物理有一个这样的实验。一个U型铁安静的架在桌子上，老师又拿来另外一个相同的U型铁，轻敲其中一个，两个家伙都发出了动听的声音，彼此呼应。我想，这可以作为解释。我印象中的自己，原本就应该是这个样子。安静的思考，安静的读书，安静的把所有份内的事情做好。她让我在浮躁或是压力四溢的时候，也能够记得自己本来的样子。我们很像。尽管她是个晚辈，还是可以彼此倾诉彼此思念，真好。&lt;br /&gt;&lt;br /&gt;now i am in a starbucks shop. when i entered here, i asked the waiter, i dont wanna buy coffee or tea, but the library wont open till noon, can i stay here? he smiled and replied, sure. so nice a person:)</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5679411677914604497/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/starbucks.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5679411677914604497'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5679411677914604497'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/starbucks.html' title='@ Starbucks'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2217505519877767356</id><published>2010-05-20T09:44:00.000-05:00</published><updated>2010-05-20T09:44:09.590-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>summer plan</title><content type='html'>假期开始了，研究的事情还是没有什么着落。有点儿焦虑。但无论如何，日子还是在一分一秒一天一天的过。所以书，还是要看的；代码，也还是要学要写的。给自己列个简单的计划，就算只能完成其中的一部分，也算是没有虚度时光了。&lt;br /&gt;&lt;br /&gt;需要重新阅读的三本数学书：&lt;br /&gt;1. Fourier series and integrals;&lt;br /&gt;2. Complex analysis;&lt;br /&gt;3. Measure theory, Lebesgue integration, and Hilbert space.&lt;br /&gt;(all&amp;nbsp;written&amp;nbsp;by Elias M. Stein and Rami Shakarchi)&lt;br /&gt;&lt;br /&gt;有关专业：&lt;br /&gt;看完 Programming Collective Intelligence&lt;br /&gt;结合python的编译器构建一个小型的优化推荐引擎。&lt;br /&gt;&lt;br /&gt;有关杂书：&lt;br /&gt;去年放假在HALF PRICE BOOKS买的一坨小说还基本没怎么碰过，好歹也要看完一两本，以后才能再有信心逛书店不是？</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2217505519877767356/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/summer-plan.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2217505519877767356'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2217505519877767356'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/summer-plan.html' title='summer plan'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4377498745731190382</id><published>2010-05-17T18:25:00.000-05:00</published><updated>2010-05-17T18:25:19.568-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='belief'/><title type='text'>final complete</title><content type='html'>第一学年的学业宣告结束了。这个学期，收获和教训都不少，写在这里，权当是供自己以后随时比照提高了。&lt;br /&gt;&lt;br /&gt;有件事情印象深刻，就是某个论坛上，主讲人问大家感觉学习过程中哪个环节的收获最多。选项依次是课堂讲解、阅读材料、完成作业、答疑解惑、考前复习。第一项基本没人举手。在座为数不多的中国、韩国学生几乎都把票投给了第二项。而占教室人数绝对多数的美国人都在第三项时候举了手。当然，这样的调查本意仅仅是提供一个教学过程讨论的样本，注重哪里也没有什么本质的对错之分。可对我而言，自问的是自己是不是太忽视作业在整个学习过程中的作用了。且不说作业和考试的联系紧密。大家的一个共识是，在课堂上老师可以传授的信息十分有限。那么如何补充和提高。阅读固然是一个有效的途径。可是作业涉及了哪些知识，这些知识之间的联系是什么，有没有什么理论上多样化的解释，在实际运算过程中有什么技巧可以应用，这些技巧的依据又在哪里。大学时养成最坏的毛病，就是抄作业。现在努力改变，可仍然仅仅停留在表面功夫的层次。和别人讨论起某门课程，反应是，作业太他妈多了。可等到期末才发现，把这些作业反复申明的要旨串联起来，一门课的构架就清晰可见了。而很多细节，因为复习时间仓促，根本没有机会去细细思考清楚。很是惭愧，感觉浪费了老师的良苦用心。&lt;br /&gt;&lt;br /&gt;此外一个仍没有任何好转的缺点，就是提问。我的自我定位，一直都认为自己不是什么好面子的人。可是课堂上遇到了困难，第一反应是，这个我先回去查查吧。难得有节课完全听懂了，旁边的印度学生咕叽咕叽的左问一个右问一下，我还在心里想，靠，大哥，这么傻逼的问题回去先想想再说好吧。的确，80%的问题都是白痴问题。估计老师每次笑眯眯的先说一句that's a good question时候，心里也很苦，没准儿暗自骂着这帮孙子原来课下都是不看书的啊。可是重点在于，很多时候我课下就把查阅某个问题的事情忘得一干二净了，偶尔想起来，翻阅各种资料，一会儿绝望一会儿郁闷的思考个中奥妙，其实远不如上课问一句，或者哪怕课后问一句，老师一句话，也许什么就都了然了。被鄙视一下也没损失什么。自己有个好成绩，还少走了不少冤枉路，不也正和着偷懒的性格么:)&lt;br /&gt;&lt;br /&gt;复习过程，收获不少。记得之前澜老师总结的还是很精辟的：&lt;b&gt;学习新知识的最短途径，大致说是需要三遍，首先，要细细的读一遍，这个过程很漫长，通常是放在平日来做的；其次，是重温的过程，，已经明白了原理，这个过程会很快，应当是放在临近期末的时候来做的（想要很好的掌握就要不时的唤醒一下）；最后，即临考前的时间，应当是且只是挑重点来背背。&lt;/b&gt;（全体起立鼓掌～～）这次我的两门需要期末的课程，平日学习多的那门复习起来就是轻松很多。更重要的是，在重看的过程中，很多定理之间深层次的联系豁然开朗了。答疑时候去找老师，告诉他说，我问的不是题目，是一些基本概念的理解，诸如它们是不是可以如此这般如此这般的放到一起，某个定理是不是用来约束其后某章所有概念的，如果放开这些约束是不是会这样……如此这般，老师的态度出奇的好。估计这也和他已经被白痴问题折磨了一天有关=] 另外一门单单就理解而言就差了很多，不过最后看着自己从混沌中勾勒出一个框架，并且把所有知识分门别类的放进去，成就感也还是不小的。&lt;br /&gt;&lt;br /&gt;最后想感谢一下CCTV和MTV。这个学期不容易，和几个不干活的印度人一起做了一个不大不小的课设，独立完成了一个从任何角度而言都蛮浩瀚的工程绪论。写了两篇研究报告，考了七次大大小小的试。感谢每天叫我起床的小家伙。你对我的影响比你想象中的还要大。我会面对着屏幕傻笑，也可以连续两周每天十五个小时泡在图书馆里。一日分作两天，于是度日如年。你让我心里很安静。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4377498745731190382/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/final-complete.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4377498745731190382'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4377498745731190382'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/final-complete.html' title='final complete'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4234933541282039133</id><published>2010-05-15T01:06:00.002-05:00</published><updated>2010-05-15T01:06:57.421-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>rain</title><content type='html'>屋顶的石棉瓦，滴滴答答的尽是雨声。真好</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4234933541282039133/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/rain.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4234933541282039133'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4234933541282039133'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/rain.html' title='rain'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3223294925682806468</id><published>2010-05-13T18:13:00.000-05:00</published><updated>2010-05-13T18:13:18.018-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>find the crack</title><content type='html'>这是fringe里面的一句话。刻在一杆钢笔上。“In the darkness, there's always a crack.&amp;nbsp;It's how the light gets in.”每个人都依赖着某种信仰，或是友情或是亲情或是爱情，或者最基本的普世价值。包括这个系列剧，还有bones、the mentalist、leverage、friends、lost，尽管是情节纯属虚构，如有雷同纯属巧合。但一路披荆斩棘，贴心的只言片语仍然让人感慨良深。&lt;br /&gt;&lt;br /&gt;这段时间复习考试，总会感到绝望。似乎以前期中考试时候标出的难点、做错的题目，现在看来依然难寻思路，依然被相同的一块石头绊倒。每看一章都会标出很多的问号，又怕尽是些浅显的问题，答疑时候被老师鄙视，于是只好先自己苦苦思索，然后问徐同学陈同学等高材生。确定了剩余问题的高难度系数，才好敲老师的办公室。前天傍晚，看了一天的笔记进度只有不到十页。实在是不想再继续下去。于是思考着，回寝室打一晚实况足球也未尝不可。坐在校车上，看着其他的同学都在捧着标识成五颜六色的教材一路阅读。很是惭愧。结果到了寝室那站也没有下车，整整坐了45分钟校车，围着lake austin转了一整圈，又回到了校园始发站，下车，图书馆，继续看书。&lt;br /&gt;&lt;br /&gt;在车上想，其实我是进步的。以前也有挣扎，然后妥协，奔向网吧或者找几个好友路边吃串喝酒去了。现在挣扎，然后回来做该做的事情。好吧。其实所剩余的不足，仍然出在平日。如果惰性小些，可能问题当堂解决，作业随后提问，也就没有现在的堆积如山了。自己的学生生涯，满打满算还有五到六门课程，然后就都是看论文、做实验、写论文...对此唯一的期望，便是在接下来的课程中可以稍有改观，不再让自己期末如此痛苦。&lt;br /&gt;&lt;br /&gt;In the darkness, there's always a crack.&amp;nbsp;It's how the light gets in.寻找出口的过程九转回肠。有缺口的地方，就会有光亮的地方，逐渐挖开，也许就豁然开朗了。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3223294925682806468/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/find-crack.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3223294925682806468'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3223294925682806468'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/find-crack.html' title='find the crack'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2842266956805482839</id><published>2010-05-12T08:33:00.001-05:00</published><updated>2010-05-12T08:34:47.996-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Work'/><title type='text'>Which programming language should I learn first？</title><content type='html'>digest from www&lt;br /&gt;--------&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Depends.&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;To program in an expressive and powerful language: Python&lt;/li&gt;&lt;li&gt;To get a website up quickly: PHP&lt;/li&gt;&lt;li&gt;To mingle with programmers who call themselves “rockstars”: Ruby.&lt;/li&gt;&lt;li&gt;To really learn to program: C.&lt;/li&gt;&lt;li&gt;To achieve enlightenment: Scheme.&lt;/li&gt;&lt;li&gt;To feel depressed: SQL&lt;/li&gt;&lt;li&gt;To drop a chromosome: Microsoft Visual Basic&lt;/li&gt;&lt;li&gt;To get a guaranteed, mediocre, but well paying job writing financial applications in a cubicle under fluorescent lights: Java.&lt;/li&gt;&lt;li&gt;To do the same thing with certifications and letters after your name: C#&lt;/li&gt;&lt;li&gt;To achieve a magical sense of childlike wonder that you have a hard time differentiating from megalomania: Objective C&lt;/li&gt;&lt;/ul&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2842266956805482839/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/which-programming-language-should-i.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2842266956805482839'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2842266956805482839'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/which-programming-language-should-i.html' title='Which programming language should I learn first？'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2013877169840913085</id><published>2010-05-11T17:27:00.000-05:00</published><updated>2010-05-11T17:27:45.227-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='belief'/><title type='text'>student</title><content type='html'>现在习惯了另一些交流的方式，比如书写信件，比如msn，比如各种角落的留言。某些并不能够及时发现，看到时竟然会更觉亲切。期末的复习本是件琐碎而烦闷的事情，可依附于欢快的主旋律，也就不再感觉难以忍受了。以后会怎么样呢？会有各种困难、麻烦，会心烦气躁，也可能会接受或者发出些没来由的小脾气。都没有什么的。我不会怀疑，不会抱怨。没有胆量去承诺五年十年之后的光景，但有足够的勇气一步步向希望的地方前进。&lt;br /&gt;&lt;br /&gt;汉语奇妙的一词多意。“先生”可以解释为“老师”。那么我的回答就应该是“学生”了。希望的地方，就是它变换词义的地方。&lt;br /&gt;&lt;br /&gt;=)</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2013877169840913085/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/student.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2013877169840913085'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2013877169840913085'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/student.html' title='student'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2569782649094316691</id><published>2010-05-07T21:21:00.001-05:00</published><updated>2010-07-06T11:31:23.588-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><category scheme='http://www.blogger.com/atom/ns#' term='belief'/><title type='text'>recent update</title><content type='html'>一、&lt;br /&gt;能够每天见到她真好，哪怕只是面对着电脑。每次看到任务栏的窗口跳出，都像是久别重逢。会心微笑。几句之后，心里就很是温暖了。&lt;br /&gt;&lt;br /&gt;二、&lt;br /&gt;脚崴恢复了三周以后，又开始锻炼了。开始的时候用力过猛，显示连续两天锻炼，然后又打了一次网球，脚踝重新酸疼，只好稍事休息，然后循序渐进。现在又跑到了5千米。逐渐喜欢上了热身和恢复时候在泡沫垫子上压腿的时间，大抵是身体僵硬了许久，每次伸展压翘都会到全身酸软。学了两个瑜伽的动作，但实在是太困难了。只能作为偶尔心血来潮的自虐了。&lt;br /&gt;&lt;br /&gt;三、&lt;br /&gt;开始每次健身都使用桑拿浴室。和跑步类似，可以让自己长时间的处于同一状态。大脑一直在运转，但没有什么成型或者连续的逻辑，随意的很。享受这样的时候，感觉整个人都放松下来了。只是印象中，好像以前在哪里看过，过久桑拿浴好象是对男性健康不宜的……&lt;br /&gt;&lt;br /&gt;四、&lt;br /&gt;最近一直在听coldplay和suede，以及taylor swift。然后忽然换作nirvana感觉像是嗑药了，本来的困倦一扫而空，兴奋的又不知道该做些什么。&lt;br /&gt;&lt;br /&gt;五、&lt;br /&gt;还有一周，考试。然后做了许久准备的研究方向也可能会水落石出。谋事在人，成事在天。无论如何还是希望能有个好结果。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2569782649094316691/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/recent-update.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2569782649094316691'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2569782649094316691'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/recent-update.html' title='recent update'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2404997907964090328</id><published>2010-05-05T15:51:00.000-05:00</published><updated>2010-05-05T15:51:35.069-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>smiling and flying</title><content type='html'>12/96，是相片里最高比例的动作。嘴角弧线迷人的上扬，双臂张开，飞翔的样子很美好。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2404997907964090328/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/smiling-and-flying.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2404997907964090328'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2404997907964090328'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/smiling-and-flying.html' title='smiling and flying'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7470915006619668896</id><published>2010-05-02T14:07:00.001-05:00</published><updated>2010-05-02T14:18:07.298-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>study in a structure way</title><content type='html'>很久以前在某个网站上看到过，刚刚是在豆瓣又看到有人推荐了。均是转载，原作者不详，转到这里。实际上，能够把某种知识学到这样的程度，就已经可以算作得道了。做题，尽管这是一个标准化课堂最为可行的衡量依据，但也终究不是一个最终目标。在实践过程中发现自己缺乏什么，然后自我补充提高；在学习过程中注重整个知识结构的架设，基础在哪里，哪里起承转合，哪里是重点，每一项知识和实践的连接点是什么，和其它的知识点又有些什么样的联系；最后再把所有的细节都补充上。可以算作融会贯通了，也达到了最终的目标。&lt;br /&gt;&lt;br /&gt;研究方向的问题一直困扰着我。大学的时候是电磁场，我向朋友向父母抱怨，说我不知道自己喜欢什么，但确信我不喜欢一直和麦克斯韦方程组为伍。研究生转到算法方向，语音识别是个很好玩的方向，音乐分类又可以假公济私的听很多歌曲，还可以做很多好玩的实验。可很可惜的是，我今后可预见的一段时间，可能都不会有名正言顺的大块时间在这个方向推进自己的进度。而现在，很有可能在随后的几年鼓捣DNA的双链结构，我还不知道自己会不会喜欢，能不能做好。……其实什么都好。像很久前老罗说的那样，谁都知道自己不喜欢做什么。重要的是，做好一件事情，然后再去评价。这会儿才有可能像个牛人一样说，“我不喜欢这个东西，但我同样能做的很好”。&lt;br /&gt;&lt;br /&gt;希望一两年以后，我也能写出一篇像下面那样条理清晰的总结来。&lt;br /&gt;&lt;br /&gt;-----------------&lt;br /&gt;&lt;br /&gt;[转]MIT牛人解说数学体系&lt;br /&gt;&lt;br /&gt;在过去的一年中，我一直在数学的海洋中游荡，research进展不多，对于数学世界的阅历算是有了一些长进。&lt;br /&gt;&lt;br /&gt;为什么要深入数学的世界&lt;br /&gt;&lt;br /&gt;作为计算机的学生，我没有任何企图要成为一个数学家。我学习数学的目的，是要 想爬上巨人的肩膀，希望站在更高的高度，能把我自己研究的东西看得更深广一些。说起来，我在刚来这个学校的时候，并没有预料到我将会有一个深入数学的旅 程。我的导师最初希望我去做的题目，是对appearance和motion建立一个unified的model。这个题目在当今Computer Vision中百花齐放的世界中并没有任何特别的地方。事实上，使用各种Graphical Model把各种东西联合在一起framework，在近年的论文中并不少见。&lt;br /&gt;&lt;br /&gt;我不否认现在广泛流行的Graphical Model是对复杂现象建模的有力工具，但是，我认为它不是panacea，并不能取代对于所研究的问题的深入的钻研。如果统计学习包治百病，那么很多 “下游”的学科也就没有存在的必要了。事实上，开始的时候，我也是和Vision中很多人一样，想着去做一个Graphical Model——我的导师指出，这样的做法只是重复一些标准的流程，并没有很大的价值。经过很长时间的反复，另外一个路径慢慢被确立下来——我们相信，一个 图像是通过大量“原子”的某种空间分布构成的，原子群的运动形成了动态的可视过程。微观意义下的单个原子运动，和宏观意义下的整体分布的变换存在着深刻的 联系——这需要我们去发掘。&lt;br /&gt;&lt;br /&gt;在深入探索这个题目的过程中，遇到了很多很多的问题，如何描述一个一般的运动过程，如何建立一个稳定并且广泛适用的原子表达，如何刻画微观运动和宏观分布变换的联系，还有很多。在这个过程中，我发现了两个事情：&lt;br /&gt;&lt;br /&gt;我原有的数学基础已经远远不能适应我对这些问题的深入研究。在数学中，有很多思想和工具，是非常适合解决这些问题的，只是没有被很多的应用科学的研究者重视。于是，我决心开始深入数学这个浩瀚大海，希望在我再次走出来的时候，我已经有了更强大的武器去面对这些问题的挑战。&lt;br /&gt;&lt;br /&gt;我的游历并没有结束，我的视野相比于这个博大精深的世界的依旧显得非常狭窄。在这里，我只是说说，在我的眼中，数学如何一步步从初级向高级发展，更高级别的数学对于具体应用究竟有何好处。&lt;br /&gt;&lt;br /&gt;集合论：现代数学的共同基础&lt;br /&gt;&lt;br /&gt;现代数学有数不清的分支，但是，它们都有一个共同的基础——集合论——因为 它，数学这个庞大的家族有个共同的语言。集合论中有一些最基本的概念：集合(set)，关系(relation)，函数(function)，等价 (equivalence)，是在其它数学分支的语言中几乎必然存在的。对于这些简单概念的理解，是进一步学些别的数学的基础。我相信，理工科大学生对于 这些都不会陌生。&lt;br /&gt;&lt;br /&gt;不过，有一个很重要的东西就不见得那么家喻户晓了——那就是“选择公理” (Axiom of Choice)。这个公理的意思是“任意的一群非空集合，一定可以从每个集合中各拿出一个元素。”——似乎是显然得不能再显然的命题。不过，这个貌似平常 的公理却能演绎出一些比较奇怪的结论，比如巴拿赫-塔斯基分球定理——“一个球，能分成五个部分，对它们进行一系列刚性变换（平移旋转）后，能组合成两个一样大小的球”。正因为这些完全有悖常识的结论，导致数学界曾经在相当长时间里对于是否接受它有着激烈争论。现在，主流数学家对于它应该是基本接受的，因为很多数学分支的重要定理都依赖于它。在我们后面要回说到的学科里面，下面的定理依赖于选择公理：&lt;br /&gt;&lt;br /&gt;拓扑学：Baire Category Theorem&lt;br /&gt;&lt;br /&gt;实分析（测度理论）：Lebesgue 不可测集的存在性&lt;br /&gt;&lt;br /&gt;泛函分析四个主要定理：Hahn-Banach Extension Theorem, Banach-Steinhaus Theorem (Uniform boundedness principle), Open Mapping Theorem, Closed Graph Theorem。在集合论的基础上，现代数学有两大家族：分析(Analysis)和代数(Algebra)。至于其它的，比如几何和概率论，在古典数学时代，它们是和代数并列的，但是它们的现代版本则基本是建立在分析或者代数的基础上，因此从现代意义说，它们和分析与代数并不是平行的关系。&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;分析：在极限基础上建立的宏伟大厦&lt;br /&gt;&lt;br /&gt;微积分：分析的古典时代——从牛顿到柯西&lt;br /&gt;&lt;br /&gt;先说说分析(Analysis)吧，它是从微积分(Caculus)发展起来 的——这也是有些微积分教材名字叫“数学分析”的原因。不过，分析的范畴远不只是这些，我们在大学一年级学习的微积分只能算是对古典分析的入门。分析研究 的对象很多，包括导数(derivatives)，积分(integral)，微分方程(differential equation)，还有级数(infinite series)——这些基本的概念，在初等的微积分里面都有介绍。如果说有一个思想贯穿其中，那就是极限——这是整个分析（不仅仅是微积分）的灵魂。&lt;br /&gt;&lt;br /&gt;一个很多人都听说过的故事，就是牛顿(Newton)和莱布尼茨 (Leibniz)关于微积分发明权的争论。事实上，在他们的时代，很多微积分的工具开始运用在科学和工程之中，但是，微积分的基础并没有真正建立。那个 长时间一直解释不清楚的“无穷小量”的幽灵，困扰了数学界一百多年的时间——这就是“第二次数学危机”。直到柯西用数列极限的观点重新建立了微积分的基本 概念，这门学科才开始有了一个比较坚实的基础。直到今天，整个分析的大厦还是建立在极限的基石之上。&lt;br /&gt;&lt;br /&gt;柯西(Cauchy)为分析的发展提供了一种严密的语言，但是他并没有解决微 积分的全部问题。在19世纪的时候，分析的世界仍然有着一些挥之不去的乌云。而其中最重要的一个没有解决的是“函数是否可积的问题”。我们在现在的微积分 课本中学到的那种通过“无限分割区间，取矩阵面积和的极限”的积分，是大约在1850年由黎曼(Riemann)提出的，叫做黎曼积分。但是，什么函数存 在黎曼积分呢（黎曼可积）？数学家们很早就证明了，定义在闭区间内的连续函数是黎曼可积的。可是，这样的结果并不令人满意，工程师们需要对分段连续函数的 函数积分。&lt;br /&gt;&lt;br /&gt;实分析：在实数理论和测度理论上建立起现代分析&lt;br /&gt;&lt;br /&gt;在19世纪中后期，不连续函数的可积性问题一直是分析的重要课题。对于定义在 闭区间上的黎曼积分的研究发现，可积性的关键在于“不连续的点足够少”。只有有限处不连续的函数是可积的，可是很多有数学家们构造出很多在无限处不连续的 可积函数。显然，在衡量点集大小的时候，有限和无限并不是一种合适的标准。在探讨“点集大小”这个问题的过程中，数学家发现实数轴——这个他们曾经以为已 经充分理解的东西——有着许多他们没有想到的特性。在极限思想的支持下，实数理论在这个时候被建立起来，它的标志是对实数完备性进行刻画的几条等价的定理 （确界定理，区间套定理，柯西收敛定理，Bolzano-Weierstrass Theorem和Heine-Borel Theorem等等）——这些定理明确表达出实数和有理数的根本区别：完备性（很不严格的说，就是对极限运算封闭）。随着对实数认识的深入，如何测量“点 集大小”的问题也取得了突破，勒贝格创造性地把关于集合的代数，和Outer content（就是“外测度”的一个雏形）的概念结合起来，建立了测度理论(Measure Theory)，并且进一步建立了以测度为基础的积分——勒贝格(Lebesgue Integral)。在这个新的积分概念的支持下，可积性问题变得一目了然。&lt;br /&gt;&lt;br /&gt;上面说到的实数理论，测度理论和勒贝格积分，构成了我们现在称为实分析 (Real Analysis)的数学分支，有些书也叫实变函数论。对于应用科学来说，实分析似乎没有古典微积分那么“实用”——很难直接基于它得到什么算法。而且， 它要解决的某些“难题”——比如处处不连续的函数，或者处处连续而处处不可微的函数——在工程师的眼中，并不现实。但是，我认为，它并不是一种纯数学概念 游戏，它的现实意义在于为许多现代的应用数学分支提供坚实的基础。下面，我仅仅列举几条它的用处：&lt;br /&gt;&lt;br /&gt;黎曼可积的函数空间不是完备的，但是勒贝格可积的函数空间是完备的。简单的 说，一个黎曼可积的函数列收敛到的那个函数不一定是黎曼可积的，但是勒贝格可积的函数列必定收敛到一个勒贝格可积的函数。在泛函分析，还有逼近理论中，经 常需要讨论“函数的极限”，或者“函数的级数”，如果用黎曼积分的概念，这种讨论几乎不可想像。我们有时看一些paper中提到Lp函数空间，就是基于勒 贝格积分。&lt;br /&gt;&lt;br /&gt;勒贝格积分是傅立叶变换（这东西在工程中到处都是）的基础。很多关于信号处理的初等教材，可能绕过了勒贝格积分，直接讲点面对实用的东西而不谈它的数学基础，但是，对于深层次的研究问题——特别是希望在理论中能做一些工作——这并不是总能绕过去。&lt;br /&gt;在下面，我们还会看到，测度理论是现代概率论的基础。&lt;br /&gt;&lt;br /&gt;拓扑学：分析从实数轴推广到一般空间——现代分析的抽象基础。&lt;br /&gt;&lt;br /&gt;随着实数理论的建立，大家开始把极限和连续推广到更一般的地方的分析。事实 上，很多基于实数的概念和定理并不是实数特有的。很多特性可以抽象出来，推广到更一般的空间里面。对于实数轴的推广，促成了点集拓扑学(Point- set Topology)的建立。很多原来只存在于实数中的概念，被提取出来，进行一般性的讨论。在拓扑学里面，有4个C构成了它的核心：&lt;br /&gt;&lt;br /&gt;Closed set（闭集合）。在现代的拓扑学的公理化体系中，开集和闭集是最基本的概念。一切从此引申。这两个概念是开区间和闭区间的推广，它们的根本地位，并不是 一开始就被认识到的。经过相当长的时间，人们才认识到：开集的概念是连续性的基础，而闭集对极限运算封闭——而极限正是分析的根基。&lt;br /&gt;&lt;br /&gt;Continuous function （连续函数）。连续函数在微积分里面有个用epsilon-delta语言给出的定义，在拓扑学中它的定义是“开集的原像是开集的函数”。第二个定义和第 一个是等价的，只是用更抽象的语言进行了改写。我个人认为，它的第三个（等价）定义才从根本上揭示连续函数的本质——“连续函数是保持极限运算的函数” ——比如y是数列x1, x2, x3, … 的极限， 那么如果 f 是连续函数，那么 f(y) 就是 f(x1), f(x2), f(x3), …的极限。连续函数的重要性，可以从别的分支学科中进行类比。比如群论中，基础的运算是“乘法”，对于群，最重要的映射叫“同态映射”——保持“乘法”的 映射。在分析中，基础运算是“极限”，因此连续函数在分析中的地位，和同态映射在代数中的地位是相当的。&lt;br /&gt;&lt;br /&gt;Connected set （连通集合）。比它略为窄一点的概念叫(Path connected)，就是集合中任意两点都存在连续路径相连——可能是一般人理解的概念。一般意义下的连通概念稍微抽象一些。在我看来，连通性有两个重 要的用场：一个是用于证明一般的中值定理(Intermediate Value Theorem)，还有就是代数拓扑，拓扑群论和李群论中讨论根本群(Fundamental Group)的阶。&lt;br /&gt;&lt;br /&gt;Compact set（紧集）。Compactness似乎在初等微积分里面没有专门出现，不过有几条实数上的定理和它其实是有关系的。比如，“有界数列必然存在收敛子 列”——用compactness的语言来说就是——“实数空间中有界闭集是紧的”。它在拓扑学中的一般定义是一个听上去比较抽象的东西——“紧集的任意 开覆盖存在有限子覆盖”。这个定义在讨论拓扑学的定理时很方便，它在很多时候能帮助实现从无限到有限的转换。对于分析来说，用得更多的是它的另一种形式 ——“紧集中的数列必存在收敛子列”——它体现了分析中最重要的“极限”。&lt;br /&gt;&lt;br /&gt;Compactness在现代分析中运用极广，无法尽述。微积分中的两个重要定 理：极值定理(Extreme Value Theory)，和一致收敛定理(Uniform Convergence Theorem)就可以借助它推广到一般的形式。&lt;br /&gt;&lt;br /&gt;从某种意义上说，点集拓扑学可以看成是关于“极限”的一般理论，它抽象于实数理论，它的概念成为几乎所有现代分析学科的通用语言，也是整个现代分析的根基所在。&lt;br /&gt;&lt;br /&gt;微分几何：流形上的分析——在拓扑空间上引入微分结构 。&lt;br /&gt;&lt;br /&gt;拓扑学把极限的概念推广到一般的拓扑空间，但这不是故事的结束，而仅仅是开 始。在微积分里面，极限之后我们有微分，求导，积分。这些东西也可以推广到拓扑空间，在拓扑学的基础上建立起来——这就是微分几何。从教学上说，微分几何 的教材，有两种不同的类型，一种是建立在古典微机分的基础上的“古典微分几何”，主要是关于二维和三维空间中的一些几何量的计算，比如曲率。还有一种是建 立在现代拓扑学的基础上，这里姑且称为“现代微分几何”——它的核心概念就是“流形”(manifold)——就是在拓扑空间的基础上加了一套可以进行微 分运算的结构。现代微分几何是一门非常丰富的学科。比如一般流形上的微分的定义就比传统的微分丰富，我自己就见过三种从不同角度给出的等价定义——这一方 面让事情变得复杂一些，但是另外一个方面它给了同一个概念的不同理解，往往在解决问题时会引出不同的思路。除了推广微积分的概念以外，还引入了很多新概 念：tangent space, cotangent space, push forward, pull back, fibre bundle, flow, immersion, submersion 等等。&lt;br /&gt;&lt;br /&gt;近些年，流形在machine learning似乎相当时髦。但是，坦率地说，要弄懂一些基本的流形算法， 甚至“创造”一些流形算法，并不需要多少微分几何的基础。对我的研究来说，微分几何最重要的应用就是建立在它之上的另外一个分支：李群和李代数——这是数 学中两大家族分析和代数的一个漂亮的联姻。分析和代数的另外一处重要的结合则是泛函分析，以及在其基础上的调和分析。&lt;br /&gt;&lt;br /&gt;代数：一个抽象的世界&lt;br /&gt;&lt;br /&gt;关于抽象代数&lt;br /&gt;&lt;br /&gt;回过头来，再说说另一个大家族——代数。&lt;br /&gt;&lt;br /&gt;如果说古典微积分是分析的入门，那么现代代数的入门点则是两个部分：线性代数(linear algebra)和基础的抽象代数(abstract algebra)——据说国内一些教材称之为近世代数。&lt;br /&gt;&lt;br /&gt;代数——名称上研究的似乎是数，在我看来，主要研究的是运算规则。一门代数， 其实都是从某种具体的运算体系中抽象出一些基本规则，建立一个公理体系，然后在这基础上进行研究。一个集合再加上一套运算规则，就构成一个代数结构。在主 要的代数结构中，最简单的是群(Group)——它只有一种符合结合率的可逆运算，通常叫“乘法”。如果，这种运算也符合交换率，那么就叫阿贝尔群 (Abelian Group)。如果有两种运算，一种叫加法，满足交换率和结合率，一种叫乘法，满足结合率，它们之间满足分配率，这种丰富一点的结构叫做环(Ring)， 如果环上的乘法满足交换率，就叫可交换环(Commutative Ring)。如果，一个环的加法和乘法具有了所有的良好性质，那么就成为一个域(Field)。基于域，我们可以建立一种新的结构，能进行加法和数乘，就 构成了线性代数(Linear algebra)。&lt;br /&gt;&lt;br /&gt;代数的好处在于，它只关心运算规则的演绎，而不管参与运算的对象。只要定义恰 当，完全可以让一只猫乘一只狗得到一头猪:-)。基于抽象运算规则得到的所有定理完全可以运用于上面说的猫狗乘法。当然，在实际运用中，我们还是希望用它 干点有意义的事情。学过抽象代数的都知道，基于几条最简单的规则，比如结合律，就能导出非常多的重要结论——这些结论可以应用到一切满足这些简单规则的地 方——这是代数的威力所在，我们不再需要为每一个具体领域重新建立这么多的定理。&lt;br /&gt;&lt;br /&gt;抽象代数有在一些基础定理的基础上，进一步的研究往往分为两个流派：研究有限 的离散代数结构（比如有限群和有限域），这部分内容通常用于数论，编码，和整数方程这些地方；另外一个流派是研究连续的代数结构，通常和拓扑与分析联系在 一起（比如拓扑群，李群）。我在学习中的focus主要是后者。&lt;br /&gt;&lt;br /&gt;线性代数：“线性”的基础地位。&lt;br /&gt;&lt;br /&gt;对于做Learning, vision, optimization或者statistics的人来说，接触最多的莫过于线性代数——这也是我们在大学低年级就开始学习的。线性代数，包括建立在它 基础上的各种学科，最核心的两个概念是向量空间和线性变换。线性变换在线性代数中的地位，和连续函数在分析中的地位，或者同态映射在群论中的地位是一样的 ——它是保持基础运算（加法和数乘）的映射。&lt;br /&gt;&lt;br /&gt;在learning中有这样的一种倾向——鄙视线性算法，标榜非线性。也许在 很多场合下面，我们需要非线性来描述复杂的现实世界，但是无论什么时候，线性都是具有根本地位的。没有线性的基础，就不可能存在所谓的非线性推广。我们常 用的非线性化的方法包括流形和kernelization，这两者都需要在某个阶段回归线性。流形需要在每个局部建立和线性空间的映射，通过把许多局部线 性空间连接起来形成非线性；而kernerlization则是通过置换内积结构把原线性空间“非线性”地映射到另外一个线性空间，再进行线性空间中所能 进行的操作。而在分析领域，线性的运算更是无处不在，微分，积分，傅立叶变换，拉普拉斯变换，还有统计中的均值，通通都是线性的。&lt;br /&gt;&lt;br /&gt;泛函分析：从有限维向无限维迈进。&lt;br /&gt;&lt;br /&gt;在大学中学习的线性代数，它的简单主要因为它是在有限维空间进行的，因为有 限，我们无须借助于太多的分析手段。但是，有限维空间并不能有效地表达我们的世界——最重要的，函数构成了线性空间，可是它是无限维的。对函数进行的最重 要的运算都在无限维空间进行，比如傅立叶变换和小波分析。这表明了，为了研究函数（或者说连续信号），我们需要打破有限维空间的束缚，走入无限维的函数空 间——这里面的第一步，就是泛函分析。&lt;br /&gt;&lt;br /&gt;泛函分析(Functional Analysis)是研究的是一般的线性空间，包括有限维和无限维，但是很多东西在有限维下显得很trivial，真正的困难往往在无限维的时候出现。在 泛函分析中，空间中的元素还是叫向量，但是线性变换通常会叫作“算子”(operator)。除了加法和数乘，这里进一步加入了一些运算，比如加入范数去 表达“向量的长度”或者“元素的距离”，这样的空间叫做“赋范线性空间”(normed space)，再进一步的，可以加入内积运算，这样的空间叫“内积空间”(Inner product space)。&lt;br /&gt;&lt;br /&gt;大家发现，当进入无限维的时间时，很多老的观念不再适用了，一切都需要重新审视。&lt;br /&gt;&lt;br /&gt;所有的有限维空间都是完备的（柯西序列收敛），很多无限维空间却是不完备的（比如闭区间上的连续函数）。在这里，完备的空间有特殊的名称：完备的赋范空间叫巴拿赫空间(Banach space)，完备的内积空间叫希尔伯特空间(Hilbert space)。&lt;br /&gt;&lt;br /&gt;在有限维空间中空间和它的对偶空间的是完全同构的，而在无限维空间中，它们存在微妙的差别。在有限维空间中，所有线性变换（矩阵）都是有界变换，而在无限维，很多算子是无界的(unbounded)，最重要的一个例子是给函数求导。在有限维空间中，一切有界闭集都是紧的，比如单位球。而在所有的无限维空间中，单位球都不是紧的——也就是说，可以在单位球内撒入无限个点，而不出现一个极限点。&lt;br /&gt;&lt;br /&gt;在有限维空间中，线性变换（矩阵）的谱相当于全部的特征值，在无限维空间 中，算子的谱的结构比这个复杂得多，除了特征值组成的点谱(point spectrum)，还有approximate point spectrum和residual spectrum。虽然复杂，但是，也更为有趣。由此形成了一个相当丰富的分支——算子谱论(Spectrum theory)。&lt;br /&gt;&lt;br /&gt;在有限维空间中，任何一点对任何一个子空间总存在投影，而在无限维空间中， 这就不一定了，具有这种良好特性的子空间有个专门的名称切比雪夫空间(Chebyshev space)。这个概念是现代逼近理论的基础(approximation theory)。函数空间的逼近理论在Learning中应该有着非常重要的作用，但是现在看到的运用现代逼近理论的文章并不多。&lt;br /&gt;&lt;br /&gt;继续往前：巴拿赫代数，调和分析，和李代数&lt;br /&gt;&lt;br /&gt;基本的泛函分析继续往前走，有两个重要的方向。第一个是巴拿赫代数 (Banach Algebra)，它就是在巴拿赫空间（完备的内积空间）的基础上引入乘法（这不同于数乘）。比如矩阵——它除了加法和数乘，还能做乘法——这就构成了一 个巴拿赫代数。除此以外，值域完备的有界算子，平方可积函数，都能构成巴拿赫代数。巴拿赫代数是泛函分析的抽象，很多对于有界算子导出的结论，还有算子谱 论中的许多定理，它们不仅仅对算子适用，它们其实可以从一般的巴拿赫代数中得到，并且应用在算子以外的地方。巴拿赫代数让你站在更高的高度看待泛函分析中 的结论，但是，我对它在实际问题中能比泛函分析能多带来什么东西还有待思考。&lt;br /&gt;&lt;br /&gt;最能把泛函分析和实际问题在一起的另一个重要方向是调和分析 (Harmonic Analysis)。我在这里列举它的两个个子领域，傅立叶分析和小波分析，我想这已经能说明它的实际价值。它研究的最核心的问题就是怎么用基函数去逼近 和构造一个函数。它研究的是函数空间的问题，不可避免的必须以泛函分析为基础。除了傅立叶和小波，调和分析还研究一些很有用的函数空间，比如Hardy space，Sobolev space，这些空间有很多很好的性质，在工程中和物理学中都有很重要的应用。对于vision来说，调和分析在信号的表达，图像的构造，都是非常有用的 工具。&lt;br /&gt;&lt;br /&gt;当分析和线性代数走在一起，产生了泛函分析和调和分析；当分析和群论走在一 起，我们就有了李群(Lie Group)和李代数(Lie Algebra)。它们给连续群上的元素赋予了代数结构。我一直认为这是一门非常漂亮的数学：在一个体系中，拓扑，微分和代数走到了一起。在一定条件下， 通过李群和李代数的联系，它让几何变换的结合变成了线性运算，让子群化为线性子空间，这样就为Learning中许多重要的模型和算法的引入到对几何运动 的建模创造了必要的条件。因此，我们相信李群和李代数对于vision有着重要意义，只不过学习它的道路可能会很艰辛，在它之前需要学习很多别的数学。&lt;br /&gt;&lt;br /&gt;现代概率论：在现代分析基础上再生&lt;br /&gt;&lt;br /&gt;最后，再简单说说很多Learning的研究者特别关心的数学分支：概率论。 自从Kolmogorov在上世纪30年代把测度引入概率论以来，测度理论就成为现代概率论的基础。在这里，概率定义为测度，随机变量定义为可测函数，条 件随机变量定义为可测函数在某个函数空间的投影，均值则是可测函数对于概率测度的积分。值得注意的是，很多的现代观点，开始以泛函分析的思路看待概率论的 基础概念，随机变量构成了一个向量空间，而带符号概率测度则构成了它的对偶空间，其中一方施加于对方就形成均值。角度虽然不一样，不过这两种方式殊途同 归，形成的基础是等价的。&lt;br /&gt;&lt;br /&gt;在现代概率论的基础上，许多传统的分支得到了极大丰富，最有代表性的包括鞅论 (Martingale)——由研究赌博引发的理论，现在主要用于金融（这里可以看出赌博和金融的理论联系，:-P），布朗运动(Brownian Motion)——连续随机过程的基础，以及在此基础上建立的随机分析(Stochastic Calculus)，包括随机积分（对随机过程的路径进行积分，其中比较有代表性的叫伊藤积分(Ito Integral)），和随机微分方程。对于连续几何运用建立概率模型以及对分布的变换的研究离不开这些方面的知识。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7470915006619668896/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/study-in-structure-way.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7470915006619668896'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7470915006619668896'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/05/study-in-structure-way.html' title='study in a structure way'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5315182506950797320</id><published>2010-04-30T21:33:00.000-05:00</published><updated>2011-02-28T14:21:26.808-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>research update</title><content type='html'>最后一个course project还有三天，做完最后的演讲也就结束了。尽管现在还没有一个成型的东西弄出来，任何路，最后会有成果的，我相信。&lt;br /&gt;&lt;br /&gt;这月余与matlab打交道，有些感想，记录于此：&lt;br /&gt;1. highlight然后搜索是个很好的方法，可以熟悉在整个函数中某个变量或者是另一个函数的应用场景。&lt;br /&gt;2. 不知道有没有什么比matlab本身自带编辑器更好的查看代码的工具，类似于查看c/c++的source insight。本身这个编辑器最大的问题就是不能够进行函数间的变换跟踪。尽管有第一条，但还是觉得有点费劲。&lt;br /&gt;3. 随时记录问题到google doc或者是某个记事本或者是onenote上面。有的时候问题一多了，解决其中的一两个，就忘记了剩下的都是什么。莫非是我真的老了……&lt;br /&gt;4. help功能比想象中的还要好用，一般情况下，就不用再去使用那个帮助程序了，尤其是在已经有一两个程序试运行的情况下，这个帮助程序慢的可以了。&lt;br /&gt;5. 打开L的相册可以提高工作效率=)&lt;br /&gt;&lt;br /&gt;over</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5315182506950797320/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/research-update_30.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5315182506950797320'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5315182506950797320'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/research-update_30.html' title='research update'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5645359591063433066</id><published>2010-04-29T19:49:00.002-05:00</published><updated>2010-04-29T19:49:47.287-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>More censorship, more freedom (possibility?)</title><content type='html'>http://blog.sina.com.cn/s/blog_4c3782760100hset.html?retcode=0&lt;br /&gt;&lt;br /&gt;越多审查，越多自由&lt;br /&gt;梁文道&lt;br /&gt;&amp;nbsp;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt;&lt;br /&gt;大家都知道，中國大陸是有審查的。然而過去一年以來，它卻產生了極大的變化，甚至可以說是種好的變化。不，不是因為政府放寬了報導和評論的尺度，情況恰恰相反，自從北京奧運結束以來，信息和言論的空間毫不留情地在一步步縮小。一度為了配合開放形象而苟存的BBC中文網等新聞網站，現在都被迫向大陸線民關上了大門。曾經活躍的自由派知識份子陣地牛博網，現在成了只有用代理伺服器才上得了的流亡網站。不只如此，你只要一踏入這片土地，你就會發現自己竟然上不了YouTube，twitter和face book。在全世界年輕人的心目中，這些網站簡直就是麵包與空氣，不可一日無之，你要如何忍受這種與世隔絕的滋味呢？一位朋友最近被派去大陸工作，他的沮喪全都寫進了他在Google Talk上的簽名：活在沒有face book的國度。&lt;br /&gt;&lt;br /&gt;既然如此，我怎麼還能說這是個好的變化，為它暗自歡喜？理由很簡單，從前大家雖然都知道這個國家有新聞審查，但也就僅只於知道而已。身為一個普通的媒體閱聽人，你不會時時刻刻地意識自己今天看的電視新聞是否少掉了一則重要的消息，也不可能切身感受到某一份報刊在付印前那一刻被抽掉一則評論的氣悶，你只是隱隱約約地意識到自己生活在一張嚴密的安全網下，但卻從來不曾體驗到那張網的存在。久而久之，你還會忘記自己的生存環境的特性，猶如金魚不太清楚甚麼叫做魚缸。&lt;br /&gt;&lt;br /&gt;互聯網時代的最大特點就是使得每一個依賴網路的閱聽人都分明領悟自己原來正在被人審查、被人過濾、被人監控。一個小時以前，論壇上還有一篇談論維吾爾人信仰問題的帖子，一小時後回頭再看，它已經不見了。聽說YouTube有一段從未曝光的Michael Jackson演唱會排練片段，可是不能直接跑去那裏圍觀，只好等待他人將它放到國內的視頻網站。昨夜心血來潮，寫了一篇批評某項政策的博文，今天它卻消失得無影無蹤，只餘一句網站營運商的留言：對不起，你的文章未能通過審查。&lt;br /&gt;&lt;br /&gt;換句話說，網路時代曝露了審查機制的存在，讓它清清楚楚地呈現在每一個人的面前。過去只有，媒體業內人士才能體會得到的感受，現在卻可能是三億線民的集體經驗。這是好事，因為它使所有人都無法漠視自由的稀缺，都無法再假裝自己活在一個甜美快樂的世界。有了這種感受，才有尋求變化的動力。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5645359591063433066/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/more-censorship-more-freedom.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5645359591063433066'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5645359591063433066'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/more-censorship-more-freedom.html' title='More censorship, more freedom (possibility?)'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-35058348308889833</id><published>2010-04-25T11:36:00.002-05:00</published><updated>2010-04-25T15:24:56.888-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>missing</title><content type='html'>不知道要去哪里，或者做什么。打开几个可以打开的页面，然后PageUp、PageDown，忽然间就失焦了。于是，会感叹，要是在身边就好了。还可以相互折磨来排遣消解。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/35058348308889833/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/missing.html#comment-form' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/35058348308889833'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/35058348308889833'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/missing.html' title='missing'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1459679757736294407</id><published>2010-04-20T20:38:00.000-05:00</published><updated>2010-04-20T20:38:10.214-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Inter vs. Barcelona</title><content type='html'>今年完整看的第一场球。就比赛进程而言，技术含量、战术含量双丰收，相当精彩。于是，记录些感受。&lt;br /&gt;&lt;br /&gt;这两支球队我都不喜欢。看这样的比赛倒是节省了纠结，只剩下欣赏场面。巴萨的整体技术不容质疑，就算是输掉了比赛，仍然可以算是欧洲最棒的球队，从进攻层次，到个人带球分球的每个细节，处理起来感觉比其他所有球队都要从容很多。而这只国米，经过穆里尼奥两年的调教，外加从球队结构到战术素养孜孜不倦的升级，平心而论起码可以排进欧洲前五，比米兰或者皇马都要成型并且强大的多。而两支球队现阶段的国内联赛压力都很大，巴萨仅领先皇马一分，国米还落后罗马一分。所以，从各个层面讲，两支球队都没有谁养精蓄锐谁吃亏之说。&lt;br /&gt;&lt;br /&gt;比赛从一开始，就已经可以看到那只熟悉的巴萨，以及准备充分的国米了。巴萨在全场压迫，无论国米在哪里拿球，都不会有舒服的一停二看三传球待遇。而国米则不敢在进攻中投入太大的精力，直传斜插始终是最优的方案，而防守中，则固守球门前35-40米区域。开场二十分钟国米的丢球，可以解释为慢热，或者对方的运气好。因为从这里往后的正常比赛，巴萨都没能像在国内联赛中那样获得大把的破门机会，尽管终场的技术统计显示他们的控球率达到百分之七十以上，但绝大部分的进攻都是无疾而终，外围的反复倒脚，说好听了是耐心，实际也只落个寂寞。这样消耗的也只有双方球员的体力以及己方的自信心。我想，应该是我近年来看球场次不多的缘故，我从来没有发现梅西有任何的大局观。而今天国米对于他的防守恰好也利用了这一点。梅西拿球，很少有人贸然出脚断球，紧紧靠住，并等待队友协防。没有了赌博式的拼抢，换来的是国米较巴萨更少的犯规数和黄牌，以及一个根本不知道自己该如何应对的梅西。值得一提的是，国米的第二个进球，恰恰是梅西带球突进，两个国米球员干净的抢断，直传，前场三次倒角之后由麦孔插上打进的。&lt;br /&gt;&lt;br /&gt;另外一个明显的感觉，是国米球员的体力没有巴萨球员好，要么就是防守中的疲于奔命消耗体力要胜于进攻方。米利托抽筋下场是一例。此外，斯内德终场前最后三次拿球技术动作全都严重变形，一次停球停飞了，一次准单刀带球趟乱了脚，一次接球然后直接原地坐下休息。否则，最终的比分应该不仅仅是个三比一。&lt;br /&gt;&lt;br /&gt;巴洛特里的摔球衣果然赛后上了头条。可怜的孩子。第一次要替补上场的时候，刚巧是麦孔受伤，齐沃临危受命，顶了他的名额。第二次看他被从替补席叫出来的时候，脸上一个大大的不高兴，就知道估计这哥们儿场上要耍混了。队友体力不支的失误，被他埋怨。自己得不到支持，又消极怠工。终场摔了球衣，然后球员通道和队友的争执又被伊布这种人落井下石。不知道他还能在国米呆多久。或者逐渐长成另一个卡萨诺。&lt;br /&gt;&lt;br /&gt;最后，还是有关巴萨。这支球队从来没有表现的像个冠军——这也是我不喜欢他们的原因。哈维、阿尔维斯的假摔，以及梅西随时的小动作，可以算作是足球比赛的一部分，勉强认为无可指责。但问题在于，得了便宜卖乖，得不着便宜撒娇，就太让人恶心了。几年前，梅西在斯坦福桥的假摔让切尔西十人应战，舍瓦在诺坎普漂亮的头球被莫名吹掉，一切正常。现在，国内联赛平了球，说裁判纵容对方大尺度犯规；这次对方犯规都没自己多，又说边裁吹对方的越位不够多。有意思么。要么就一直行的正走的端，要么就安安生生的，起码像个爷们儿。大家都出来混，早晚是要还的。&lt;br /&gt;&lt;br /&gt;国米对拜仁，也许会是一场无趣的决赛。却也是今年欧陆球会实力对比的一个真实写照。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1459679757736294407/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/inter-vs-barcelona.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1459679757736294407'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1459679757736294407'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/inter-vs-barcelona.html' title='Inter vs. Barcelona'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2784190386305904376</id><published>2010-04-18T09:28:00.004-05:00</published><updated>2010-05-09T15:38:35.772-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='belief'/><title type='text'>L, good luck for the test~</title><content type='html'>I am blessing, so you will be all right:)</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2784190386305904376/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/l-good-luck-for-test.html#comment-form' title='5 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2784190386305904376'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2784190386305904376'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/l-good-luck-for-test.html' title='L, good luck for the test~'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>5</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5145981638142913238</id><published>2010-04-17T16:04:00.000-05:00</published><updated>2010-04-17T16:04:46.780-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>research update</title><content type='html'>连续分析了两天的代码还是有效果的。起码我知道了大部分代码的用途，以及有限的一部分代码的物理意义。写信给原作者提了几个问题，没想到不到五分钟就收到了回信“I hate to say it, but you're on your own. I wrote that code at least 6 years ago and I have no recollection of the precise details of the code structure or data structures.”于是，坏消息由一个变成了两个。一来，所有遇到的问题终归还需要自己解决；再者，这个大哥六年前就已经做了相关的研究，那么我这个方向值不值得往下做，或者是往什么方向走，还需要再多看些文献然后和老师一起纠结一下了。&lt;br /&gt;&lt;br /&gt;有关代码本身，可以看出来作者是在不同时间写成的。里面相同物理意义的变量在不同文件中都不统一，函数调用也总会发生缺省值冲突。但除此以外，另一点我心知肚明的，单单就代码本身而言，他写的比我规整许多，也流畅很多。在这个方向里，我现在还是只有改的份儿，轮不到我来写出什么新的东西。&lt;br /&gt;&lt;br /&gt;接下来要做的几件事情：把用到的代码整理到几个独立的文件下；生成一些色彩斑斓的效果图给老师交差；整理所有的参考文献，并且归档所有相关的解释；注释代码。&lt;br /&gt;&lt;br /&gt;考虑到读者的存在，还要加一句：L同学，好好加油，明天好好考^_^</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5145981638142913238/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/research-update.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5145981638142913238'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5145981638142913238'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/research-update.html' title='research update'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2339522727757329814</id><published>2010-04-15T21:24:00.001-05:00</published><updated>2010-04-15T21:27:44.900-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Bird said</title><content type='html'>哥们儿校内的日志，估计会马上和谐，放一份在这里。&lt;br /&gt;&lt;br /&gt;-----------&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;我们吃饭消费，我们纳税，你可以用我们的钱去开4000个亿的SB会，凭什么只给云南25.5&lt;br /&gt;个亿？&lt;br /&gt;&lt;br /&gt;高行健，法籍华人，唯一一个获得诺贝尔文学奖的“中国人”。1983年 《车站》被禁演，1986年《彼岸》被禁演，1990年《逃亡》被禁演，并因作品触犯当局，被开除党籍、公职。1997年退出中国国籍加入法国国 籍，2000年因《灵山》，《一个人的圣经》等作品获得...&lt;br /&gt;&lt;br /&gt;以前看历史书，看到农民起义了，哦，农民起义了，现在想想，真他妈的牛逼，竟然敢起义。&lt;br /&gt;&lt;br /&gt;让一部分人先富起来，再通过地沟油、苏丹红、福寿螺、毒大米、瘦肉精、人造蛋、避孕药黄鳝把没富的人消灭，再通过三聚氰胺、毒疫苗把没富的人 的后代消灭。最终共同富裕了。&lt;br /&gt;&lt;br /&gt;他拿着枪，你买把水果刀就算凶器；他日夜宣淫，你下载个黄片就算流氓；他大发横财，你摆个摊就算违法；他住高楼别 墅，你搭个窝棚还要被强拆；我在想，他这么牛逼，为什么还如此恐惧？&lt;br /&gt;&lt;br /&gt;好学生是毕不了业的（韩寒），好老师是会被停课的（萧瀚），好律师是会被陷害的（高智晟），好公民是会进监狱的（谭zuo人）&lt;br /&gt;&lt;br /&gt;祈雨的初衷是好的，可是树都给坎光了，水都被坝堵了，再祈求也求不出水 和树啊。求求国家吧，一个国家剧院就三十多亿，一个世博就四千多亿，云南大批百姓饿死了就拨了一个半亿，我们一起祈祷吧，愿党妈妈发发慈悲，这几年死的人 够他妈的多啦!!!&lt;br /&gt;&lt;br /&gt;刚看到那个遭强拆自焚92岁老人生平，经历过北洋军阀，国共内战，抗日战争，参加过金门战役，地痞流氓枪林弹雨都见过，但最后 还是没抗住天朝的拆迁小分队。看来“打台湾靠城管”的口号要改改了。&lt;br /&gt;&lt;br /&gt;听来的段子。说一哥们儿隔壁新搬来个老外，一天晚上老外敲门求助，说：“我的 电视坏了，不能换台。”这哥们儿低头看了眼表，很镇定的说：“全国的电视在晚上七点到七点半都会发作这种病毒的。&lt;br /&gt;&lt;br /&gt;“当一个政权开始烧书的时候，若 不加阻止，它下一步就要烧人！” “当一个政权开始禁言的时候，若不加阻止，它下一步就要灭口！”&lt;br /&gt;&lt;br /&gt;有消息说日本人有地沟 油回收，经过处理后作为汽车燃料推向市场，中国人也有地沟油回收，经过处理后作为食用油推向市场，百年之后，中国人幸运的全面进化为汽车人&lt;br /&gt;&lt;br /&gt;普天之 下莫非共土，率土之滨莫非网奴，BT死了，谷鸽走了，校内杀了，优酷禁了，4亿网民还剩什么？难道学习东朝鲜全民只上新华网？全面网禁开始，如战，便立潮 头&lt;br /&gt;&lt;br /&gt;专制政府天天都在担心自己能不能维持统治，所以它要稳定压倒一切以防人民揭竿而起；民主政府天天都在担心自己能不能竞选连任，所以它要尽量讨好 它的人民以防人民不投它的票。&lt;br /&gt;&lt;br /&gt;在英国，你说不拆，任何人不敢拆你的。在中国，你说不拆，肯定把你拆了。我就这一句话，这就是我们为什么在全世界牛 逼！——天津宁河县教育书记刘广宝&lt;br /&gt;&lt;br /&gt;大家好，和谐号列车提醒大家：乘客谷歌因不遵守列车规定已被驱逐下车，请车上乘客务必遵守规定，拉紧窗帘，不得 观看窗外风景。列车即将调头行驶，下一站：平壤.&lt;br /&gt;&lt;br /&gt;“我知道美国有200万失业人口，这让政府十分焦急，但中国失业人口有2亿，中国绝不盲目追求 贸易顺差。”感谢总理，我终于知道我国的失业率大概是怎样一个数字了。&lt;br /&gt;&lt;br /&gt;@被放逐的诗人:一九八三年薄一波和杨秉城感慨地说，文化大革命中拣了条 命，连我儿子小熙来也给我一顿铁拳，把我打得眼前一黑摔倒在地上，这个狠小子，又照前胸踏了我几脚，当时就有三根肋骨被踹断，看他这个六亲不认，手毒心狠 连他爹都往死里整的样子，这小子真正是我们党未来的接班人的好材料&lt;br /&gt;&lt;br /&gt;武汉黄陂七旬老妇阻止拆迁被殴，摔入沟内被活埋，两警察袖手旁观。官员称： 是意外。活埋是个意外，喝开水是个意外，躲猫猫是个意外，唐福珍是个意外……当然，破坏稳定不是个意外，是蓄谋已久，精心策划...&lt;br /&gt;&lt;br /&gt;很多中国人瞧不起非洲。去非洲之后才知道，非洲再傻逼的统治者执政结果也比东亚开两会的国家强。如果不信感觉，数据也可以说话：非洲有32个 国家的最低收入超过中国。在北京买1套60平米 150万元住房，各阶层的代价是：农民种三亩地1000年，工人上班100年，公务员工作35年，抢劫犯作案1500次，妓女接客7500次。&lt;br /&gt;&lt;br /&gt;总 理说要控制房价，于是房价飙升；总理说要稳定物价，于是物价暴涨；总理说要查豆腐渣，于是谭进了大牢；总理说要查毒奶粉，于是赵也进了局子；总理说要民 主，于是晓波11年；我在期待总理说党万岁。&lt;br /&gt;&lt;br /&gt;从小学到大学思想品德考核第一条都是热爱祖国，热爱共产党。我直到现在 也没想明白爱不爱党跟一个人的思想品德有什么关系。纳税人养活执政党，还强迫每个人必须爱它。这就好比我买了条狗，每天喂他吃喝，他不好好看门，我不仅连 让它滚蛋的权利都没有，我还得爱它。神奇啊。&lt;br /&gt;&lt;br /&gt;一对美籍华人夫妇买下杰克逊的豪宅，每平米合人民币14000元。北京五环 外普通公寓每平米均价17000元。北京千万人住着比杰克逊还贵的房子，却出不了杰克逊式的艺术家。高房价压得消费者连地球步都走不好，自然没有太空步， 只有太恐怖。&lt;br /&gt;&lt;br /&gt;1，只要他们想干什么，先弄个“新闻”扔出去，看看网民的反映。2，只要网民不吭声（或少数人反对），他们就放手去干。3，只要网民 多半反对，他们就否认。4，网民全部反对，他们就喊出“报道不实”。网易网友有才呀&lt;br /&gt;&lt;br /&gt;黄琦被判刑的上诉于2月8日被驳回。 2000年以煽颠罪被判5年刑，是世界上第一个在网上因言获罪的人。汶川地震后他17次率天网义工到灾区救灾，并揭露学校豆腐渣工程，又被以“非法持有国 家机密罪”判刑三年 。&lt;br /&gt;&lt;br /&gt;几年前有电影摄制组到贺卫方老家山东胶东拍外景。拍片之余，两个化妆成国民党士兵的演员看到地里有个老头在干活，两人搞恶 作剧，拿着枪走过去大喝一声：“老头，干什么呢？”老头回头一看，惊呼道：“天哪！你们可回来啦！”&lt;br /&gt;&lt;br /&gt;有网民昨称，他上午去万达影 城看《孔子》，结果“全场只有我和老婆两个人”，更称“这是什么烂片啊，简直是侮辱先人！”据说官方正通过包场方式进行救亡。但也有网友表示，唯一抢救 《孔子》的方法：立即再开始一场批判孔子的运动，并且把《孔子》列为禁片，头号扫黄...&lt;br /&gt;&lt;br /&gt;一国两制：屁民上网实名制，官员财产隐藏制。&lt;br /&gt;&lt;br /&gt;西点军校发言人称，西点军校没有雷锋的任何画像与塑像，雷锋语录也没有被印在任何正式的学员出版物中。希望中国媒 体予以澄清。希望澄清的原因是西点军校两年多来接待了一万余位前来寻找雷锋像的中国游客，花费大量人力物力进行辟谣，已经筋疲力尽。&lt;br /&gt;&lt;br /&gt;天朝开两会， 实在有点贵，五千台电脑，七十万部队。奥迪去接机，国宴来开胃。鼓掌又举手，傻逼全都会。代表狂挥霍，人民猛缴税。温饱不得求，消nm个费&lt;br /&gt;&lt;br /&gt;昨天央 视引用CNN数据称，1949年中国人均GDP世界第100名，2008年人均GDP已经达到美国的十分之一，听的我好骄傲啊。但是，想想怎么觉得很蹊 跷，哪儿不对，于是我一查，才知道为什么，因为2008年中国人均GDP排名是104位.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2339522727757329814/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/bird-said.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2339522727757329814'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2339522727757329814'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/bird-said.html' title='Bird said'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-712054455824178388</id><published>2010-04-13T20:35:00.000-05:00</published><updated>2010-04-13T20:35:39.703-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>some thoughts</title><content type='html'>昨天下午和同学一起复习周四的DSP考试，傍晚头昏脑胀回了宿舍，打定主意要早睡。结果半夜又被隔壁舍友的电话吵了起来。……当时唯一的感觉就是欲哭无泪。周末他女朋友过来，俩人做作业也好、聊天也好，晚上两点入睡前必然能把我叫醒一次。周中女生不在，竟然还是让我无法安睡。&lt;br /&gt;&lt;br /&gt;心烦意乱的到走廊抽烟。忽然间感到，我距离以前的自己已经很远了。那个可以在咖啡馆里备课写论文，回宿舍到头便睡的自己。那个分不清咖啡和水区别的自己。那个可以不顾一切的朝着目标狂奔的自己。现在会刻意避免下午三点后喝咖啡，害怕凌晨失眠；中午必定午睡，害怕下午精力不济。对身体的过分小心，是老了，还是心里未老先衰了。&lt;br /&gt;&lt;br /&gt;也罢。每个人都有自己的生物钟，改变不了别人就改变自己吧。&lt;br /&gt;&lt;br /&gt;也许是尼古丁的作用。回到床上竟也安然的睡了过去。从今天起坐最后一班校车回宿舍，在图书馆好好自习，或者看书。好消息是两个月后，就变成了自己一个人的寝室。那么现在需要逐步学会的，就是自己掌控自己所有的时间，以及合理分配所有的精力。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/712054455824178388/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/some-thoughts.html#comment-form' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/712054455824178388'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/712054455824178388'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/some-thoughts.html' title='some thoughts'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8375743606680475243</id><published>2010-04-13T08:34:00.001-05:00</published><updated>2010-04-13T08:34:52.705-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Seeley Booth said</title><content type='html'>i am the gambler. i believe in giving this a chance. I wanna give this a shot. Just give it a chance. That's all I'm asking. You know when you talk to older couples who you know have been in love for 30 or 40 or 50 years, it's always the guy who says "i knew." right from the beginning.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8375743606680475243/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/seeley-booth-said.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8375743606680475243'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8375743606680475243'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/seeley-booth-said.html' title='Seeley Booth said'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3311869969990672818</id><published>2010-04-08T16:58:00.000-05:00</published><updated>2010-04-08T16:58:51.803-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>on diet...</title><content type='html'>没有管住自己的胃，在图书馆拖着一条伤腿去买冰淇淋……&lt;br /&gt;BLUE BELL homemade vanilla开始半盒很好吃，后半盒就腻了……&lt;br /&gt;吃完发现吃了640卡路里，等于我跑5英里消耗的热量&lt;br /&gt;问题是，现在我跑不了步的&lt;br /&gt;算了，晚饭省了～～&lt;br /&gt;下次一定要坚定，一定要坚定一定要坚定</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3311869969990672818/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/on-diet.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3311869969990672818'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3311869969990672818'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/on-diet.html' title='on diet...'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7579726132601973737</id><published>2010-04-07T15:54:00.000-05:00</published><updated>2010-04-07T15:54:52.222-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>reading avoids chatting</title><content type='html'>从今天起，我彻底放弃背任何厚重的专业书籍回宿舍的念头。能同学实在是太能聊了，无论我是面对着他、背对着他、写作业、看书、读文献……他总能在我身边找到话题，开场白是“你知道吗？”，然后一直说下去。有个这样的哥们儿在身边，没了寂静，本是件好事。可，很多时候，我真的是不想说话的。&lt;br /&gt;&lt;br /&gt;还是在学校看书吧。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7579726132601973737/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/reading-avoids-chatting.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7579726132601973737'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7579726132601973737'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/reading-avoids-chatting.html' title='reading avoids chatting'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5163033398301216396</id><published>2010-04-04T16:43:00.002-05:00</published><updated>2010-04-04T16:44:15.162-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>sunny cloudy</title><content type='html'>没想过自己会如此喜爱天气，各种天气。记忆中在北京的时候，无论晴天雨天桑拿天，总会用最便捷的交通工具度过户外的状况，然后猫在某个屋檐下，享受室内的恒温恒湿。在奥斯丁则恰恰相反。很喜欢这里的阳光，晒到身上暖暖的，感觉皮肤每个孔隙都在呼吸。阴天也好，在图书馆前面的小广场，逗逗胖嘟嘟的松鼠，抽两只烟。雨天也好，淅淅沥沥的点在屋檐上，于是梦中都是雨声了。&lt;br /&gt;&lt;br /&gt;这几日和lan大小姐在msn上时常相间。竟然聊起到amoon，始料未及——忽然想到的只有某天和路基说到她时的话：如果可以，我会把握住所有的光阴，不会让旁人琐事干扰我们之间的细微点滴，当然，一切也只是如果，所以毫无意义。&lt;br /&gt;&lt;br /&gt;情圣昨日郁闷，11要嫁人了，于是断了和他的联系。给他电话，他说美国真不好，找不到可以一起喝酒的人，也找不到适合喝酒的地方。我说，自己还多出一条中南海，寄给你吧。他说，待寄到的时候，这般痛苦心境可能也已时过境迁了。是的啊，时过境迁了。&lt;br /&gt;&lt;br /&gt;看lan的日志，如同翻看自己旧到发黄的日记本。小男孩小女孩的点点滴滴，胡言乱语，不疯魔，不成活。很欣喜。只是不知道被我看到后，她还能不能继续更新的。祈祷一下。&lt;br /&gt;&lt;br /&gt;希望自己的脚踝好的快些。网球当真是项不错又危险的运动。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5163033398301216396/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/sunny-cloudy.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5163033398301216396'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5163033398301216396'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/sunny-cloudy.html' title='sunny cloudy'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6735433722848966912</id><published>2010-03-31T17:54:00.002-05:00</published><updated>2010-03-31T18:07:25.099-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>Another mid-term test finished</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Analysis and design communication networks. 考试谈不上理想，但考完之后却很兴奋。现在我仍然在挣扎着摆脱从大学以来锤炼出来的境界——傻逼一样的挥霍时间，然后在考场上兀自神伤。这门课开始的轨迹也差不多，春假因为琐事烦闷而无心学习，待到假期结束才发现原来一周面临两场考试。于是自习、熬夜、背、算、努力理解，香烟、咖啡。这些力道都用在考试之前，显然比用在考试之后要好得多。这场考试，成绩现在无从知晓。但不管怎样，起码我知道这门课没有想象中的那么难。今天早晨在图书馆前的广场上，我翻着书竟然把知识框架勾勒了出来。这个学期还有一个月的时间，还有两场考试和两篇报告需要完成。而兴奋的是，这一周多的努力已经告诉自己，可以做好。那些印度人东欧人美国人上课看似高深的提问和回答，其实都无非是些common sense的东西——intuitively right——仅此而已。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;下个月的大部分时间，依然需要坚持严格的食谱控制，坚持锻炼，尽量减少香烟和咖啡。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;发觉自己现在很享受阳光。在阳光下看书、抽烟，或者仅仅是无所事事。申请了下个学期的两个职位，希望都中。资金宽裕些，就能多做些自己想做的事情了。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;这个月，有颓废，也有努力。希望下个月，前者消失，后者变本加厉:)&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/6735433722848966912/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/another-mid-term-test-finished.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6735433722848966912'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6735433722848966912'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/another-mid-term-test-finished.html' title='Another mid-term test finished'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5531607626543422494</id><published>2010-03-31T17:06:00.001-05:00</published><updated>2010-03-31T17:06:17.720-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>The real china</title><content type='html'>&lt;a href="http://www.douban.com/photos/album/24404429/"&gt;http://www.douban.com/photos/album/24404429/&lt;/a&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5531607626543422494/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/real-china.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5531607626543422494'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5531607626543422494'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/real-china.html' title='The real china'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3113503046497354456</id><published>2010-03-26T08:49:00.004-05:00</published><updated>2010-03-26T09:00:53.996-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>some arguments about tibet</title><content type='html'>转自http://blog.renren.com/blog/244847685/454689523?from=friendEnd&lt;br /&gt;《对于西藏的几则困惑》&lt;br /&gt;&lt;br /&gt;题目：对拉萨骚乱很不理解&lt;br /&gt;&lt;br /&gt;八九年，藏族发生了骚乱，汉族发生了64。十九年过去了，汉族这边歌舞升平，藏族那边还是苦大仇深。作为一个汉族人，我对最近发生的西藏骚乱很不理解。&lt;br /&gt;&lt;br /&gt;第一不理解的是为什么那些喇嘛要鸡蛋碰石头。这种骚乱明明没有任何结果，只会招来名正言顺的镇压，为什么他们还非要干。难道他们不懂得理性分析利弊，不懂得忍一时风平浪静吗？64之后，我们汉族人早就“想通了”，明白了什么才是最重要的，他们为什么就非要抱着个虚幻的理想不放手呢？就算有个别二愣子“好傻好天真”，周围难道没有“成熟了的”“看透世事的”聪明人好好劝劝他们吗？&lt;br /&gt;&lt;br /&gt;第二不理解的是我党掌握了二杆子，那些喇嘛是怎么知道达赖的动向的，那些活动是谁、如何口耳相传的组织，策划，宣传，鼓动的？他们怎么在我党几十年如一日的宣传轰炸下仍然相信达赖是个好人的？现在汉族新一年的年轻人，甚至当时参加过运动的“老将”早就认定了胡耀邦“不成熟”，赵紫阳有野心要夺权，方励之是美国特务，王丹吾尔开希柴玲拿了美国台湾的钱，64就是中情局策划的，当时的北京支持运动的老百姓全都很傻，因此我党杀得好杀得对不杀不足以平民愤不杀不足以维护国家利益，至少那铁腕是可以理解完全必要十分及时的，为什么这帮喇嘛意志就坚定到这个程度，看不见经济发展的光明大道，听不进我党的苦口婆心？谁给他们灌了迷魂汤？&lt;br /&gt;&lt;br /&gt;真的不理解西藏是怎么回事，也许真的是我们汉族人智商太高了？&lt;br /&gt;&lt;br /&gt;--------------------------------------------&lt;br /&gt;题目：谈谈殖民地模式&lt;br /&gt;&lt;br /&gt;一个西方人跟我谈到西藏问题时说：我发现你们的态度很像19世纪的英国人，他们的理论是，他们之所以要去到处侵略，建立殖民地，是因为当地人民太落后，没有管理自己的能力，需要他们去做教师，在殖民地建立文明社会，训练当地人民怎么管理自己，等到当地人民学会了，他们也就可以让那些地方独立了。这其实不过是借口，但你们连英国人都不如，因为英国人好歹还答应将来让那些地方独立，你们连这点都不同意。&lt;br /&gt;&lt;br /&gt;此人是个很有正义感的，有浓厚反殖民主义思想的美国白人。在他看来，殖民本身就是罪过了，更何况为殖民编出一套借口来，只能更让人唾弃。&lt;br /&gt;&lt;br /&gt;但是在我这第三世界国家的人看来，这种思想其实未尝不可。它很有中国传统所谓“仁者无敌”、“远人不服，修文德以来之”的味道。如果一个民族、君主确实是 “仁者”，他未尝不可以“殖民”落后地区，并输入先进文化，把对方民族当成野蛮人一样加以“教化”。而如果这个民族或者君主真的能“仁者爱人”，能体谅被殖民地区的疾苦，搞善政，建盛世，那即使是“殖民者”和“被殖民者”，也可以君爱民，民拥君，君民团结如一人，构建和谐的大同社会。&lt;br /&gt;&lt;br /&gt;中国古代的李世民就是这种“明君”，康熙对达赖恩威并施、最终使藏族彻底归顺中原，我看也差不多是这个性质。这在中国传统中，是“合法”的，至少是“可以理解” 的。如果我党对待西藏能做到这一点，即使不搞建立在自由民主基础上的地区自治和联邦，我相信“达赖集团”和“藏族人民”也能接受，民族问题也可以解决，就像香&lt;br /&gt;港的华人安于英国人的殖民统治一样。&lt;br /&gt;&lt;br /&gt;但现在的问题是，就算按照这个传统标准，我党尚且远远达不到：不但没有让少数民族真心倾慕的“先进文化”“先进体制”“先进生产力”，更加没有 “仁者爱人”的宽容大度、仁爱温暖，怎么能让少数安于被“统治”？类似的，又怎么能让新疆、台湾、香港老百姓“真心归顺”呢？一句话，别说美国，我党现在连康熙都是赶不上的。不过，由于我党的常年宣传，很多汉人同胞却有了自己先进进步，藏族人落后愚昧的认识。我不否认现在确实是内地富裕，藏族人穷。但我希望同胞们能好好想想：&lt;br /&gt;&lt;br /&gt;一个20世纪初还在搞凌迟死刑，20世纪中叶还在搞肉刑惩罚，20世纪末还在搞血腥屠杀的民族，有什么资格批评藏族的“农奴制度”野蛮？&lt;br /&gt;&lt;br /&gt;一个全民大部分是文盲，没有科学素养，更没有理性精神，被单一的宣传机器轻易煽动，动不动就相信什么亩产万斤、气功、特异功能、甩手疗法、法轮功的民族有什么资格嘲笑信教的藏族人愚昧？&lt;br /&gt;&lt;br /&gt;一个无人不贪，无人不骗，假货遍地，人人互相不能信任，全民道德感与责任心大溃烂的民族有什么资格嘲笑“达赖集团”“上层僧侣”虚伪？&lt;br /&gt;&lt;br /&gt;一个吸引不了如台湾、香港、新疆、西藏等任何一个外部族群的民族有什么资格自夸自己“有管理自己的能力”，并且还要代替西藏人管理他们？&lt;br /&gt;&lt;br /&gt;——这也就是为什么80年代当国门初开，对民族地区、台湾香港“缓和”的政策能够占据主流的原因。因为不管是老百姓还是决策者自己也明白，自己实在没什么能拿得出手吸引“蛮夷”接受 “中原”统治的地方，甚至自己就是蛮夷，所以不得不“妥协”，“松绑”。&lt;br /&gt;&lt;br /&gt;二十多年过去了，中原凭着勤劳和“智慧”终于有钱了，财大气粗了，觉得自己“跻身世界民族之林”了，想买谁就能买谁了，当然再也不甘心对那些蛮夷番邦陪笑脸、讲让步了。所谓“一阔脸就变”，现在你们这些蛮子当然是“只许老老实实，不能乱说乱动”，不服？不服就不给你们吃的，或者打死你们。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3113503046497354456/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/some-argument-tibet.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3113503046497354456'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3113503046497354456'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/some-argument-tibet.html' title='some arguments about tibet'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6418978789650747498</id><published>2010-03-21T10:50:00.001-05:00</published><updated>2010-03-21T10:53:06.827-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>天朝60年编年史</title><content type='html'>祖武帝开国元年 49&lt;br /&gt;二月，王师入京，吏民欣喜。北土悉平。帝遣六军征南朝，号百万。&lt;br /&gt;四月，六军涉江，灭南朝。南酋蒋氏遁，入海，据 澎湖以抗圣化。迁九鼎于京。江南诸道初定。&lt;br /&gt;十月，帝登基于天安门。入太庙，誓，立政，改元“开国“。周文正公相。封六辅政亲王。&lt;br /&gt;王 曰：“华夏诸民今日立也！“&lt;br /&gt;十一月，大将军刘，西路招抚使邓统王师十万入蜀，前朝余孽星散，蜀，滇，黔传徼而定。&lt;br /&gt;邓平公封西南节度 使，坐镇西南以图吐蕃。&lt;br /&gt;是年，帝下《别了，司徒雷登》等三诏，用赐西夷美利坚使，夷使惭去。史称“三诏去西夷”。&lt;br /&gt;&lt;br /&gt;高 祖武帝开国二年 50&lt;br /&gt;二月，北狄俄罗斯遣使来朝，盟，世世代代约为兄弟之邦。&lt;br /&gt;六月，高丽内乱。帝诏命停战，不听。&lt;br /&gt;九月，高 丽北朝胜。同月，西夷美利坚纠合西夷数十部落侵朝鲜，号“联合国”。&lt;br /&gt;十月，高丽北朝溃，美夷之师次于鸭绿水。帝以大将军彭桓公为东征元帅，加太 子少保，太子岸英为监军，统精锐二十万入高丽，战于长津，美夷败绩。&lt;br /&gt;征西将军王震统兵入西域，设西域都护府，立生产建设兵团。西域归王化。&lt;br /&gt;           &lt;br /&gt;高 祖武帝开国三年 51&lt;br /&gt;十一月，行“三反”。 &lt;br /&gt;是年，王师美夷战于朝鲜。美夷惧，求和，帝不许。&lt;br /&gt;吐蕃归王化。自是，天下几一 统。&lt;br /&gt;太子战死沙场，天下悲恸。&lt;br /&gt;           &lt;br /&gt;高祖武帝开国四年 52&lt;br /&gt;一月，行“五反”。&lt;br /&gt;八 月，帝下“削藩令”，令东北节度使高岗王（开国辅政六亲王之一），华东节度使饶石公，西南节度使邓平公，中南节度使邓恢公，西北节度使习勋公进京。时人谓 之：“五马进京，一马当先。”&lt;br /&gt;&lt;br /&gt;是年，王师美夷再战于朝鲜。王师据上甘岭，敌纠兵数万以攻，终溃。&lt;br /&gt;           &lt;br /&gt;高 祖武帝开国五年 53&lt;br /&gt;一月，行“新三反”。&lt;br /&gt;三月，俄狄王斯大林死。（注：狄王死不曰崩。）&lt;br /&gt;五月，与俄狄盟。&lt;br /&gt;六 月，始料民，口六亿又一百九十又三万八千又三十又五。为前所未有之盛世。&lt;br /&gt;九月，彭桓公平美夷于高丽。高丽中分。北者为朝鲜，南者为韩国。&lt;br /&gt;           &lt;br /&gt;高 祖武帝开国六年 54&lt;br /&gt;帝使使日内瓦，南越中分。&lt;br /&gt;五月，故东北节度使高岗王自杀于北京，天下震惊。谥“幽”，“动祭乱常曰幽”。&lt;br /&gt;八 月，江淮大水，平地汹涌不见寸土。&lt;br /&gt;九月，行布票。天下币制革新由是而始。&lt;br /&gt;十二月，御史劾故东北王高，华东王饶怀不臣之心阴谋乱上。帝 令有司查办。&lt;br /&gt;           &lt;br /&gt;高祖武帝开国七年 55&lt;br /&gt;五月，帝使周文正公盟诸王于万隆。&lt;br /&gt;七月，行“肃反 “。帝下《关于农业合作化问题》诏。南越来朝，赐贝八亿朋。&lt;br /&gt;十月，帝下《农业合作化的一场辩论和当前阶级斗争》诏。&lt;br /&gt;是年，帝大封开国 诸将，计元帅十，大将十，上将若干。满朝文武，人才济济。&lt;br /&gt;           &lt;br /&gt;高祖武帝开国八年 56&lt;br /&gt;五月，帝曰：“百 花齐放，百家争鸣“。右党扰乱朝纲自是起。&lt;br /&gt;七月，帝曰：“美帝国主义是个纸老虎。”&lt;br /&gt;是年，埃及来宾，匈奴来盟。八方万国，皆慕我中华 圣化。&lt;br /&gt;           &lt;br /&gt;高祖武帝开国九年 高祖反右元年 57&lt;br /&gt;五月，帝逐右党。改元：反右。&lt;br /&gt;十月，帝曰： “大鸣、大放、大字报、大辩论”。&lt;br /&gt;十一月，帝西巡俄狄，曰：“东风压倒西风。“&lt;br /&gt;&lt;br /&gt;高祖武帝反右二年 58&lt;br /&gt;二月，诰告天下，命灭“四害”。“四害”者，蚊、蝇、鼠、雀也。&lt;br /&gt;六月，左丞相薄作《两年超过英国》上疏，帝大 悦，嘉之。&lt;br /&gt;七月，俄狄王赫鲁晓夫来朝。&lt;br /&gt;九月，桂人来告田可亩产十三万余斤者。&lt;br /&gt;十一月，滇民有饥色。&lt;br /&gt;是年“大跃进 “，万民炼钢，卫星纷飞。东征大军自高丽还。&lt;br /&gt;         &lt;br /&gt;高祖武帝反右三年 59&lt;br /&gt;吐蕃叛，帝命征之。王师势如破竹， 吐藩达赖逃往天竺。吐藩乃定。&lt;br /&gt;一月，帝下《“反瞒产私分”》诏，令天下百姓不得隐瞒粮食。&lt;br /&gt;二月，诸侯朝王于郑。&lt;br /&gt;七月，帝大 会诸侯于庐山。彭桓公上《万言书》，以军人干政事。帝怒。&lt;br /&gt;八月，下彭桓公于狱，尽逐右党。野有“功高震主，鸟尽弓藏”之议。&lt;br /&gt;是年，民 有饥色。&lt;br /&gt;           &lt;br /&gt;高祖武帝反右四年 60&lt;br /&gt;民大饥，赤地千里，野有饿孚，豫桂尤甚。赈饥民。&lt;br /&gt;四月， 帝命周文正公巡信阳。帝不食肉。&lt;br /&gt;六月，帝至沪上。&lt;br /&gt;七月，俄狄背盟。&lt;br /&gt;十一月，诏令六军将士“两忆三查“。“两忆三查”者， “忆阶级苦、忆民族苦、查立场、查斗志、查工作”也。&lt;br /&gt;         &lt;br /&gt;高祖武帝反右五年 61&lt;br /&gt;大饥。赈饥民。帝以“天道 不常“传位于刘哀宗。哀宗始摄政，未改元。 &lt;br /&gt;是年，高祖再会诸侯于庐山。&lt;br /&gt;           &lt;br /&gt;哀帝反右六年 62&lt;br /&gt;民 饥。&lt;br /&gt;四月，伊犁饥民乱。&lt;br /&gt;六月，彭桓公谏以“八万言书”，帝怒。 &lt;br /&gt;七月，诸侯朝高祖于北戴河，高祖曰：“阶级斗争必须年年 讲、月月讲、天天讲。”&lt;br /&gt;九月，天竺犯我吐藩。&lt;br /&gt;十月，王师伐天竺，大败之。天朝声威远播。&lt;br /&gt;           &lt;br /&gt;哀 帝反右七年 63&lt;br /&gt;二月，在京。高祖曰：“阶级斗争，一抓就灵”。&lt;br /&gt;三月，高祖大诰天下曰：“向雷锋同志学习”。&lt;br /&gt;九月，锡兰来 宾。&lt;br /&gt;十二月，周文正公出巡亚非拉十四国。天下万国，竞相慕我中华上国之风采。&lt;br /&gt;是年，我朝石油自给。&lt;br /&gt;           &lt;br /&gt;哀 帝反右八年 64&lt;br /&gt;五月，《高祖语录》始颁行。&lt;br /&gt;六月，行“样板戏”。京津沪，民有奇装异服者。&lt;br /&gt;十月，原子弹爆。&lt;br /&gt;十 二月，行“四清”。&lt;br /&gt;           &lt;br /&gt;哀帝反右九年 65&lt;br /&gt;一月，高祖颁《二十三条》。&lt;br /&gt;七月，前朝代宗李宗仁 自海外归降。高祖携帝慰之。&lt;br /&gt;十月，高祖曰：“不要怕造反。”&lt;br /&gt;九月，结晶牛胰岛素成。&lt;br /&gt;十一月，大学士姚作《评新编历史剧〈海 瑞罢官〉》，“文革”初始。&lt;br /&gt;         &lt;br /&gt;哀帝反右十年 高祖文革元年 66&lt;br /&gt;改元：文革。&lt;br /&gt;三月，邢台地震。&lt;br /&gt;五月，“文革“始行。罢科举。&lt;br /&gt;七月，高祖泅水于江，遂至于京师。&lt;br /&gt;八月，百万红卫朝王于天安门。天下始大乱。&lt;br /&gt;         &lt;br /&gt;高 祖武帝文革二年 67&lt;br /&gt;一月，上皇废哀宗，哀宗请骸骨，帝不许。高祖重秉政，颁《公安六条》《六军支左》。&lt;br /&gt;二月，“二月逆流”。&lt;br /&gt;三 月，黜左丞相薄。&lt;br /&gt;五月，天下始行“忠字舞”、“早请示，晚汇报”、“语录歌”、“语录操”。&lt;br /&gt;八月，英夷使馆火。&lt;br /&gt;是年，颁 《高祖语录》八千六百余万。&lt;br /&gt;&lt;br /&gt;高祖武帝文革三年 68 &lt;br /&gt;黜哀宗刘、右丞相邓。&lt;br /&gt;是年，吐蕃，西域革委会成立。&lt;br /&gt;&lt;br /&gt;高祖武帝文革四年 69&lt;br /&gt;林庄 公赞曰：“大海航行靠舵手，干革命要靠毛泽东思想！”&lt;br /&gt;三月，王师败俄狄于珍宝洲。&lt;br /&gt;四月，九大，封林庄公为亲王，加九锡，赐林亲王天子 旌旗，出入免跪拜。&lt;br /&gt;十一月，杀哀帝于开封。其卒不赴告。&lt;br /&gt;         &lt;br /&gt;高祖武帝文革五年 70&lt;br /&gt;春，林庄亲王 欲上帝尊号，帝不悦。&lt;br /&gt;四月，卫星上天，红旗未落地。&lt;br /&gt;八月，帝会诸侯于庐山。&lt;br /&gt;十二月，帝会夷人斯诺。周文正公主持修建葛洲 坝。&lt;br /&gt;         &lt;br /&gt;高祖武帝文革六年 71&lt;br /&gt;一月，陈懿公薨，帝往悼之，曰：“陈毅是位好同志。”加封王，谥“懿”，法 曰：“温柔贤善曰懿“。&lt;br /&gt;八月，帝南巡。&lt;br /&gt;九月，林庄亲王叛。欲弑帝，帝觉，攻林庄亲王，庄亲王北奔，死于漠北。谥“庄”，谥法曰：“死 于原野曰庄“。臣而作乱，贬爵号为伯，厥死不言薨。&lt;br /&gt;&lt;br /&gt;高祖武帝文革七年 72&lt;br /&gt;美夷，倭奴来盟。&lt;br /&gt;           &lt;br /&gt;高 祖武帝文革八年 73&lt;br /&gt;一月，南越平。&lt;br /&gt;三月，重起用邓平公为右丞相&lt;br /&gt;七月，皇孙远新封张铁生“白卷英雄“。&lt;br /&gt;十二月， 帝令六军各提督对调。&lt;br /&gt;           &lt;br /&gt;高祖武帝文革九年 74&lt;br /&gt;二月。赞比亚国王来朝。帝提出三个世界之划分。&lt;br /&gt;十 一月，大元帅，彭桓公薨。谥“桓“，谥法曰：“辟土服远曰桓。”。&lt;br /&gt;是年，发秦始皇陵。&lt;br /&gt;&lt;br /&gt;高祖武帝文革十 年 75&lt;br /&gt;是年，前朝思帝死于东海夷洲。谥法曰：“追悔前过曰思”。王而失国，厥死不   言崩。&lt;br /&gt;           &lt;br /&gt;高 祖武帝文革十一年 惠宗凡是元年 76&lt;br /&gt;帝病，道扬末命于公子华，曰：“你办事，我放心。”，公子华嗣训。&lt;br /&gt;一月，周文正公薨。谥法曰： “慈惠爱民曰文“，“刚直不阿曰正”。国人悲 &lt;br /&gt;之，执手泣别。&lt;br /&gt;四月，国人益悲，集于天安门。&lt;br /&gt;七月，地大震，死伤无数，丧丁 二十八万余口，帝惊。&lt;br /&gt;是月，大元帅，朱武公薨。&lt;br /&gt;八月，帝崩。天崩地坼，万民震恸，如丧考妣。谥武。谥法曰：“克定祸乱曰武”。公子华 立，是为惠帝。惠帝命“两个凡是”，改元：凡是。&lt;br /&gt;十月，四凶作乱，叶定公执四凶。谥法曰：“刚强直理曰武”。&lt;br /&gt;           &lt;br /&gt;惠 帝凡是二年 77&lt;br /&gt;八月，“文革”罢，天下初定。重开科举取士。南斯拉夫王铁托来朝。&lt;br /&gt;是年，邓平公摄政。惠帝畏之。&lt;br /&gt;           &lt;br /&gt;惠 帝凡是三年 78&lt;br /&gt;一月，南越背盟。&lt;br /&gt;十一月，邓平公游美夷。&lt;br /&gt;是年，拨乱反正。&lt;br /&gt;           &lt;br /&gt;惠 帝凡是四年 79&lt;br /&gt;二月，南越背我，邓平公命六师伐之。&lt;br /&gt;是年，始行“计划生育“。&lt;br /&gt;           &lt;br /&gt;惠帝凡是 五年 宣帝改革元年 80&lt;br /&gt;五月，葬刘哀帝。谥法曰：“恭仁短折曰哀”。邓平公悼曰：“伟大的无产阶级…永垂不朽。”&lt;br /&gt;十一月，邓平公与 诸大臣共废惠帝，邓平公立，是为宣帝。&lt;br /&gt;是年，改革开放。&lt;br /&gt;&lt;br /&gt;宣帝改革二年 81&lt;br /&gt;五月，开国女亲王宋薨。维新立王，率巡大卞，用变和天下。&lt;br /&gt;           &lt;br /&gt;宣帝改革三年 德帝耀邦元年 82&lt;br /&gt;七月，料民，口十亿。&lt;br /&gt;是年，胡德公执政。&lt;br /&gt;           &lt;br /&gt;德帝耀邦二年 83&lt;br /&gt;是 年，设六师行署于京师。&lt;br /&gt;           &lt;br /&gt;德帝耀邦三年 84&lt;br /&gt;王师肆伐南越。&lt;br /&gt;           &lt;br /&gt;德 帝耀邦四年 85&lt;br /&gt;是年，裁甲士四分一。&lt;br /&gt;           &lt;br /&gt;德帝耀邦五年 86&lt;br /&gt;叶定公薨。谥法曰：“安民大虑 曰定”。&lt;br /&gt;十二月，众翰林大学士上书斥污吏。&lt;br /&gt;           &lt;br /&gt;德帝耀邦六年 仁宗紫阳元年 87&lt;br /&gt;一月，上史 系宗，以为德亲王。立亲王赵，是为仁宗。改元：紫阳。&lt;br /&gt;           &lt;br /&gt;仁帝紫阳二年 88&lt;br /&gt;是年，物价飞涨。王舟破南 越于南海。&lt;br /&gt;           &lt;br /&gt;仁帝紫阳三年 孝帝整顿元年 89&lt;br /&gt;二月，美夷来宾。&lt;br /&gt;三月，吐藩乱。&lt;br /&gt;四 月，德亲王耀邦薨，谥法曰：“绥柔士民曰德“。京师大乱，暴民起于萧墙，波及天下。唯帝治沪上，安民伐乱，一时东南平定，万民悦服。 &lt;br /&gt;六月乙 酉，国人暴动，李丞相奉上皇旨平京师乱，废仁宗。壬辰，帝登基，改元：整顿。&lt;br /&gt;九月，上皇始退而不朝。&lt;br /&gt;&lt;br /&gt;孝 帝整顿四年孝帝市场元年92&lt;br /&gt;二月，太上舜巡，百越南海诸民迎之，吏民欢欣，太上喜，下南巡旨，乃改元：市场。&lt;br /&gt;           &lt;br /&gt;孝 帝市场四年孝帝三讲元年   95&lt;br /&gt;革顺天府尹陈，九门提督王，王自缢以谢罪，陈交部议处。天下万民喜而奔走。&lt;br /&gt;十一月，帝颁《三讲》 诏，曰：“讲学习、讲政治、讲正气。”改元：三讲。&lt;br /&gt;           &lt;br /&gt;孝帝三讲二年 96&lt;br /&gt;帝观兵于台湾海峡。百万将士 三呼万岁，足为一时之观。有西夷兵临东海窥之，   帝镇定不为动，夷乃去。&lt;br /&gt;           &lt;br /&gt;孝帝三讲三年 97&lt;br /&gt;二 月，太上崩，天下举哀七日。谥法曰：“圣善周闻曰宣”。&lt;br /&gt;七月，逐英夷于九龙。&lt;br /&gt;           &lt;br /&gt;孝帝三讲四年 98&lt;br /&gt;三 月，以容基为丞相。&lt;br /&gt;是年夏，洪甚，湖广，两江受其害，嘉鱼平地水深一丈。广州，金陵，济南各府均出兵数万解万民于倒悬。军民鱼水，堪为千古佳 话。各地大开官仓赈灾。上诏免灾地三年钱粮。是岁，仓廪实，民生无碍。&lt;br /&gt;&lt;br /&gt;孝帝三讲五年 99&lt;br /&gt;元月，帝登京师世 纪坛。&lt;br /&gt;五月，美夷炸我驻南使馆。帝斥之，夷惶恐，献布帛钱粮若干。太学生群起于宫门。帝诏曰：不为己甚。&lt;br /&gt;十二月，逐葡夷于澳门。自是 逐尽洋夷，唯前朝余孽尚据澎湖以抗圣化。&lt;br /&gt;是年，再裁甲士50万。&lt;br /&gt;           &lt;br /&gt;孝帝三个代表元年 00&lt;br /&gt;二 月，帝巡幸高州，始行“三个代表”，乃改元“三个代表”&lt;br /&gt;四月，有邪教FLG造乱于宫门。&lt;br /&gt;七月，帝下诏除之。&lt;br /&gt;           &lt;br /&gt;孝帝三个代表二年孝帝德治元年 01&lt;br /&gt;正月，帝下诏，以德为治国之本，乃改元：德治。是月，乱民自焚于宫门。&lt;br /&gt;二月，京师西五十里地震，大风沙。&lt;br /&gt;三月，江西 乡校爆炸，士民震怖。未及，大盗龚某作乱于石家庄，人心惴惴。&lt;br /&gt;四月，西夷名美利坚者遣兵窥境，尽为我所擒。乃昭谕夷使，严词责备，夷酋布殊大 惧，顿首泣血而为书，谢罪殿前。上宽仁，念彼夷兵家小亦有倚门之苦，皆予开释，令其团聚。八方万国，由是遍赞中华上邦之厚德。&lt;br /&gt;七月，上派 重臣赴沙俄展示实力，大获全胜迎奥运归，举国欢颜。&lt;br /&gt;           &lt;br /&gt;孝帝德治二年 恭帝科学发展元年   02&lt;br /&gt;三 月，港首朝帝述职，港人讥之。龙颜怒，斥曰：“Too   simple,   sometimes &lt;br /&gt;naive！“世人乃悉上通诗书礼乐余得 明阳之吼，文武之道，张弛并举，天下骚然。&lt;br /&gt;十一月，百官入觐，孝帝阐位。初，上皇废仁宗，立两江总督江，是为孝帝，孝帝龙行虎步，太平天子真 命，即位一十有三年矣。法曰：“慈惠爱亲曰孝”；“德象天地曰帝”、“德合天者曰帝”。&lt;br /&gt;丁亥，胡亲王登基，改元“科学发展”，封八辅政亲王，凡 吴国公、温宝公、贾林公、曾红公、黄菊公、吴正公、李春公、罗干公，出入免跪拜。&lt;br /&gt;十二月，帝遣使使于蒙特卡洛，夷具惶恐，世博事乃成。&lt;br /&gt;&lt;br /&gt;恭 帝   科学发展   二年   03&lt;br /&gt;一月，帝率上书房诸大臣巡幸西柏坡，下《牢记“两个务必”》诏，嘱万民承高祖之遗风。&lt;br /&gt;年 初，瘟疫盛行。至三月，京师人心惶惶。四月，帝令削顺天府尹孟、上皇御医张职。越数月，疫魔始降。&lt;br /&gt;三月，拜温宝亲王为相，曾红亲王为镇国公，加 封九锡。&lt;br /&gt;十月，“神舟”五号升空，帝大悦，赏“航天英雄”杨戴双眼花翎。&lt;br /&gt;本年，南朝余孽阿扁再行独祸，帝下旨斥之。&lt;br /&gt;   &lt;br /&gt;&lt;br /&gt;恭 帝   科学发展三年   04&lt;br /&gt;五月，天道无常，川赣湘等道大旱。至七月，赣湘及两广大水。&lt;br /&gt;九月，四中全会，上皇孝帝始退而不 朝。&lt;br /&gt;是年，“空壳奶粉”、“嘉禾”事出，上不悦。&lt;br /&gt;&lt;br /&gt;恭帝   科学发展四年   05&lt;br /&gt;一月，帝 诏告天下，永免农业税，万民抚额称善，赞胡温亲民简赋，史称“胡温新政”。&lt;br /&gt;废帝仁宗殂。辅政亲王贾林公、内务府总管王刚等往八宝山悼之。先是， 仁宗谋黜太上，谕乱民曰：“我们都老了……”，太上与诸大臣共废之。&lt;br /&gt;上下旨行士大夫保先教育。&lt;br /&gt;三月，HONGKONG都护董奉旨入 京，任谏议大夫。&lt;br /&gt;四月，南朝国党魁连战、亲党魁宋瑜、新党魁郁明来朝。&lt;br /&gt;九月，帝盟诸王于纽约，曰：“努力建设持久和平、共同繁荣的和 谐世界”，四夷咸服。&lt;br /&gt;   &lt;br /&gt;&lt;br /&gt;恭帝   科学发展五年   和谐元年   06&lt;br /&gt;三月，帝作“八荣八耻”诏，万 民争诵之。&lt;br /&gt;六月，大旱，民生幸无碍。&lt;br /&gt;七月，修铁道直通吐蕃，举国欢悦。&lt;br /&gt;八月，《孝帝文选》颁行天下，万民课之。&lt;br /&gt;十 月，高丽国行核爆，美夷磨刀欲伐之，帝令三军移驻鸭绿，美夷惧之，乃去。&lt;br /&gt;六中全会，帝下《构建和谐社会》诏，乃改元“和谐”。&lt;br /&gt;&lt;br /&gt;恭 帝   和谐 二年   07&lt;br /&gt;四月，上书房下诏，节能减排&lt;br /&gt;同月，温相巡东夷、高丽，宣我国威。&lt;br /&gt;十月，行十七大盛会， 百官入朝。&lt;br /&gt;&lt;br /&gt;恭帝   和谐三年   08&lt;br /&gt;三月，南国雨雪成灾。&lt;br /&gt;三月，吐蕃作乱，帝除之，并下诏斥乱酋 达赖。&lt;br /&gt;五月，蜀地大震，死伤十万余。&lt;br /&gt;八月，行奥运盛会，万国来朝，我朝金牌夺冠，唯蹴鞠一败涂地，国人不悦，上乃罢教头谢氏亚龙&lt;br /&gt;&lt;br /&gt;小 明语：亚克西元年 10&lt;br /&gt;&lt;br /&gt;待后人评说……</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/6418978789650747498/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/60.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6418978789650747498'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6418978789650747498'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/60.html' title='天朝60年编年史'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-604998130287153232</id><published>2010-03-20T16:11:00.000-05:00</published><updated>2010-03-20T16:12:15.861-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>aiww</title><content type='html'>http://twitter.com/aiww/status/10164214735</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/604998130287153232/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/aiww_20.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/604998130287153232'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/604998130287153232'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/aiww_20.html' title='aiww'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-369967921515665473</id><published>2010-03-15T10:44:00.004-05:00</published><updated>2010-03-15T11:14:00.288-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>web censorship</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;放假前的几天，心浮气躁的很。放了假之后，反而一切都安定下来。今天又来到了图书馆看书。周六打篮球，周日又去了round rock逛街，所以今天的锻炼取消，改计划为周二周四周六锻炼，这样还能好好休息。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;这些天，每天都会有个把小时花在新浪的微博上面。twitter，也许是我follow的人大都喜欢政治，所以可看的素材并不是很多。实话实说，我对于政治本身没有丝毫的兴趣。无限的褒奖或者是无限的贬低一个政党，都是无意义的事情。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;微博略有不同，大多数人的视角还关注于社会和民生。有人说——通过这里，了解了中国的社会——倒也有几分道理。这里有政府官员，有实名五毛，打着爱国爱党爱民众的旗子，而看他们几条语言，就知道都是些玩弄概念的人，什么狗屁支持引言获罪，什么发现问题不重要解决问题才重要，乱七八糟的逻辑。而且最有趣的是，经常会有大家在探讨中国社会的不合理不平等，丫的来一句，其实美国也是这个样子的——总他妈扯到美国，潜逻辑是美国不好的地方，中国理所应当不好——还扯民族主义的大旗呢，这才是不爱国的嘴脸。前阵时间，毛新宇题字，希望人民网和强国论坛的网友打开思路，和他多多交流。这小子说了很多搞笑的话，不过这句话倒是说到点子上了，他也知道这两个五毛集散地的网友思路没有打开。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;当然，我看到的微博，是有着一个专业审查团队精审之后的留言。网络形成最初，上面的势力版图是国有资本垄断最少的。门户、视频、博客、专业网站，百花齐放。等到政府发现这座金矿的时候，各种规章制度接踵而至。前段时间看了篇文章，讲得有些道理。不用扯什么社会制度、意识形态这样的大旗，说到最后，那只是国家希望国有资本进入这些富饶领域的由头，它在尽力的控制社会的方方面面，占领各种可能攫取利益的地方。现在甚至出现了很多专门进行文字审查的外包公司。当然，这样的肥水，或者说这样搞政治修养的事情，也是同样不能让草民来做的。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;-----&lt;/div&gt;&lt;div&gt;韩寒新的一篇文章很棒，转载于此。&lt;/div&gt;&lt;div&gt;&lt;a href="http://blog.sina.com.cn/s/blog_4701280b0100hcf6.html"&gt;http://blog.sina.com.cn/s/blog_4701280b0100hcf6.html&lt;/a&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;我去哪里找，像你那么好(2010-03-14 01:17:22)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;在上上一篇文章中，我设置了投票功能，到现在一共有21万个独立的IP进行了投票，结果显示，有百分之九十六，也就是20万人觉得韩峰是个好干部，应该留任，有百分之四不到1万人觉得韩峰是个坏干部，应该严惩。当然，以后我会多设置投票功能，以弥补大家从来没有见过选票但却选出了不少人大代表的遗憾。从今天起，本人将和各大政府网站单方面结成战略合作伙伴，当他们开始就某事件投票的时候，我这里也将和他们开始同步投票，我本人将不写任何文字以免对投票结果产生暗示性导向，最后看看结果有什么差别。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;投票的人中，有人是发自内心的觉得韩峰还算不错，胃口比较小，有人是真情流露的觉得韩峰在官员中已经算是个人修养比较高的，有人是起哄的，有人是反讽的，但是大家都很无奈。我爷爷那会儿，大家都知道有困难，找干部，弄不好干部比你还困难，后来大家都知道，这个国家分好的官员和坏的官员。韩峰的投票结果说明我们正式进入了一个几乎无官不贪，只分好的贪官和坏的贪官的年代。大家认为韩峰明显属于好的贪官。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt; &lt;/div&gt;&lt;div&gt;虽然这几天，韩峰因为在土地交易中受贿被逮捕，但是在报道韩峰的新闻中，我们不应该只注意到韩峰玩手机，玩职权，玩小谭。在《新世纪周刊》的采访中，韩峰的领导这样评价他，“广西的烟草消费量在全国排名靠后，而来宾地区的消费量则更低。韩峰在来宾的政绩之一，就是在2007年使该地区人均消费香烟达到六条以上，超过了全国平均量。”&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt; &lt;/div&gt;&lt;div&gt;这样一个美好的地方，原本大家抽烟都比较少，国家设立了一个机构，这个机构里有个官员，让这个原本香烟消费很少的地方人开始大量的抽烟，最后人均消费了六条以上，超过了全国平均量，居然这就是成了好领导的标准。让老百姓多抽烟居然成为了政府部门的政绩。作为一个像样的国家，你不禁烟算了，你怎么能将专门设立一个官方机构旨在让老百姓多抽烟呢，你怎么能用老百姓的健康来换取你这点微不足道的GDP呢。不过我转念一想，也正常，从来都是这么干的。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt; &lt;/div&gt;&lt;div&gt;在两会期间，经常有媒体让我为两会想提案，或者录制一些谈论民生的节目，甚至去北京和两会做近距离的接触，我都推辞了，我一个草民，我去做什么呢，第一，我并不缺笔记本电脑，第二，都说了我不演戏的。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt; &lt;/div&gt;&lt;div&gt;但是，在两会结束之际，我想说，其实，我们的政府真的是很幸福的。大部分的老百姓永远认为，上头的政策是对的，只是给下头执行歪了。几十年之后，他们还是认为，上头的政策是对的，只是下头怎么老是执行歪。他们从来没有怀疑过第一句话，他们对“上头”还是抱着最原始的信任。屁民们遇见了委屈，能做的最后一件事情就是上京告御状，虽然信访办更多的职责是负责登记新增的监控对象和运输他们。在遇到村长欺负的时候，他们会想到镇长，镇长不管的时候，他们会想到县长，县长不管的时候，他们会想到市长，但是他们永远找不到市长，他们于是幻想着中央的部长，甚至更高的领导，他们觉得只是被下面这些领导们阻断了他冤情的传达，他们从来不曾想到，他想见的人说不定早觉得他烦死了，背地里可能就耍下一句没有大局观。他们从来只是在讨要自己的一点点权益，从来不去要求自己有什么权利，他们从来只是觉得是地方官员的问题，而不是其他什么问题，他们只要有一个坐着奥迪的领导在过年的时候慰问一下就觉得非常温暖，当然，那也需要他不光穷，而且穷的正确，穷的典型。他们觉得韩峰这样就已经不错了，他们对干部的指望并不是为老百姓服务，而是不要找老百姓的麻烦就行了，你住你的豪宅，坐你的好车，玩你的小谭，咱已经都不管了，只要你不要踩我的小强，拆我的民房，弄我的小芳，你就是老百姓心目中的好官。如果网民讨厌，删帖就行，如果作家讨厌，和谐就行，如果记者讨厌，只要一句话——最近不要报道负面新闻就行。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt; &lt;/div&gt;&lt;div&gt;所以说，这样的政府是幸福的，你们拥有着这样淳朴温良容易满足的老百姓，他们虽然有很多不满，但他们有着最底线的信任。有的时候他们聚众闹个事，最多就是因为本来政府答应他们只要把自己的蛋糕给政府，政府会给他们一个包子，结果只给了一个馒头。你只需要从牙缝里剔出一点肉给他们当馅，他们就满意的回家了。面对这样的人民，我真的愿望政府可以忘记GDP的荣耀，让出一个点，在开会的时候少说一点排比句，多分一杯羹给大家，让他们少一点生活压力，庇护他们，罩着他们，让他们有点尊严，而不是通过新华社通稿被获得。你要是把这样好的人民给饿死了病死了穷死了逼死了毒死了吃死了气死了冤死了喝水喝死了睡觉睡死了，你去哪里找比他们更老实的人民呢。&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/369967921515665473/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/web-censorship.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/369967921515665473'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/369967921515665473'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/web-censorship.html' title='web censorship'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6360265101458819299</id><published>2010-03-07T13:59:00.002-06:00</published><updated>2010-03-07T14:02:38.835-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Comment about BODYGUARDS AND ASSASSINS</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;唯有进步值得信仰&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;by laststore &lt;/div&gt;&lt;div&gt;&lt;a href="http://movie.douban.com/subject/3626416/reviews"&gt;http://movie.douban.com/subject/3626416/reviews&lt;/a&gt;&lt;/div&gt;&lt;div&gt;--------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;　　现在是2009年，华丽丽的建国六十年，荧屏与荧幕上都充满了DANG单方面的回忆与歌颂，按照我老爹的总结就是：全面展示我们如何弄倒国民党。 &lt;/div&gt;&lt;div&gt;　　今年秋天，我陪朋友一起看赫赫有名的献礼电视剧《人间正道是沧桑》。她从小到大是个好孩子，学习好，思想好，行为积极上进，党员，国家机关从业人员，不看毒草，不听靡靡之音，更不会有丝毫反动思想。 &lt;/div&gt;&lt;div&gt;　　我们一起看到影片中的瞿恩就义，孙淳叔叔一边喊着口号一边倒下。我朋友哄笑起来嗤之以鼻：真假，太假了，你说是不是？！我说不是的，虽然你不相信，但是当时这位瞿恩的原型叫做瞿秋白，他的确是唱着国际歌，喊着共产主义万岁死掉的。DANG今天很操蛋，并不代表所有信仰这种主义的人都很操蛋。 &lt;/div&gt;&lt;div&gt;　　从什么时候开始，连好孩子们也开始什么都不相信。 &lt;/div&gt;&lt;div&gt;　　不相信有人会为了主义而慷慨赴死； &lt;/div&gt;&lt;div&gt;　　不相信有人会大公无私舍身取义； &lt;/div&gt;&lt;div&gt;　　不相信有人立志为生民请命为万世开太平。 &lt;/div&gt;&lt;div&gt;　　执政者将自身的理想与主义抬得越高，我们所感受到现实的就越荒谬，实用主义君临时代，娱乐精神空前风行。 &lt;/div&gt;&lt;div&gt;　　文革时，家乡有青年在街头打闹嬉戏，高喊着：你们敢打革命爷，你们敢打革命姐。至此，“革命”再也不是一个神圣的词语，它完全沦为一个笑话。 &lt;/div&gt;&lt;div&gt;　　我们还没开始建构，就已经开心地拥抱解构，我们还没开始做梦，就已经嘲笑理想，我们还没学会相信，就开始提防欺骗。最终我们打倒了神圣，最终我们热情地拥抱庸俗，最终未能建筑起自身核心价值的社会，不可避免地以大量物质享受来弥补空虚与维持稳定，我们被忽悠太久，产生最大恶果不是我们笨了，而是我们奸诈了，我们谁也不相信包括自己。 &lt;/div&gt;&lt;div&gt;　　 &lt;/div&gt;&lt;div&gt;　　 &lt;/div&gt;&lt;div&gt;　　一直以来，我不喜欢革命，我恐惧它巨大的破坏力，我厌恶它的血腥后果，我讨厌它可以随时成为攻击异己的工具，我更憎恶它随时变化的面孔，吞噬自身儿女时比吞噬敌人更加凶狠。 &lt;/div&gt;&lt;div&gt;　　一直以来，我不喜欢主义，尤其那些认为自身的道路才是人类终结目的的主义，当他们被压迫的时候他们表演得如此纯洁理想，当他们成为主流，他们所表现出的排外性与空前专制往往比前任统治者更甚。 &lt;/div&gt;&lt;div&gt;　　所以，我看《十月围城》不仅仅是抱着八卦的心态，更是因为被它片花中孙中山的一段独白给触到。 &lt;/div&gt;&lt;div&gt;　　“欲求文明之幸福，必经文明之痛苦，而这痛苦，就叫做革命。” &lt;/div&gt;&lt;div&gt;　　应该说这是我见过的关于革命最好的解读，它让我在某种程度上，终于和“革命”这个词握手言和。 &lt;/div&gt;&lt;div&gt;　　我可以厌恶革命，可以反对主义，但是对于革命者，对于为主义而赴死的人，甚至被主义吞噬的人们，我心怀尊重。 &lt;/div&gt;&lt;div&gt;　　我今日之所感所知所思所享，无不来自于百年来这些努力去实现臆想中“中国明天”的人们。他们或伟大或浅薄或愚蠢或无私或卑劣或聪明或成功或失败或一代领袖或千古罪人，我可以评判他们，同时心怀某种敬畏与感激。 &lt;/div&gt;&lt;div&gt;　　我们已经无法体会到当初那些热情，因为我们失去了那个感知热情的时代环境。 &lt;/div&gt;&lt;div&gt;　　革命、民主、自由、主义、共和、共产、大同……都是曾经被用以呼唤理性、现代性、个性、人性与新的时代，同时也这些词也被用以唤起多数人的暴力，用以巩固权力，用以践踏权利与扭曲人性、创造同质化。 &lt;/div&gt;&lt;div&gt;　　就在不远的年代里，人们感知国家的衰败与无望，人们有着各自臆想的正义与理想，人们为了捍卫思想而厮杀，当思想成为组织，人们卷入其中，最终组织的荣衰代替了思想的成败，最终组织的目的代替了过程的正义，组织代替了理想，成为正义本身。 &lt;/div&gt;&lt;div&gt;　　《十月围城》中，革命者臆想着只要保卫组织，保卫领袖就等于保卫正义，于是可以欺诈义士作为诱饵引开杀手，清廷官员臆想着只要保卫朝廷统治与社会的安稳就等于保卫正义，于是可以大开杀戒血流成河。 &lt;/div&gt;&lt;div&gt;　　相同的是，他们都认为自身是正义。 &lt;/div&gt;&lt;div&gt;　　影片的主角并不是这“正义”的双方，而是那些为了这场理想之争、，明天之争而付出生命的小人物，他们倒在政党、革命家、政治家、军阀、党魁、知识分子、大商人们叱咤风云的舞台下，他们是渺小的配角，他们所求的无非是俗世幸福，而时代给了他们一个小时，去成就历史。 &lt;/div&gt;&lt;div&gt;　　我总是想起茨威格在《人类群星闪耀时》中关于马赛曲的故事，马赛曲的作者一生除了写出这首歌之外乏善可陈。仿佛时代在两个小时的时间中选择了那个普通的人物，借他的手写出来这伟大的旋律。 &lt;/div&gt;&lt;div&gt;　　或许，在中国从来都没有出现过一个伟大的组织；或许，在中国社会的方向抉择中，我们总是抽到下下签；或许，我们任何一个机会都导向失败；或许。我们总是一遍遍重复着历史的错误与悲剧；或许，我们至今还不知自己来自何方，去向何处。 &lt;/div&gt;&lt;div&gt;　　在衰败、痛苦与危机重重的年代里，青年们“闭上眼就能看到中国的明天”，这种深刻的幸福与乐观，在今天的我们从未体会过。 &lt;/div&gt;&lt;div&gt;　　 &lt;/div&gt;&lt;div&gt;　　去年回家时在飞机上读顾准，在生命的倒数第二年，他在信件中和自己的弟弟探讨“终极目的”这一命题—— &lt;/div&gt;&lt;div&gt;　　“从来都没有什么终极目的，有的，只是社会的进步。” &lt;/div&gt;&lt;div&gt;　　从来都没有任何一个人，一个组织，一种主义能够解决所有的问题，也没有任何一个人，一个组织，一种主义值得你去放弃自身的判断力。也没有任何一个人，一个组织，一种主义能够替代进步本身。 &lt;/div&gt;&lt;div&gt;　　所以，值得信仰的是进步本身，而不是任何标榜“进步”的组织。 &lt;/div&gt;&lt;div&gt;　　今天的主流，无非也是昨日的异端，今天的异端，也许就是明日的主流。 &lt;/div&gt;&lt;div&gt;　　归根结底，时代一定会以自己的方式向前进步，任何人“万万岁”的说梦，任何组织“代表人民”的意淫，任何主义“永远先进”的自欺欺人，最终都会落败于时代的力量，这或许是我们仅存的乐观与希望所在。 &lt;/div&gt;&lt;div&gt;　　 &lt;/div&gt;&lt;div&gt;　　前段时间，我还很得瑟地数落过香港影业，演员凋敝，市场缩水，一线花旦均被大陆包揽，香港导演只能来大陆找投资、找演员、找市场。 &lt;/div&gt;&lt;div&gt;　　现在看来，对比刚刚上映的《三枪》，我觉得张艺谋可以找块豆腐撞撞。相比较大陆导演在“大片”中每况愈下的表现，尽管资金缺、市场缺、演员缺，香港电影依旧完胜。内地的投资，内地的演员，却进一步成就了香港这座城市，香港电影人不可撼动的文化地标位置。、 &lt;/div&gt;&lt;div&gt;　　我虽然有点难过，但是不得不服，也不得不承认—— &lt;/div&gt;&lt;div&gt;　　我一直希望中国影坛出现《十月围城》这样的片子。 &lt;/div&gt;&lt;div&gt;　　它触及了我一直很感兴趣的时代与人物，同时它很好看。 &lt;/div&gt;&lt;div&gt;　　在中国这么漫长的历史岁月里，我们值得骄傲的不仅仅是那些老祖宗的家底，更是自晚清以来为中国明天而不断奋斗的人们，尽管每一个人心中都有自己臆想的正义与未来，尽管并非每个人都被时代所青睐，但是他们却代表着进步的可能性。 &lt;/div&gt;&lt;div&gt;　　小时候不喜欢读近代史，憋屈而令人心烦，古代史多好，我们多牛x，我们是世界第一。 &lt;/div&gt;&lt;div&gt;　　现在能慢慢体会到，读懂它，才会真正理解今日之中国从何而来，才能有资格去思索今日之中国向何而去。 &lt;/div&gt;&lt;div&gt;　　可惜，对于那段历史，我们缺乏空间去探求，媒体议题缺失，社会平台狭小，它沉入戏说、样板戏、娱乐的海洋深处。 &lt;/div&gt;&lt;div&gt;　　找不到一个社会的普世价值不可怕，可怕连寻找价值的人都没有，可怕的是我们连探讨它的空间都没有，更可怕的是我们没有探讨它的兴趣。 &lt;/div&gt;&lt;div&gt;　　革命成功了，民主不一定会来。 &lt;/div&gt;&lt;div&gt;　　一个党成功了，民主不一定会来。 &lt;/div&gt;&lt;div&gt;　　一个主义成功了，民主不一定会来。 &lt;/div&gt;&lt;div&gt;　　千千万万人死去，民主不一定会来。 &lt;/div&gt;&lt;div&gt;　　甚至我们知道，民主只是个孩子，它能被不同主义，不同党派抱来抱去，被打扮成不同摸样。 &lt;/div&gt;&lt;div&gt;　　但是如果我们失去了对民主的兴趣，我们失去了对进步的相信，我们无法正视在追寻民主与进步中的鲜血、失误、愚蠢、卑劣与其他种种最坏的事情，我们永远不值得去享受它的光明与幸福。 &lt;/div&gt;&lt;div&gt;　　玛丽莲梦露说的好，如果你无法忍受我最坏的一面，你也无法得到我最好的一面。 &lt;/div&gt;&lt;div&gt;　　古往今来，所有让人奉献才华、勇气、激情乃至生命的美好事物皆如此。 &lt;/div&gt;&lt;div&gt;　　 &lt;/div&gt;&lt;div&gt;　　在看完《人间正道是沧桑》之后，我去查了查瞿秋白的故事，在他生命的最后关头，他写了最后的文章《多余的话》，他说如果他还有生存的机会，他宁愿做一个普通的学者与知识分子。那一瞬间，相对于我DANG那些最终走上历史前台的男一号们，这位最终死在历史中的男配角显得更为亲近。他不再是曾经的党魁，他也无非是时代选中的一个普通人。 &lt;/div&gt;&lt;div&gt;　　所以，容我最后再推荐一次《十月围城》，一部关于时代中普通人抉择的影片—— &lt;/div&gt;&lt;div&gt;　　这是一部很有诚意的片子。 &lt;/div&gt;&lt;div&gt;　　这部片子节奏紧凑且台词功力非常出色。 &lt;/div&gt;&lt;div&gt;　　这部片子终于实现了“一个好看的故事”和“一个深刻的故事”的融合。 &lt;/div&gt;&lt;div&gt;　　这部片子中不少演员贡献了迄今为止最优秀的表演，尤其是王学圻与甄子丹。 &lt;/div&gt;&lt;div&gt;　　这部片子以历史洪流中小人物的命运最终书写了一个宏伟的命题。 &lt;/div&gt;&lt;div&gt;　　这部片子内涵极其丰富，导致于我在观影途中，脑海中不断浮现各式各样的人物与姓名。 &lt;/div&gt;&lt;div&gt;　　这部片子没有单方面歌颂革命，也不是简单的正邪之战或者好坏之争。 &lt;/div&gt;&lt;div&gt;　　这部片子没有我写的这么沉重，相反它很商业，它非常好看。 &lt;/div&gt;&lt;div&gt;　　…… &lt;/div&gt;&lt;div&gt;　　这是我在豆瓣的第一篇影评，也是我打出的第一个评级。 &lt;/div&gt;&lt;div&gt;　　并非我看的其他影片不足以打动我，而是从这部影片开始，我看到了华语电影的某种可能性，我看到了“民主、革命、主义、未来……”这些词汇重新以严肃姿态回归主流议题的可能性，即使有人是为了去看偶像，有人是为了去看笑话，有人是为了去看武打，只要有人去看，我还是看到了思考的可能性，看到在这个娱乐时代中，我们愿意再次拥抱沉重的可能性。 &lt;/div&gt;&lt;div&gt;　　鉴于以上珍贵的可能性，我给它五颗星。 &lt;/div&gt;&lt;div&gt;　　值得迷信的不是陈可辛，也不是香港电影，而是终究会到来的进步，更是精神不灭的薪尽火传。&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/6360265101458819299/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/blog-post.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6360265101458819299'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6360265101458819299'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/blog-post.html' title='Comment about BODYGUARDS AND ASSASSINS'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7094617946615661380</id><published>2010-03-03T09:11:00.003-06:00</published><updated>2010-03-03T09:23:02.100-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>some feeling</title><content type='html'>很多事情，都是拖拖拉拉到了最后，才发觉，原来事情本身并没有什么艰难险阻，于是悻悻完成。如果少些惰性，可能完成相同多的任务，还会给自己给旁人一个更好的感觉。仅和习惯相关，望自己能逐渐改正。&lt;br /&gt;&lt;br /&gt;转载篇文章，和成功学无关，作为借鉴，解决自身缺点，是个正途。&lt;br /&gt;&lt;br /&gt;---------&lt;br /&gt;&lt;br /&gt;With a twist to the common list of habits that are useful to establish, here are 7 habits that you do best to avoid.&lt;br /&gt;&lt;br /&gt;Just like finding habits that can be useful for you it’s important to find habits that are holding you back.&lt;br /&gt;&lt;br /&gt;Most of these 7 habits can easily become such a normal, everyday part of life that you hardly notice it (or how it’s affecting you).&lt;br /&gt;&lt;br /&gt;I’ve dabbled with all of them quite a bit. Not surprisingly I didn’t get much of the important stuff done.&lt;br /&gt;&lt;br /&gt;IÂ´d also like to add that these are just 7 broad habits you can establish to become highly ineffective in most parts of your life. I pretty sure there are several more.&lt;br /&gt;&lt;br /&gt;1. Not showing up.&lt;br /&gt;&lt;br /&gt;   Maybe you’ve heard this quote by Woody Allen:&lt;br /&gt;&lt;br /&gt;   “Eighty percent of success is showing up”&lt;br /&gt;&lt;br /&gt;   One of the biggest and simplest thing you can do to ensure more success in your life – whether it be in your social life, your career or with your health – is simply to show up more. If you want to improve your health then one of the most important and effective things you can do is just to show up at the gym every time you should be there.&lt;br /&gt;&lt;br /&gt;   The weather might be bad, you might not feel like going and you find yourself having all these other things you just must do. If you still go, if you show up at the gym when motivation is low you will improve a whole lot faster than if you just stayed at home relaxing on the sofa.&lt;br /&gt;&lt;br /&gt;   I think this applies to most areas of life. If you write or paint more, each day perhaps, you will improve quickly. If you get out more you can meet more new friends. If you go on more dates you chances of meeting someone special increases. Just showing up more can really make a big difference. Not showing up will not get you anywhere.&lt;br /&gt;&lt;br /&gt;2. Procrastinating half the day. To keep it short, my 3 favourite ways to get out of a procrastinating state are:&lt;br /&gt;&lt;br /&gt;   - Swallow that frog. WhatÂ´s this means is simply to do the hardest and most important task of the day first thing in the morning. A good start in the morning lifts your spirits and creates a positive momentum for the rest of the day. That often creates a pretty productive day.&lt;br /&gt;&lt;br /&gt;   - How do you eat an elephant? DonÂ´t try to take it all in one big bite. It becomes overwhelming which leads to procrastination. Split a task into small actionable steps. Then just focus on the first step and nothing else. Just do that one until it’s done. Then move on to the next step.&lt;br /&gt;&lt;br /&gt;   - The Get around to It Paraliminal. I find this guided mediation to be very useful. After 20 minutes of mostly just lying on my bed and listening I’m far more productive for a few days. I donÂ´t feel the urge to sink into that procrastinating state or the need to find out what’s new over at one or five of my favourite websites.&lt;br /&gt;&lt;br /&gt;3. When actually doing something, doing something that isn’t the most important thing right now.&lt;br /&gt;&lt;br /&gt;   One of the easiest habits to get stuck in, besides procrastinating, is to keep yourself busy with unimportant tasks.&lt;br /&gt;&lt;br /&gt;   To be effective you probably need some kind of time management-system. It might be something really simple, like using the 80/20-rule at the beginning of each day. The 80/20 rule, or the Pareto Principle as itÂ´s also known, says that youÂ´ll get 80 percent of your results from only 20 percent of your tasks and activities. So you need to focus most of your energy on those few important tasks to be effective.&lt;br /&gt;&lt;br /&gt;   When you have prioritized using this rule just write down the top 3 most important things you need to do that day. Then, from the top, start doing them. Even if you just get one of the things done, you have still done the most important thing you could do today. You may perhaps prefer some other system, such as GTD. But however you organise your work it’s still of highest priority to find the most important tasks so you don’t spend days, weeks or months doing busywork that isn’t that essential anyway. Just getting things done faster isn’t that useful if the things you get done are unimportant to you.&lt;br /&gt;&lt;br /&gt;4. Thinking too much.&lt;br /&gt;&lt;br /&gt;   And thereby seldom taking action. Paralysis by analysis can waste years of your life. There is nothing wrong with thinking before you do something. Do some research, make a plan, explore potential upsides and problems.&lt;br /&gt;&lt;br /&gt;   But compulsively thinking and thinking and thinking is just another way to waste your time. You don’t have to examine everything from every angle before you try it. And you can’t wait for the perfect time to do something. That time never comes. And if you keep thinking you’ll just dig yourself down deeper and deeper and taking action will become more and more difficult. Instead you just need to stop thinking. Shut of your mind – it just helps you up to a point – and go do whatever you need to do.&lt;br /&gt;&lt;br /&gt;5. Seeing the negative and downsides in just about anything.&lt;br /&gt;&lt;br /&gt;   When you see everything from a negative perspective you quickly punch a hole in your own motivation. You find faults everywhere and problems where there are really none. You cling to details. If you want to find a reason to not do something then that’s no problem. From a negative viewpoint you can find ten reasons every time.&lt;br /&gt;&lt;br /&gt;   And so very little gets done, you whine to anyone who wants to hear – and many who don’t – about how crappy your job, life and boss is. Which becomes a self-fulfilling prophecy as you create the life that is appropriate considering how think and see your world.&lt;br /&gt;&lt;br /&gt;   A solution is to realise the limits of a negative perspective. And that your perspective isn’t some kind of 100% true picture of the world. Then try other perspectives. For instance, trying to establish a habit of seeing things in a more positive and optimistic light can be quite useful. In that vein, you may want to try the Positivity Challenge. ItÂ´s not easy, but if you do the challenge and try to only think positive thoughts for 7 days it can give you an insight in how much your perspective and beliefs changes how you interpret your world. And what results you get.&lt;br /&gt;&lt;br /&gt;6. Clinging to your own thoughts and being closed to outside influences.&lt;br /&gt;&lt;br /&gt;   It can be hard to admit that what you thought or believed was not the best alternative. So you cling to your thoughts harder and harder and keep your mind closed. This makes it hard to improve and for instance to become more effective. Even really considering the possibility that you can change your life can be difficult in this position.&lt;br /&gt;&lt;br /&gt;   One solution, obviously, is to open up more. To open up and learn from the mistakes of others, from your own mistakes and from other sources like books. This is easy to say though. It can, as almost anything, be harder to do. One suggestion I have is to, like I said about the previous habit, realise the limits of what you know and the way you going about things. And then just try something new.&lt;br /&gt;&lt;br /&gt;   Another tip is to read A New Earth by Eckhart Tolle and especially look at the chapters about the Ego. If you stop identifying so much with your thoughts and your Ego, as Tolle prescribes, it becomes a whole a lot easier to let new ideas and thoughts come into your life. And to let go of old thoughts that aren’t useful to you anymore. On the other hand I’d like to add and counter-balance with these tips: don’t get stuck in reading, in just taking in new information either or you might become a self-help junkie. Use the new information, put what you have learned in to action and try it out.&lt;br /&gt;&lt;br /&gt;7. Constantly on information overload.&lt;br /&gt;&lt;br /&gt;   With information overload I don’t just mean that you read a lot. I pretty much mean an overload in all input. If you just let all information flow into your mind it will be hard to think clearly. It’s just too much stimulation. A few more potential downsides to this habit are:&lt;br /&gt;&lt;br /&gt;   - Some of the input you receive will be negative. The media and your surroundings often put a negative spin on things for various reasons. If you arenÂ´t selective in what input you want in your life then you’ll be dragged into this negativity too. This affects how you think, feel and act.&lt;br /&gt;&lt;br /&gt;   - It creates an urge to keep up with what’s happening but there are always ten more things happening so you can’t keep up. This makes life stressful.&lt;br /&gt;&lt;br /&gt;   - It becomes hard to make decisions and take action if your mind is constantly bombarded with information or trying to sort through it all. Personally I find that if I get too much information it leads to a sort of paralysis. Not much getÂ´s done. Or you get stuck in habit #3 and keep busy, busy, busy at high speed with low priority activities.&lt;br /&gt;&lt;br /&gt;   To be able to focus, think more clearly and take action itÂ´s useful to be more selective in what you let into your mind. When you work shut out as much distractions as possible. Shut off the phone, internet and shut the door. It is strange how much you can get done when you arenÂ´t interrupted every fifth minute or have the opportunity to procrastinate by checking your RSS-feeds or favourite websites.&lt;br /&gt;&lt;br /&gt;   Now IÂ´m not suggesting that you should stop reading all blogs or newspapers. But think about what you really want to read and what you read just read to fill your time. And have a look at other areas of input where the doors are wide-open.&lt;br /&gt;&lt;br /&gt;   For instance, you donÂ´t have to let in all the negative emotions from your surroundings. If everyone else are procrastinating or are anxiously keeping themselves busy by doing low-priority tasks at warp speed itÂ´s easy to be influenced by that mood. If you have a door, then it might be good idea to shut it and focus on doing more important things.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7094617946615661380/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/some-feeling.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7094617946615661380'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7094617946615661380'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/some-feeling.html' title='some feeling'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3568375591498926619</id><published>2010-03-02T16:17:00.002-06:00</published><updated>2010-03-02T16:30:40.187-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>cached words about internet</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;腾讯遭和谐专题：问道两会-互联网 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;马化腾纠集一小撮＂问道互联网＂(已河蟹,补录于此) &lt;/div&gt;&lt;div&gt;2010年02月28日13:48 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;国际在线•腾讯评论：2009年是互联网的多事之秋。从工信部推行绿坝系统到个人网站被关停；从魔兽世界风波到BT网站被叫停；以及贯穿全年的反低俗整治互联网活动等…这些政策的变化，对您造成了怎样的影响？ &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;陈志武（耶鲁大学金融学教授）： 广电总局近日发放首批3G手机视听牌照，包括央视、上海文广、人民日报、新华社、中国国际广播电台、央广视讯、视讯中国、华夏视联这八家与广电关联的企业入选。而多家民营视频网站公司却没有。这是政府部门既做裁判又做球员赢利后会带来的典型后果，再次说明有国企加入的行业、特别是跟行政主管部门有利益关系的国企介入的行业，不太可能有民企和国企公平竞争，不太可能有民企和国企在规则和机会面前的人人平等。许多经济学家同仁，到今天还认为，企业是国有还是民有不重要，说关键是经济是否为市场经济。—— 我要问，在一个由国企享受机会牌照特权、融资特权、法律规则特权的社会里，其经济怎么可能是市场经济？希望有更多人能多多思考国家拥有并经营企业的方方面面后果，包括对法治文化的侵蚀、对权力与权利平衡点的影响。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;行政垄断抑制竞争和创新，使建设创新型国家的愿望变得渺茫。原来很多人以为之所以中国不能成为创新型国家，是因为没有钱、没有研究经费，可是，现在钱有了，研究经费也投入得越来越多，但还是离创新型国家遥远，为什么？行政垄断是症结之一，经费和机会都给了那些受到特权保护的机构和国企，创新动力当然稀缺。 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;对中国来说，互联网行业过去因为没有国企的介入而成功的经验，应该值得向所有其它传媒行业推广，特别是应该在各种新型媒体推广。从一开始，中国的互联网是由搜狐、新浪、网易、百度、腾讯等民营公司做起来的，充满了相对公平的竞争，没有哪家拥有国家背景的特权，所以，中国的互联网行业到今天才这么有活力，不仅给年轻人提供大量就业机会，给社会和经济做出巨大贡献，而且也让中国互联网行业开始引领世界新潮流。这种成功模式不是活生生的、自主产生的吗？为什么不被推广到像手机视听这样的新型传媒呢？&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;周瑞金：信息技术催生的互联网，是中国融进全球化，实现跨越式发展，走新兴工业化道路的主要手段。而网络媒体近年来成为推进舆论民主和政治民主的重要平台。互联网的本质与最大特点，在于信息的开放和自由流动。我很高兴地看到，2009年网络舆论进一步发展，中国网民总数增加到3.84亿，政府对网络民意高度重视，推动了“跨省抓捕”王帅案、邓玉娇案等事件向民众期望的方向演变。但是，2009年也存在某些方面对于互联网的过度监管问题，网络企业动辄得咎，反映了监管部门的管理盲目性和极度的不自信。目前，我国网络行政的监管主体，几乎遍及政府各大部门，没有一部统一的法律，各行政部门根据本部门主管的行政业务对互联网出具不同的法规，无形中增加了管理的混乱和互联网企业的“制度成本”，同时也容易造成行政部门相互推诿责任和争揽权力。魔兽世界之争与BT等网站被叫停，就在这种背景下产生的。 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;b&gt;要么不作为，要么乱作为&lt;/b&gt;。于是“偷菜”必须变成“摘菜”；手机搜索引擎把“美女”列入敏感词管理；QQ群因含动漫词汇而面临关停。年底又发生谷歌事件。看来，政府依法管理、科学管理、民主管理，把互联网管好是多么的重要！信息封锁会使公民人格不健全，健全人格的公民需要接触到较全面的信息，甚至色情信息，最多对未成年人设限，政府要相信老百姓的判断能力。如果把互联网管成人人只能看政府过滤过的信息，那中国的改革开放和科学发展真的没有希望了。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;秋风（知名独立学者）：我没有玩这些时髦玩意儿，所以没有直接感受这种非理性监管的影响，但间接地感受到了，而且很强烈，很多朋友都在抱怨。由此可以看出，中国互联网繁荣的基础是多么地脆弱。&lt;b&gt;只要政府愿意，整个网络都可以被完全取缔。那么，谁给了这些监管部门以如此巨大的权力？政府确实可以监管，但这种监管必须有充分的法律授予，而且必须按照法定程序使用。而2009年的监管恐怕都经不住这两个标准的测试。&lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;张鸣（中国人民大学政治学教授）：&lt;b&gt;今年政府对互联网的监管，达到了一个令人窒息的程度。尽管我们说，扫黄走到哪里都是应该的，但不能以扫黄的名义窒息互联网，公然侵犯民众的私域。政府不是民众的保姆，也不是民众的爹妈，没有权力干预民众的选择，更没有权力替民众做选择。&lt;/b&gt;现在，政府对互联网的管制，无法可依，地下操作。这样的管控，既难以服人，而且大规模地得罪人，得罪成千上万的年轻人。据我所知，在历史上，凡是跟技术进步对抗的政府政策，没有成功的可能。唯有在历史上留下笑柄。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;刘瑜（剑桥大学政治学讲师）：我因为身在国外，对国内网站的依赖有限，所以国内政策的变化对我个人影响暂时不是很大。不过每次我读到“某部发出通知，以后提供什么什么的网站，都需取得什么什么许可证，经过什么什么审批”这种新闻时，就会觉得很荒唐，任何一个政治现代化的国家，都不应该说是某政府部门随便发一个“通知”就可以强迫民众做什么。不是网站不可以规范，而是规范必须有相应的立法程序和民意收集和听证环节，随便一个部门发一个“通知”就可以扩大自己的权力范围，就好像随便一个人在公路上都可以开一个收费站一样，非常荒诞。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;闾丘露薇（著名媒体人）：不单单是2009年，相信每个网站这些年来都是战战兢兢的过来的，只不过09年，对十万中小网站的站长们来说，被说再见的日子终于来了。 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;如果只是因为意识形态的问题，倒也简单，但是中国的问题就是不简单，因为还涉及到了利益。为了经济利益，但是拿着法律的大旗，是没有一个个体，以及企业能够承受的起的。 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;不过，09年最让人欣慰的是，越来越多的人，没有因为自己的弱小，没有因为恐惧而选择沉默，虽然这些声音不大，而且很多时候不被理解，让身边的人觉得厌烦，但是这些人没有放弃，一直在不厌其烦的表达着。他们不单单为自己遭受的不公出声，他们也为不相识的人遭受的不公出声。正是因为有这样的声音，让人觉得，2010年不会坏到哪里。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;五岳散人（知名评论家）：正如王小峰与韩寒所说，不用翻墙，这片神奇的土地已经给了我足够的震撼，对于我个人而言，除了找到美剧有些困难之外，也没有什么不便处。 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;但在这里我想强调一下，&lt;b&gt;所有阻止信息自由流动的政策都是无耻的，哪怕是打着孩子、扫黄之类的幌子。有本事你弄分级制嘛，我们这些具备了选举权与被选举权、纳税与被纳税、能够扛枪保护国家的人，不需要像个孩子似的被保护着，我们有权选择自己能够看什么，以及保证这个权利不被夺走。 &lt;/b&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;所以，翻墙将来会成为我们生活的常态。抱歉，违法我也要翻过去，这个你无法阻止，除非你砍了太平洋海底光缆。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;贺卫方（北京大学法学教授）：：2009年2月8日，豆瓣网上的“贺卫方小组”被关闭，那里的网友真的都是很严肃地讨论问题，也没有什么过激的言辞。至于我的博唠阁，还好，没封，只是若干文章被删除或被隐藏，跟帖的删除那就如同风卷残云一般。另，过去一年自己在新疆石河子大学支教，那场事件之后的封网对我影响至大。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;党国英（中国社科院研究员）：我赞成互联网更开放一些。但对淫秽的东西应该加以限制。政策变化对我的影响很小。 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;互联网已经是世界范围的公共产品，大国之间应该坐下来协商，降低互联网的运行成本，同时不要让互联网政治化。要有一个国际公约，认定一些基本规范。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;张千帆（北京大学宪法学教授）：确实能感觉到今年寒流来袭，网管力度加大。网络言论是受宪法保护的表达自由，也是公民接触信息、认识世界的窗口。言论自由是所有宪法权利中最重要的权利，也是真正的社会和谐基础；在一个言论受到控制的国家，公民的其它权利必然也得不到保障。当然，色情言论可以受到一定程度的控制，知识产权也应该依法得到保护，但是不能将这些控制或保护措施扩大化，使网络监管蜕变为公民言论自由的障碍。否则，诸如腾讯这次很有意义的活动也不能让广大网友受益了。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3568375591498926619/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/cached-words-about-internet.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3568375591498926619'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3568375591498926619'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/cached-words-about-internet.html' title='cached words about internet'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2059708792065750557</id><published>2010-03-02T14:23:00.002-06:00</published><updated>2010-03-02T14:26:11.657-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Admission report of CS research directions</title><content type='html'>&lt;div&gt;写的很详细，转载~~&lt;/div&gt;&lt;div&gt;--------------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;研究报告 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;---CS方向 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;序言: &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;自20世纪40年代世界第一台现代计算机在美国诞生以来，美国一直执全球计算机学界之牛耳，这同时也是美国计算机产业界占据绝对优势的重要原因之一。这样的现实因素促使我们中国的学生在选择进一步深入学习CS专业的时候更多的考虑赴美留学.虽然国内的很多大学成批量地引进的国外众多优秀教材绝大多数也都来自美国,但是大家都非常渴望学到最新最前沿的知识.在2000年前这种客观的因素促使国内越来越多CS及相关专业方向的学生申请美国的大学,这种趋势逐年递增,可是世界IT界在2000年至今经历的很多的冲击,以至于CS这个曾经相当火爆的专业,不再那么风光,也不在拥有那令人垂涎的奖学金专业了,科学永远是科学,虽然它正在经历着一个变革期,可是它的魅力仍然让我们众多学子望眼欲穿. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;在考虑申请CS专业之前我们要知道什么是CS专业? Computer science, or computing science, is the study of the theoretical foundations of information and computation and their implementation and application in computer systems. Computer science has many sub-fields; some emphasize the computation of specific results (such as computer graphics), while others (such as computational complexity theory) relate to properties of computational problems. Still others focus on the challenges in implementing computations. For example, programming language theory studies approaches to describing computations, while computer programming applies specific programming languages to solve specific computational problems. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;一, CS专业的主要分支及专业申请情况分析: &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1. Artificial Intelligence 人工智能 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;人工智能做为当前计算机科学专业下最热门,最有发展前景研究方向,因此所招收的国际学生多具备很强的学术背景,在该方面有着非常突出表现的人才.MASTER招收的并不多,主要是PHD的学生居多.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;由于这个方向更多的强调数据表述及算法方面的知识,所以当申请目标定位在这个方面的时候可以整理一下自己在这些方面的背景,看看对于这个方面的理解是否很深度.如果不够深入的话需要及时进行相关的学习! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;2. Bioinformatics 生物信息学 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;对于这个方向的选择大家一定要谨慎,首先这个专业对于学生背景的选择很特殊,有的时候需要计算机背景的学生,有的时候需要生物学背景的学生,所以除非大家在这两个方面都具备非常强的实力,可以放手一拼,否则不如考虑申请纯CS的其他专业,申请这个方向需主要具备数学、信息学、统计、计算机科学、化学和生化方面的知识!或者综合知识,一般来说本科生很难达到这种要求! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;根多信息可以看http://en.wikipedia.org/wiki/Bioinformatics &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;设置在计算机科学下的生物信息学历年中国学生的招生录取情况都不好,网上也有很多相关的评论,因为美国本土学生的青睐,因此这个方向招收的国际学生非常少,而且一般被录取的国际学生出了有出色的硬件条件同时也具备很强的研究经历.而且一般研究生毕业被录取的几率相对更大一些.这个方向做为一个交叉学科,申请者多数具备计算机和生物学的双层背景.因此也提升了申请的难度! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;3. Computer Architectures/Hardware Systems and De sign/VLSI &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;这个方向主要从事计算机硬件芯片,例如CPU的结构设计,内部结构逻辑门的电子开关,了解VLSI的同学应该知道这个方面的研究深度和难度,申请者必须具备很强的逻辑电路基础知识.更多的信息可以参考http://en.wikipedia.org/wiki/Computer_architecture &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;这三个方向的申请因为其就业环境的影响,申请热度下降的非常快,因为更偏向于理论性的研究因此申请的难度也很大,并且奖学金情况也不乐观! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;4. Human-Computer Interaction/Graphics/Visualization &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;如果你打算申请这个方向,那么你需要掌握计算机制图,计算机成像的一些基本工具及其原理,但这通常往往不足以满足录取的要求,因为这种应用性极强的方向更多的强调经验,你是否从事过相关的工作,所以本科的客户要谨慎选择! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;http://en.wikipedia.org/wiki/Human-computer_interaction &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;http://en.wikipedia.org/wiki/Visualization_%28graphic%29 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;人机交互技术的申请热度随着这个在业界的关注度提升而渐渐升温,但该方向对于申请者的背景要求同样很高,多数录取者也是具备研究生学位.因此对于本科毕业的学生来讲申请这个方向的难度也是相当大的! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;5. Computing &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;computing is the systematic study of algorithmic processes that describe and transform information: their theory, analysis, design, efficiency, implementation, and application. The fundamental question underlying all the computing is 'What can be (efficiently) automated? &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;http://en.wikipedia.org/wiki/Computing#Science_and_theory &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;该方的申请一直是不温不火的局面,由于这个方向偏基础所以大多数申请者考虑到今后就业的问题而放弃了他,也因为这个方向的资金相对较少,所以不被大多数人所关注,只是本科从事该方向学习的学生是申请这个方向的主流.历年AD出一些,OFFER相对较少! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;6. Multimedia; Networking &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;这两个方面大家都很熟悉了,我就不做太多的说明了,其实选择这两个方面需要注意的并不是专业基础,而是选择学校的层次,尽量避免竞争吧! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;多媒体技术与网络技术这两研究方向越来越多的出现在EE,ECE专业下,不过计算机背景的学生在申请这两个方向的时候仍然具有相当不错的竞争力!多媒体技术与EE专业下信号处理方向有着非常紧密的联系越来越多的美国学校将相关的研究放在信号处理方向下边.网络技术这个方面也有很多的设置在EE下边,以致于很多CS的同学为了这个专业转向EE或者ECE下边的通信与网络专业.国际上竞争比较激烈的方向之一! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;7. Information science/Information retrieval /Information Security &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;美国国内的热门方向之一,貌似老美对于与信息技术挂钩的学科都是更多的开放给国内学生,国内学生也是非常热衷这些方向,除这个专业外像,信息系统,信息安全技术,信息恢复,数据库方面国际学生申请的情况非常惨烈,有限的名额使得国际学生很无奈! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;更多信息可以看http://en.wikipedia.org/wiki/Information_science &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;其实如果你在这些方面有所专长,还是可以尝试的,不过如果今后想在美国学校接触过于深入的课题或者方向的话恐怕机会很少! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;8.Software Engineering/Programming Language &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;本科学生,全世界的国际学生申请最热衷的方向.录取的名额较多,但奖学金很少,受IT泡沫破碎影响最为严重的方向,不过大家要对这个方向有信心,因为拒可靠消息称,这个方向虽然研一入学时的funding不多,可是第二年之后的钱还是蛮不错的,关键要跟一个有水平的BOSS,基本上踏踏实实的干活,别的都不用愁了. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;9.Linguistics &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;语言语音识别要求申请者的背景要求很强,曾经有个中科大研究生毕业的朋友申请这个方向只是拿到了AD.所以劝大家在申请之前先搞清楚对方到底要什么背景的学生,如果是要纯语言背景的话,计算机背景就不吃香了! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;10.Computer Engineering &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;与软件工程相似的方向,我就不多说了!大家看看上边的内容,好好体会一下吧 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;11. Management information system &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;这个方向设置的MASTER课程不是很多相对PHD少了一些.申请的时候要注意,因为涉及到管理,所以很多管院也开设了这个方向,更多的偏向于管理,CS下的这个方向仍然是主终于技术,如果CS下MIS出身的想改行去管院读MIS的话也有不错的优势,曾经有人拿到过MBA下边的这个MIS的MASTER半奖录取.我个人觉得挺牛的! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;以上只是简单的介绍了国内学生申请相对集中的方向!主要信息来源于国外知名教育网站wikipedia.org,里面还有太多太多的信息很难体统给大家共同分享,如果对于某个学科感兴趣的朋友可以登陆这个网站进行学习和了解. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;二. 你所选择的申请方向跟你的背景有着怎样的联系? &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;当你了解美国CS专业的申请专业之后,你会在申请开始的时候决定选择你感兴趣的专业方向为申请目标,这时我想提醒大家的是,方向的选择不仅仅取决于兴趣,同时也取决于你当前说从事的学习和研究,以及你本科阶段的专业基础,那么有的同学会问,我本科的专业没有方向,那我肯定会选择这个大范围内自己喜欢的方向了,也会有同学说:我研究生阶段的方向并不是我感兴趣的我不想申请这个方向,浪费时间.其实这些想法都是正确的，我很支持有一定想法的同学,其原因很多我就不一一说明了,我只是想提醒大家一下,如果你在兴趣方向上并不具备任何的基础或者背景,或者即使拥有也并不是非常丰富的背景.那么申请的结果很大可能就是没有结果!这个是很现实的情况,导致这种情况的主要原因就是你的背景与你申请方向的脱离. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;有的同学问,那么我在CS范畴内进行分支方向的调整,而不是跨专业那也不可以么?我的回答是,没有不可以的事情,我们的研究是在于可行性的大小,分支方向的调整可行性相对高一些,不至于隔行如隔山,但大家要知道,既然研究方向彼此分开那么必然有着它们独立的特点,如果一定要转换的话那么就要下更大的工夫更多的精力去深入的学习和研究这个方向.可是我们要知道即使这样的话是否可以对于我们背景有本质的改变仍然是个未知数,所以还是奉劝大家慎重处理! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;三. MS&amp;amp;PHD的区别是什么? &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;大家明确了自己的申请方向,和申请目标之后,我们再来探讨一下学位的选择,这个方面对于我们申请的成功与否也有着非常强的必然联系性! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1, 美国大学培养方向上的区别: &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;大家都知道美国大学的MS培养方向是培养应用性人材,我们可以从MS的课程设置上很容易看到这一点,更多的实践性工作,更多的应用型项目,课题的研究,促使在MS上的培养更加面向实际的研发工作.CS下很多的热门方向都有着这样的目的和特点.那么PHD就更多的面向研究,当然也包括应用层面的研究,但这种研究更深入更偏向于基础原理,PHD的根本培养方向也就是培养研究型的人才为目的的原因.这一点美国大学做的也非常好,基本上PHD毕业的学生,大都可以走向科研岗位,无论是任教还是在科研机构,都是基础研发的核心人员. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;2,申请的难易程度上的区别: &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;MS的申请对于本科生来讲相对比较容易,因为凭借美国大学对于这个学位的培养方向我们可以看出,应用层的培养并不要求申请者具备很深入的理论研究基础,更多的是看重申请者的应用能力,所以我们可以看到即使是专业排名比较靠前,综合排名比较靠前的学校,也会发出很多的MS学位的录取,同样因为它对于今后的就业方面在美国的状况非常好,所以也被非常多的学生所关注.很多学生将美国的MS学位培养比喻成中国的技校,去了你就能学会如何做一些东西,出来了你就会有很多机会在社会,企业找到一个就业的位置.因此竞争也是非常激烈的,淘汰率也相应的提高. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;PHD的申请尤其是CS的某些研究型方向的申请就不是很乐观,当然这只是一种角度的说法,我了解过很多本科毕业的申请者在申请后期得到学校的反馈,建议他们改为MS其主要原因是要求PHD要求的是相关研究的经验,雄厚的基础.所以对于在职的人员,研究生毕业的申请更加感兴趣.本科毕业的申请者相对要求就会偏高.难度比较大! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;3,奖学金发放情况的区别: &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;对于很多专业来说PHD的奖学金都是要比MS的多,PHD学习时间长,可以接手相对较大的课题,因此奖学金确实比MS要好申请一些,但通过上边的分析大家也能感觉到PHD的这个奖也并不是这么好拿的,这要求申请者具备相当强的竞争实力,从目前的申请情况来看申请CS的人群最大的变化是申请者数量的减少,但精英确增加了许多,在专业领域有着一定积累的人越来越多,因此,PHD奖学金的申请的难度不在于竞争人数,而是在于整体水平! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;那么MS的奖学金不是没有,只是不多,因为很多背景实力很强的申请者,对于未来发展的规划并没有考虑向研究型发展,因此选择了MS,接收他们的教授有着比较重量级的课题,这样也会慷慨的拿出资助来,但数量相对少的很多.值得我们关注的是,MS的AD的发放始终保持着旺盛的势头,除了综合前20的学校,专业前10的学校以外,其他学校对于MS的录取标准始终保持在相对较低的情况,也就会使得家庭有一定经济基础同学获得了相对更多的机会,这里也要注意这个MS虽然入学没有奖学金可是入学后的第二年拿到全奖或部分奖的几率还是非常大的! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;综述: &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;大家在申请的过程中可以考虑MS和PHD相结合的方式来提升录取几率,排名相对靠前的学校可以更多的关注MS,因为录取的要求较宽,但奖学金的几率很低,排名相对靠后一些学校可以考虑PHD这样奖学金的希望就能比较大的提升,需要注意的是这样做会对申请文件的内容做出不同程度上的要求,难度也不小! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;四.美国大学更看重你的哪些条件? &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;美国大学录取通常分两个阶段,第一个阶段对申请者硬件背景进行审核,第二个阶段专业背景进行审核,那么这些教授评审团更看重申请者的哪些条件呢? &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1,硬件条件 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;网上很多人在经常的讨论GPA,TOEFL,GRE,这些成绩的好与坏给大家带来的各种各样的问题,一部分人坚持认为这些成绩并不重要,更有很多人认为这些分数不重要,其实我们要更深入的了解这些成绩就会发现其本身的特点,例如GPA,大家都知道很多学校的GPA要求是在3.0-3.5之间也就是相当于百分制的80到85左右(根据每个学校GPA算法不同有一定的出入)这个加权平均分其实本身的意义并不大,因为美国大学并不会因为这个而对你产生什么样的看法,他们更多的是关注于专业的GPA成绩,尤其是教授评审团那边更多的会关注跟申请相关的专业课的情况,所以即使综合分不高,但专业分很高也还是不错的. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;再说托福,托福成绩大多数学校要求的成绩是550分,谁相信这是真的,有几个人成绩是550一下拿到150名学校录取的,凤毛麟角!大多数学校的录取标准是600分,这个东西其实就是水涨船高,中国学生越来越会考托福,大家成绩都很好,人家要看这个分数要有个标准所以自然也就慢慢抬起来了.排名更靠前的学校有的甚至标准在630.老托福的含金量下降的非常快,新托福的出现多少会改变这种现状,不过新托福难考大家也知道,真能考到100分以上着实的不容易.不过真的要是能够上100,对申请还是有一定帮助的.毕竟这个新托福里的听力口语要求都很高能够更好的体现出申请者英语水平,所以相信在明后年的申请过程中新托福的成绩的比较将起到一些作用.托福的写作历来比较被重视.底线是4.0.再低的话恐怕申请好一些的学校就会受到一些制约了. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;GRE方面,V对于CS的申请者来说意义不是很大,但最好也不要低于400分,这是底线.要是学校档次上要求偏高的话最好不低于500分.Q对于CS就比较重要了,毕竟理工科专业比较看重这个方面.最好800,底线是700,如果真的是700的话也比较危险啦,GRE的写作的作用不太大,3.0底线. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;总评GPA,托福,GRE的重要性,基本上是GPA专业成绩&gt;GRE&gt;老托福(新托福的影响目前很难求证! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;第一轮的评审如果这些分数很多都低于底线那么很大可能性是被PASS,没有第二轮的机会了,不过事事没有绝对的我曾经见过托福不到600,GRE刚1200,GPA3.0左右的一个学生成功的申请到综合100以内的一所大学的全奖.我分析有很大的决定因素在于他的软件背景.就是相关的研究经历.虽然是个本科生,可是之前参加国内的各种竞赛,本校的一些课题还是非常丰富的.第一轮的评审可能他也是勉强过关的. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;硬件条件里还有几个大家并不是非常关注的部分,托福口语TSE,GRE专业考试SUB,申请者毕业的学校,申请者的推荐人.这些因素在不同程度上也影响着申请者的录取情况,尤其是TSE和GRE的SUB考试,如果这两个成绩有比较出色的表现,可能会完全扭转你其他硬件条件的不足!值得大家以后关注! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;2, 软件条件! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;软件指的是申请者在专业方面所做的研究,包括本科专业基础课设置,专业课题项目的研究,论文的发表,相关的实习.就像我在上边这个部分说得这个同学,他的成功更多的源于他的背景,我们可以看看自己和身边的人,在本科阶段有几个人是具备丰富的专业研究经历的,这比起其他国家的国际学生来说差距就相当明显了,美国大学更希望要一个有经验的学生来帮助教授完成一些工作,如果我们都不具备这些的话问题也不大,可就是有这么一批同学通过自己的努力,各种渠道获得了这些经历,那么他们在第二轮评审的过程中就占据了很大的优势!如果说硬件条件决定我们的AD,那么软件条件就可以决定了我们的奖学金.也就是说美国大学绝对不会因为我们硬件条件有多么好而给我们发放奖学金.确会因为我们在某个方面积累了丰富的经验而慷慨解囊! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;结合太傻十日谈我们再来看一下,个人的包装可以理解为两个部分,首先是优异的硬件条件和申请材料的精美制作,同时更重要的就是个人专业水平的提升,就像十日谈里提到的,一个商品放在那里,顾客要花钱买,不能仅仅靠漂亮的外观,真正能让人东西的就是他强劲的功用,否则人家看看欣赏一下就会放下离开! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;五,CS专业的竞争环境是如何? &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;CS的竞争环境不再像几年前那么火爆了,随着IT行业的滑坡,CS专业的申请人数也在下降,这对于想申请CS专业的同学们来说是件好事儿,但也别高兴的太早,申请人是少了许多,但录取的名额也少了很多,美国大学也在控制招生的数量,也在想办法适应这个特殊的时期. 所以CS在这种情况下申请环境仍然不是很乐观. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;此外我们需要注意,我们现在跟将来所要面对的竞争对手有了非常大的一些变化: &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1,硬件条件 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;出身:国内名校背景的CS申请者成为美国大学的关注热点,这个方面对其他学校的申请者来说是非常不利的因素. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;GPA: 名校出身,高GPA的申请者越来越多的出现,3.4 3.5已经不是什么问题,3.7 3.8的人大有人在,我曾经接触过几个清华北大的学生他们的GPA达到了3.9,后来了解一下,他们说因为填4.0实在有点太扎眼,所以谦虚点写了3.9,狂汗啊~~~~~.当然了这样的人并不代表全部的申请人群,但这种情况是处在一个上升的趋势.如果大家还处在学习阶段的话就要考虑认真一点面对考试,把GPA推到更高的一个水平吧. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;T: 先说拿老托福申请的一些同学, 老托福考到600分已经是一件稀松平常的事情了, 能上610,620甚至630的也大有人在, 申CS方面的同学从近几年对于托福的重视度也在提升, 托福考的越来越好,去年我广泛的基础了一批托福640以上的同学,感觉他们并没有因为自己托福好而考虑只冲击牛校,而是果断的以综合100,专业前50的学校进行整体考虑.这让我实在无法想像如果这些学生跟其他人申请同一所学校的话会不会因为托福成绩而拉开我们的申请优势……. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;GRE: 这个考试要分开来说,对于V部分,我觉得美国大学对于CS专业的学生要求的不怎么高,甚至很多学校都没有明确规定V的分数,但是我们可以看到的是CS专业GRE分数薄弱的部分就在于此,拉分就看V了,很多我们的竞争对手V部分可以上600, 这种情况下我们的申请优势再度产生差距.这是一个危险的信号,再说Q,申CS的要是不考个800就有点麻烦了,V的部分已经跟人家产生差距了如果Q再比别人差个几十分,那差距就更大了. 实际情况证明我们的竞争对手很难让我们有任何的喘息. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;T/G的写作: 上边没有提到T/G写作部分的情况,因为在这个分数上并不是非常容易产生太大差距的(本身总分就不高…..)我们的竞争对手通常也是在5.0左右徘徊,相对并不会构成太大威胁! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;除此之外我们的竞争对手也会考一些TSE, SUB,之类的特殊语言考试提高竞争实力, 有个不错的TSE成绩帮助他们提升了竞争TA的实力,CS的SUB成绩也帮他们提升了拿奖的机会,给他们的申请加了很多的分. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;硬件条件方面基本上就是这种状况, 实际上如果我们跟我们的竞争对手产生了差距也是很难弥补的, 但这绝对不是意味着他们是令人恐怖的一群. 因为他们的优势还不仅仅如此…… &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;2,软件背景 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;专业研究: 牛校的优势并不仅仅在于他们的名声,更多的在于他们的研究领域,与国际前沿的接轨,研究课题项目的水平接近.这种优势是很明显的, 什么863,974,等等国家自然科学基金资助的大课题大项目,他们通过系里的教授获得参与的机会实在是太多了.多的让我们无法想象.我们呢?省一级的科研项目有多少?市级的项目有几个?学校的项目又有多少?这些课题的项目的含金量又有多少,我们又能参与多少……. &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;论文发表: 我们的竞争对手从大三开始写专业论文,可能有些同学说这没什么了不起的,我大二就开始写了,但大家有没有想过,你的论文专业水平,研究深度怎么样呢?文章发表在什么等级水平的刊物上? &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;工作经历: 我们的竞争对手越来越多的不是来自各大院校,而是一些国内知名的企业,并以一个资深的技术人员的身份出现…….如果你是一个刚刚走出大学校门,或者还在继续读书的同学,你能想象的到怎么和这些已经在相关行业工作了若干年,具有一定程度的项目研发经历和能力对手竞争呢? &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;综上所述,我们的竞争对手少了是件好事,但他们的实力和水平处在了一个上升的趋势,这是比人多更可怕的事情!在这种情况下,如何改变,如何以正确的态度面对这些,是非常值得我们考虑的! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;尾声: &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;在新闻晨报曾经有过这样一篇文章&lt;就业前景不再吃香 美国计算机专业降温&gt;,其内容是这样的.”据中国日报报道很长一段时间里，计算机科学与技术专业在全球很多高校里都是超级热门专业，深受学生和家长们的青睐。然而，在当今的美国，由于计算机专业学生毕业后就业前景日益黯淡，选择计算机作为自己主修专业的学生正在逐渐减少。得克萨斯大学奥斯汀分校的统计数字显示，今年登记入学主修计算机的学生人数为1275名，而去年的人数是1465名。俄亥俄州立大学也出现了同样的情况，申请学习计算机专业的人数比去年减少了30%。在位于硅谷的一所大学里，今年上计算机专业的学生只有417名，比去年少了100多人。 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;美国计算机研究协会透露说，根据他们掌握的情况，去年，美国和加拿大不少高校的计算机专业就已经开始遭到少见的“冷遇”，申请入学的学生均有减少，估计今年的情况也不会太好。”从这篇文章也可以了解到计算机方向受到就业前景的冲击而产生申请降温,这种情况已然持续了数年,但我始终对这门科学非常有信心,我相信随着研究的逐步深入,在未来的几年后IT行业又将带动CS专业的一个更高的热潮!最后祝大家在申请的道路上一路顺风! &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;为了方便大家了解更多的分支方向,给大家再提供一个更为详细的CS分支列表: &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1.Hardware 硬件 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Control structures and Microprogramming（控制结构和微程序设计）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Arithmetic and Logic structures（算法和逻辑结构）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Memory structures（存储结构）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Input/output and Data communications（输入/输出和数据通讯）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Logic Design（逻辑设计）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Integrated circuits（集成电路）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø VLSI design（超大规模集成电路设计）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Performance and reliability（性能和稳定性） &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;2. Software 软件 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Computer program and Computer programming（计算机程序和计算机程序设计）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Concurrent Programming（并发程序设计）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Parallel Programming（并行程序设计） &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Program specification（程序规约）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Program verification（程序验证）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Programming techniques（程序设计技术）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Software engineering（软件工程）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Configuration management and Software Configuration Management (SCM) （配置管理和软件配置管理）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Design patterns （模式设计）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Formal methods （形式方法）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Object orientation（面向对象程序设计）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Aspect orientation （面向方面程序设计）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Documentation Optimization（文件优化）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Software metrics（软件度量学）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Structured programming（结构化程序设计）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Programming languages（程序设计语言）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Imperative programming Languages（命令程序设计语言）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Functional programming Languages（ 函数程序设计语言）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Logic programming Languages（ 逻辑程序设计语言）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Operating Systems（操作系统）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Compiler（编译器）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Lexical analysis （语法分析)、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Compiler optimization（编译器优化） &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;3. Theoretical computer science 理论计算机科学 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Algorithmic information theory（算法信息理论）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Computability theory（可计算性理论）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Cryptography （密码学）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Formal semantics of programming languages （程序语言的形式语义学）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Theory of computation (or theoretical computer science) 计算理论（理论计算机科学）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Analysis of algorithms and problem complexity （算法和问题复杂性分析）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Logics and meanings of programs（程序逻辑和内涵）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Mathematical logic and Formal languages（数理逻辑和形式语言）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Type theory（类理论）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Quantum computing （昆腾计算）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Quantum information theory（昆腾信息理论） &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;4. Data and information systems数据和信息系统 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Data structures （数据结构）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Data storage representations（数据储存和表示）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Data encryption（数据加密）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Data compression（数据压缩）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Data recovery（数据恢复）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Coding and Information theory （编码和信息理论）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Files（文件）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø File formats（文件格式）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Information systems（信息系统）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Databases （数据库）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Information Storage and retrieval（信息存储和检索）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Information Interfaces and Presentation（信息接口和表述） &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;5. Mathematical foundations 数学基础领域 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Boolean algebra（布尔代数）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Discrete mathematics（离散数学）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Graph theory （图形理论）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Mathematical logic （数理逻辑）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Probability and Statistics（概率论和统计学）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Information theory（ 信息理论）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Domain theory （域论）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Category theory （范畴论）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Set theory （集合论） &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;6.Computer systems organization 计算机系统组织 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Computer architecture（计算机体系结构） &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Computer networks （计算机网络）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Distributed computing（分布式计算）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Performance of systems （系统性能）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Computer system implementation（计算机系统实现）。 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;7.Computing methodologies计算方法论 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Symbolic and Algebraic manipulation （符号和代数处理）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Artificial intelligence（人工智能）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Computer graphics（计算机图像学）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Image processing and computer vision（图像处理和计算机视觉）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Pattern recognition（模式识别）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Speech recognition （语音识别）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Simulation and Modeling（仿真和建模）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Document and text processing（文件和文本处理）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Digital signal processing（数字信号处理）等。 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;8.Computer applications计算机的应用领域 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Enterprise resource planning（企业资源计划）（ERP）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Customer relationship management（客户关系管理）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Human Resource Management Systems（人力资源管理系统）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Numerical analysis（数值分析）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Automated theorem proving（自动定理验证）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Computer algebra systems（计算机代数系统）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Computational chemistry（计算化学）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Computational physics（计算物理学）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Bioinformatics（生物信息学）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Computational biology（计算生物学）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Medical informatics （医药信息学）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Computer-aided engineering（半自动计算机工程）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Robotics（机器人技术）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Human-computer interaction（人机交互）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Speech synthesis（言语合成） &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Telecommunications（电讯学）、 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Ø Queuing theory（排队理论）等。 &lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;转自：http://blog.eduwo.com/space.php?uid=8015237&amp;amp;do=blog&amp;amp;id=7785&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2059708792065750557/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/admission-report-of-cs-research.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2059708792065750557'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2059708792065750557'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/03/admission-report-of-cs-research.html' title='Admission report of CS research directions'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3871762626615466675</id><published>2010-02-28T16:36:00.005-06:00</published><updated>2010-02-28T19:25:13.799-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>Mid-term</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;已经考过了两门期中考试，其余一门，在老师问过我的意见之后，以“小范围征求意见”的为名推到了春假后的第一个星期一。对于已考的两门，DSP的感觉就是，基本学过，所以尽管很多东西已经在脑海中找不到了印象，但是上课及时跟进笔记，并且稍作复习，就可以完全理解老师讲授的所有内容。对于习题，自己完成也好，参照答案也好，心里都比较有把握。对于DA而言，总感觉老师过于随意了，课程进度和教材的章节完全对应不上。不过好在这门课本身就是应用为主，没有过多的数学推理，或者说尽管有很多又长又复杂的矩阵计算关系式，但从常理而言，都不难理解其中的思虑。最后还没有考的一门CN，则是我这个学期感觉最难的一门课了。老师讲课很棒，奈何课程本身难度不小，而且随机过程尽管学了一个学期，但里面一些细节性的东西始终是似懂非懂，于是偶尔总会有文科的感觉，学到哪里背到哪里，不会像同班的几个清华同学一样，融汇贯通。还有两周春假，之后春假一周——三周的时间，希望自己能够把所有不足的地方补上，考一个不错的成绩。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;每次一到考试前，都会文如泉涌，很有写些乱七八糟东西的冲动。这四分之一个学期，是我迄今为止，学习感觉最好的一段时光。每日看书，作业，温习，提问，解答……正常作息，有了规律的晚自习。当然了，还抽时间看了两遍AVARTA，以及若干电影电视剧和一本闲书:) 有心情体会生活，是件惬意的事情。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;给自己的目标——尽快确定老师。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;上帝保佑……&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3871762626615466675/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/mid-term.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3871762626615466675'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3871762626615466675'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/mid-term.html' title='Mid-term'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1847840121227670324</id><published>2010-02-24T15:24:00.001-06:00</published><updated>2010-02-24T15:27:51.419-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>To myself</title><content type='html'>提高自己，不要计划从明天开始，而是从现在，一点一滴中开始。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1847840121227670324/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/to-myself.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1847840121227670324'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1847840121227670324'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/to-myself.html' title='To myself'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-9196600023527975432</id><published>2010-02-18T18:39:00.003-06:00</published><updated>2010-02-18T19:13:28.510-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>recent thinking</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;文章，博客，twitter。实际上我一直在想，到底自己为什么会对一些文字如数家珍，而另一些言语就会深恶痛绝。前者，嬉笑怒骂中隐藏着悲天悯人的思考，对于自己，对于社会，或者对于这个时代。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;后者，更多时候是在玩弄概念，诡辩，或者干脆就是文化大革命时候的连坐思维，比如说，某人曾经小偷小摸，或者是父辈曾经在伪政府中谋职，所以这个人不怎么样，言下之意他/她的话完全没有采信的余地。如果细究起来，逻辑中勉强之处很多，而论据更是削足适履。之前我也做过很多这种方向的思考，寻找其漏洞具体在哪里。后来发现完全没有必要。就像是下面五岳散人的回答，或者是更直接的，给这样的言论贴上一个“傻逼”的标签即可。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;---------------------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;身为人质却为绑匪作想，这就是典型的斯德哥尔摩综合症的表现；身为底层人，却有替主子着想的思维，这就是典型的奴才。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;---------------------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;印度民族的圣雄甘地说：“我首先是一个人，其次才是印度人”。鲁迅说得更好：“把沦为异族奴隶之苦告诉国人，是很必要的，但是切莫使人得出结论：那么，我们倒不如做自己人的奴隶罢”。对于那种“不爱国人却爱国，只爱民族不爱民”的伪民族主义，这两句话应是最好的回答。——秦晖&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;---------------------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;@染香: 我为什么要创立五毛党？因为我要将一个带有人格贬低无端攻击无辜者的词汇，变成微博最娱乐最搞笑的一个词汇。因为我见不惯像韩寒这类民主精英，靠这种卑劣人格攻击手段，来攻击无辜异见者。凡是想申请加入五毛党的进步青年，需交纳报名费五毛。不收旧币和美元，只接收附图新币。－－ 五毛党主席@染香&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;@五岳散人: 这傻逼有毛病吧？性生活不和谐？&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;---------------------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;罗永浩 : 谈一个跟是非无关，只跟尊严有关的问题：在一个没有言论自由的国家里，如果有时候我的想法凑巧跟当政者一样，我都不好意思说出来，因为和我想法不一样的人，为了反驳我，要承担很大的风险，我就不知道你们是怎么做到这么不要脸的。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;张腾："说出自己凑巧和当政者一样的想法，怎么就成了不要脸了。。。你太怂觉得政治风险大就憋在心里别反驳，怎么还不让人说话了？"&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;罗永浩 : 嗯，是这样的，没不让您说，只是说您不要脸。&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/9196600023527975432/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/recent-thinking.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/9196600023527975432'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/9196600023527975432'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/recent-thinking.html' title='recent thinking'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3896923268192711607</id><published>2010-02-11T17:25:00.002-06:00</published><updated>2010-02-11T17:58:01.323-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Google buzz</title><content type='html'>google的在实时通讯方面又进了一步，有关技术，现在网络中铺天盖地都是相关的介绍，就不用我这个初学者赘述了。而有关buzz，可以接收twitter的信息，但是无法看到twitter里follow的人的消息，也暂时无法反向传递信息。这只是一个小技术环节而已，相信过不了多久就可以实现了。让信息流动的更加顺畅，是google的目标和利益所在，也是通信技术发展的方向。&lt;br /&gt;&lt;br /&gt;在豆瓣里已经有了buzz小组，讨论的话题，除了相互follow志同道合者，开组的帖子就有了“这个会不会被和谐”以及“怎样才能让buzz不被和谐”。而昨天和viviks聊天的时候，她说到buzz也毫无例外的谈到了和谐。想到这里让人感觉可悲，就好象1984里面写到的，一个死气沉沉人不敢言的社会。但在多想一步，似乎又没什么好怕的，甚至有些可乐。一个敏感词库，一面阻隔交流的墙，都没什么可怕。每增加一个敏感词，每多屏蔽一个广受欢迎的网站，就离它们的灭亡又近了一步。如果有一天，人民日益增长的智慧，和这面墙以及筑墙的理念，成为社会主要矛盾或者是基本矛盾的时候，词库和墙就都会在一夜间灰飞烟灭。&lt;br /&gt;&lt;br /&gt;有不少人预言这个时间表。我不清楚。只好拭目以待。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3896923268192711607/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/google-buzz.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3896923268192711607'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3896923268192711607'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/google-buzz.html' title='Google buzz'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8258419321075463760</id><published>2010-02-09T09:16:00.000-06:00</published><updated>2010-02-09T09:17:30.569-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Ich bin ein Berliner</title><content type='html'>&lt;div id="blog_text" class="cnt"&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size:130%;"&gt;Ich bin ein Berliner&lt;/span&gt;&lt;/strong&gt;&lt;br /&gt;by &lt;em&gt;John F. Kennedy&lt;/em&gt;&lt;/p&gt; &lt;p&gt;&lt;u&gt;&lt;em&gt;This speech was given by American&lt;/em&gt; &lt;em&gt;President John F. Kennedy on 26 June 1963&lt;/em&gt; &lt;em&gt;at 'Rathaus Schöneberg' in West-Berlin, Germany.&lt;/em&gt;&lt;/u&gt;&lt;/p&gt; &lt;p&gt;I am proud to come to this city as the guest of your distinguished Mayor, who has symbolized throughout the world the fighting spirit of West Berlin. And I am proud to visit the Federal Republic with your distinguished Chancellor who for so many years has committed Germany to democracy and freedom and progress, and to come here in the company of my fellow American, General Clay, who has been in this city during its great moments of crisis and will come again if ever needed.&lt;/p&gt; &lt;p&gt;Two thousand years ago the proudest boast was "civis Romanus sum." Today, in the world of freedom, the proudest boast is "Ich bin ein Berliner."&lt;/p&gt; &lt;p&gt;I appreciate my interpreter translating my German!&lt;/p&gt; &lt;p&gt;There are many people in the world who really don't understand, or say they don't, what is the great issue between the free world and the Communist world. Let them come to Berlin. There are some who say that communism is the wave of the future. Let them come to Berlin. And there are some who say in Europe and elsewhere we can work with the Communists. Let them come to Berlin. And there are even a few who say that it is true that communism is an evil system, but it permits us to make economic progress. Lasst sie nach Berlin kommen. Let them come to Berlin.&lt;/p&gt; &lt;p&gt;Freedom has many difficulties and democracy is not perfect, but we have never had to put a wall up to keep our people in, to prevent them from leaving us. I want to say, on behalf of my countrymen, who live many miles away on the other side of the Atlantic, who are far distant from you, that they take the greatest pride that they have been able to share with you, even from a distance, the story of the last 18 years. I know of no town, no city, that has been besieged for 18 years that still lives with the vitality and the force, and the hope and the determination of the city of West Berlin. While the wall is the most obvious and vivid demonstration of the failures of the Communist system, for all the world to see, we take no satisfaction in it, for it is, as your Mayor has said, an offense not only against history but an offense against humanity, separating families, dividing husbands and wives and brothers and sisters, and dividing a people who wish to be joined together.&lt;/p&gt; &lt;p&gt;What is true of this city is true of Germany--real, lasting peace in Europe can never be assured as long as one German out of four is denied the elementary right of free men, and that is to make a free choice. In 18 years of peace and good faith, this generation of Germans has earned the right to be free, including the right to unite their families and their nation in lasting peace, with good will to all people. You live in a defended island of freedom, but your life is part of the main. So let me ask you as I close, to lift your eyes beyond the dangers of today, to the hopes of tomorrow, beyond the freedom merely of this city of Berlin, or your country of Germany, to the advance of freedom everywhere, beyond the wall to the day of peace with justice, beyond yourselves and ourselves to all mankind.&lt;/p&gt; &lt;p&gt;Freedom is indivisible, and when one man is enslaved, all are not free. When all are free, then we can look forward to that day when this city will be joined as one and this country and this great Continent of Europe in a peaceful and hopeful globe. When that day finally comes, as it will, the people of West Berlin can take sober satisfaction in the fact that they were in the front lines for almost two decades.&lt;/p&gt; &lt;p&gt;All free men, wherever they may live, are citizens of Berlin, and, therefore, as a free man, I take pride in the words "Ich bin ein Berliner."&lt;/p&gt; &lt;p&gt; &lt;/p&gt; &lt;p&gt;&lt;strong&gt;&lt;span style="font-size:130%;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt;&lt;p&gt;&lt;strong&gt;&lt;span style="font-size:130%;"&gt;我是一个柏林人&lt;/span&gt;&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;约翰·肯尼迪&lt;/em&gt;&lt;/p&gt; &lt;p&gt;二千年以前，最自豪的夸耀是Civitas Romanus sum，今天，自由世界最自豪的夸耀是Ich bin ein Berliner。 &lt;/p&gt;&lt;p&gt;&lt;br /&gt;世界上有许多人确实不懂，或者说他们不明白什么是自由世界和共产主义世界的根本分歧。让他们来柏林吧。有些人说，共产主义是未来的潮流。让他们来柏林吧。 有些人说，我们能在欧洲或其他地方与共产党人合作。让他们来柏林吧。甚至有那么几个人说，共产主义确是一种邪恶的制度，但它可以使我们取得经济发展。 “Lasst sie nach Berlin kommen.” &lt;/p&gt;&lt;p&gt;&lt;br /&gt;自由有许多困难，民主亦非完美，然而我们从未建造一堵墙把我们的人民关在里面，不准他们离开我们。我愿意我的同胞们——他们与你们远隔千里住在大西洋彼岸 ——说，他们为能在远方与你们共有过去十八年的经历感到莫大的骄傲。我不知道还有哪一个城镇或都市被围困十八年仍葆有西柏林的这种生机、力量、希望和决 心。全世界都看到，柏林墙最生动最明显地表现出一种失败。但我们对此并不感到称心如意，因为柏林墙既是对历史也是对人性的冒犯，它拆散家庭，造成妻离子散 骨肉分离，把希冀统一的一个民族分成两半。 &lt;/p&gt;&lt;p&gt;&lt;br /&gt;这个城市的事实也用于整个德国——只要四个德国人中有一个被剥夺了自由人的基本权利，即自由选择的权利，那么欧洲真正持久的和平便绝无可能实现。经过保持 和平与善意的十八年，这一代德国人终于赢得自由的权利，包括在持久和平中善所有的人民，实现家庭团聚和民族统一的权利。你们住在受到保护的一座自由之岛 上，但你们的生活是大海的一部分。因此让我在结束讲话时请求你们抬起目光，超越今日的危险看到明天的希望；超越这道墙看到正义的生平来临的一天；超越你们 自己和我们自己看到全人类。自由是不可分割的，只要一人被奴役，所有的人都不自由。当所有的人都自由了，那时我们便能期待这一天的到来：在和平与希望的光 辉中这座城市获得统一，这个国家获得统一，欧洲大陆获得统一。当这一天最终来临——它必将来临——时，西柏林人民将能对这一点感到欣慰：几乎二十年时间里 他们站在第一线。 &lt;/p&gt;&lt;p&gt;&lt;br /&gt;一切自由人，不论他们住在何方，皆是柏林市民，所以作为一个自由人，我为“Ich bin ein Berliner”这句话感到自豪。&lt;/p&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8258419321075463760/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/ich-bin-ein-berliner.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8258419321075463760'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8258419321075463760'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/ich-bin-ein-berliner.html' title='Ich bin ein Berliner'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1067441546759133670</id><published>2010-02-08T17:00:00.000-06:00</published><updated>2010-02-08T17:07:10.485-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>patriotism</title><content type='html'>印度民族的圣雄甘地说：“我首先是一个人，其次才是印度人”。鲁迅说得更好：“把沦为异族奴隶之苦告诉国人，是很必要的，但是切莫使人得出结论：那么，我们倒不如做自己人的奴隶罢”。对于那种“不爱国人却爱国，只爱民族不爱民”的伪民族主义，这两句话应是最好的回答。——秦晖</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1067441546759133670/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/patriotism.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1067441546759133670'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1067441546759133670'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/patriotism.html' title='patriotism'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-569256794714752258</id><published>2010-02-05T18:36:00.004-06:00</published><updated>2010-02-05T19:03:36.619-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>running and reading</title><content type='html'>这个学期开学以来，跑过几个四千米，上上次跑了五千米，昨天跑了六千米，耗时四十分钟有余。之前看过村上春树的跑步随笔，听过罗胖子跑步减肥的调侃。等到真的轮到自己的时候，才发觉，如果想要40分钟跑完一万米，当真是需要很长一段时间练习的。出汗、呼吸、心跳、小腿不时酸疼僵硬，不断自言自语，不断看监视屏幕以及挂表……这还仅仅是在跑步机上的状态，如果是在操场上，状况应该会更加严峻一些的。&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;上个学期开学也有一段时间能跑到30+分钟，但是绝大部分都是用跑步作为热身，二十分钟左右就到头了。停下来的理由有很多，譬如明天还有课，晚上还要写作业，或者肚子不舒服、腿脚不灵活了，等等。实际上，再往下的时间和路程，都仅仅需要意志力的坚持而已。或者说，完全依赖意志力的坚持。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;在现实生活中，总会有这样那样似曾相识的场景。跑步，起因是为了身体减重，获得更好的身体素质，跑起来发现更多像是一种考验，然后可以思考很多事情，引申出不少寓意来。昨天跑完六千米，又做了一些器械锻炼，因为要赶校车，所以练得并不尽兴。不过等回到宿舍，洗澡的时候却的确感觉到了腿脚已然不太灵便了。而晚上睡觉的时候，也总会感到腿脚肌肉僵硬，想尽力伸直，却无能为力，醒了若干次。看来六千米对于我来讲，可以算作是一个极限，当下的极限。以后每周跑上三两次，等到两三周以后再逐渐向万米靠近，似乎更加可行些。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;今天在图书馆自习，倒是并没有出现之前锻炼之后心绪不宁的状况。看来之前所谓锻炼的后果，又是一个托辞，归根结底还是源于自己对自己的管束不严。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;有关阅读，和跑步类似，绝大多数的行为都是自我修行，偶有心得，然后暗自欢喜。这段时间也看了不少有关阅读方法、技巧、解释、介绍之类的文章，而在豆瓣上面的买书·读书小组里，大家讨论起来也十分热烈。看了这些也会有不少感想，而对我触动最大的，却在某天的校车之上。校车站就看到一个女孩子，捧着一本大部头的书在看，离得比较远，也没有关注她到底在看什么。上车以后她坐在我前面，我才发觉她手中时一本电脑程序的书籍，刚刚开始看，直到已经上车了，还在目录阶段。校车一路颠簸，等到学校，她也不过才看到第一章的1.2x部分。一路上，序言、若干章节的摘要、反复目录，然后确定从第一章开始。气定神闲翻阅。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;也许她更应该遵循某种科学的阅读方法，也许她根本就不会读完这么厚的一本书。但就在我观察她阅读的时候，我笃定她会学到书里某些需要的知识，这本书也会对她有所裨益。原因，也许就是那种气定神闲。好像在说，“我会充分利用时间，也会完成它”。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;到美国之后，看到不少人随时手中都拿着一本书，稍有时间就读上两页，然后夹上书签。若再空闲下来，就再读上两页。看似不慌不忙，却利用者每一段短暂的间隔时间。不像是国内大家都匆匆忙忙，但总感觉他们更知道自己的目标在哪里。很多时候我都在忙着计划，而实际上，气定神闲的享受每段时间，坚持完成每段路途，收获也许自然而然就来了。&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/569256794714752258/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/running-and-reading.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/569256794714752258'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/569256794714752258'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/running-and-reading.html' title='running and reading'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7650934662830222366</id><published>2010-02-05T10:03:00.004-06:00</published><updated>2010-02-05T10:23:50.553-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>smoking</title><content type='html'>以前好像写过，忘记了，于是再记述相同的心情。&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;我知道香烟有害健康，十分有害。所以如果当天晚上去健身房，我会全天戒烟。上个学期也有一个多月没有吸烟，原因未解，大抵是因为体重升高，而自己又不想做个吸烟的胖子，减重漫漫长路，于是只好先从戒烟开始。到美国之后，似乎牙周炎愈演愈烈，而且貌似和吸烟相关，于是，为了避免出现禁烟广告商那种恐怖的口腔，我也开始控制自己的香烟数量了。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;可是话说回来，每天，偶尔，还是会吸烟。而且会想到很多似曾相识的话。有些人因为寂寞而养狗，但养了狗之后却发觉自己更习惯与狗狗交流，而生疏了人际往来，于是更加寂寞。我想，吸烟也大抵如此。孤单是因为身边没有人，而寂寞是因为找不到与旁人交流的方式。差别如此，很多东西天生就有缺陷，于是只能自己寻找排遣的方法。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;SH、YF、ONCE等人，大学的室友。在宿舍里，或者是在自习室的时候，经常三五人互相呼唤，然后出门在楼道的尽头或者是某个角落，点上香烟，然后倾谈。每个人即是一手烟的制造者，也是二手烟的分享者。而那时的我，大抵是觉得吸烟有害健康，于是始终敬而远之。现在想来，倒是十分羡慕。自己学习、看书是一个人，抽烟同样仅仅一人，形单影只，没有什么寂寥之感，不过也很想身边能有个人陪伴。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;不再去费心结交新的朋友，在自己的世界里，偶尔会有人进来，还有不少人离开，这样随着时间的流淌，最终留下的，就是我真正的朋友了。以自己的眼光审视，中学六年大学四年硕士三年，人生最好的十三年时光，我所结识的那十几二十个人，是我一生的财富。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;前两天有个理由，又给amoon打了电话。然后又想起了好久没听过的游鸿明，以及陈奕迅。只剩下感慨，以及无能为力。&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7650934662830222366/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/smoking.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7650934662830222366'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7650934662830222366'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/smoking.html' title='smoking'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1963063222747221407</id><published>2010-02-01T17:45:00.003-06:00</published><updated>2010-02-01T17:59:31.630-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>some trivial thing</title><content type='html'>很多时候都会有倾诉的欲望，很像写些什么或者说些什么。念头在脑海里盘旋，尽是些只言片语。而到提起笔、或打开blog的页面，才发现无法把它们整理成顺当的语句。当然，说就更不用提了，没有倾诉的对象，也无法倾诉任何有意义的言语。&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;从国内回来半个多月，感觉比上个学期驾轻就熟了很多。可以无论如何出席课堂，可以安静的坐在图书馆里看书，可以尽量不按快进的看完一部电影。踏实了些。不过自己心里也知道，无论是专业知识还是自律自省，都还有很长一段路要走。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Times是一个不错的练习速读的材料，里面的生词很少，语句比较直白，而且每行的长度有限，可以一目看完。如果说做精读的练习，很想翻译几篇文章给译言。但鉴于前段时间看到的《不做自杀网站》的文章，对于管理员们的工作也多了几分理解。在现在这个和谐天下的世道里，还是先管理好自己，不要去故意给一个好网站增添被和谐的危险了。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;除了邮箱和校内之外，最近每天都会光顾豆瓣。校内里是些熟人，豆瓣上是些有趣的人。两者有交集，但交集不大。豆瓣上面的影评和时政的文章，很多都有经得起推敲的想法，看后一笑，或者是对比思考，都是些不错的材料。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;这个月给自己定的目标有两个：安心看书；理解四门课程的所有讲授内容。&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1963063222747221407/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/some-trivial-thing.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1963063222747221407'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1963063222747221407'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/02/some-trivial-thing.html' title='some trivial thing'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-131549186468381816</id><published>2010-01-31T21:07:00.004-06:00</published><updated>2010-01-31T21:26:20.713-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>The lord of the rings</title><content type='html'>这部电影在我的收藏里已经放了很长的时间，上次看的时候应该还是在大四，还没看到第一个精彩之处就已经没有耐性了，然后就一直放着。直到看到了它在Times里面评选的过去十年最佳影片的第二位的时候，才想起来，好像还没有看过。&lt;br /&gt;&lt;br /&gt;三天的时间，断断续续的看完了。宏大的场面放到一边，我认为它们仍然可以称之为最伟大的电影之一。影片在讲一个故事，不拖沓，也不急促，足够渲染，足够精巧。&lt;br /&gt;&lt;br /&gt;在这样的电影中，对于人的描写，与精灵、兽人、矮人放在一起，更为凸显其优点以及缺陷。看电影里的人物，有时候就象看到了身边的人，或是看到了自己。多疑、优柔、逃避、贪婪、胆怯、骄横跋扈，对金钱或权利予取予求，但远非光明正大。在主人公Frodo的身上，有些缺点尤为明显。而故事最终的美好结局，与其说是某种必然，不如说是作者或者编剧美好的愿望。托起这美好结局的，便是人们身上的优点，团结、坚强、忠贞，以及对于美好的向往和信念。就象是里面某段对白中Sam所讲的，尽管他甚至还讲不清楚美好到底代表着什么，仅仅以goods代替，但这种坚定的信念，可以支撑他们一直走到最后。&lt;br /&gt;&lt;br /&gt;记下Sam这段话——&lt;br /&gt;&lt;br /&gt;“Full of darkness and danger they were. And sometimes you didn't want to know the end because how could the end be happy? How could the world go back to the way it was when so much bad had happened? But in the end it's only a passing thing, this shadow, even darkness must pass. A new day will come .And when the sun shines, it will shine out the clearer. Those were the stories that stayed with you that meant something. Even if you were too small to understand why.&lt;br /&gt;&lt;br /&gt;Folks in those stories had lots of chances of turning back, only they didn't. They kept going because they were holding on to something.&lt;br /&gt;&lt;br /&gt;That there's some good in this world. And it's worth fighting for. ”&lt;br /&gt;&lt;br /&gt;看完这部电影，心里很温暖:)</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/131549186468381816/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/01/lord-of-rings.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/131549186468381816'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/131549186468381816'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/01/lord-of-rings.html' title='The lord of the rings'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8752360188138472909</id><published>2010-01-27T13:36:00.002-06:00</published><updated>2010-01-27T13:49:11.999-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>recent</title><content type='html'>两天前看完了《万历十五年》。感觉像是讽喻。里面很多一针见血的分析，如果有时间的话摘抄到这面日志的后面。现在回忆起来，有几个核心的观点留下了较深的印象。&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;首先，当然是全书的大历史观。很多事情，不能从一时一刻去观察它的影响和得失，需要站在整个历史的角度，从三五百年之外，将文化和经济社会生产力等诸多要素结合起来，才能得到接近正确的解释。在中国社会中，文官体制是应时而生的，但随着社会的发展，单单由这种体制来维护的社会，将会是一个畸形而无法稳定的社会。道德作为一个社会准绳没有问题，但问题在于将其作为放之四海皆准的第一准绳，去衡量人或事，那么将是一件悲哀的事情。因为这恰恰证明了整个社会制度中，存在着致命的缺陷，没有足够的法律法规或政治体制来解决问题，于是只能诉诸模棱两可的规范。从皇帝、到首辅、到将军、再到当时的思想家，所有的人，或身败，或名裂，或身败名裂，或纠结遁世。有其自身的原因，却也总无法摆脱当时时代发展的潮流。一个悲剧的时代中，注定几多悲剧。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;刚刚开始看林夕的《曾经》。很有味道。我不能写成像他那样优雅的文字，但同样，就如同他以专栏为日记本，去记录自己的一点一滴一样，我也可以在自己的空间中，记下自己生活或者心绪的起伏变化。十年后，回头观看，得失何在？可以了然于心，也可以淡然一笑。&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8752360188138472909/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/01/recent.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8752360188138472909'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8752360188138472909'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/01/recent.html' title='recent'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2987917739018029533</id><published>2010-01-22T10:21:00.001-06:00</published><updated>2010-01-22T10:24:11.568-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Backup</title><content type='html'>中国官员必修课之第一讲&lt;br /&gt;from 韩寒&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;正如一位网友所说，中国现阶段的主要矛盾是人民群众日益增长的智商和官员们不断下降的道德之间的矛盾，但是，在道德下降之余，他们的判断力，决策力，眼光，公关能力，口语表达，个人魅力，危机处理能力也在不断的下降，经过我多年的观察，我发现其实很多事，本来没事，但经过一些官员出面处理以后，小事化大，大事化炸,最后成为焦点新闻。在这里，我将讲述一些在我国如何正确处理一些危机和政府事物的技巧和常识，以帮助各个领导更快的升官发财。今天的是第一讲。我们从一条新闻说起:&lt;br /&gt;&lt;br /&gt;据甘肃省新闻网报道,甘肃将要组建一支650人的网络评论员队伍，正确的引导舆论。&lt;br /&gt;&lt;br /&gt;这条新闻起先是由甘肃省自己的内部新闻网发布，甘肃省本想将此当做重大的政绩工程来宣传，本意是想向上级政府邀功请赏。甘肃的政府各部门特地在兰州开会，省宣传部部长特地讲话，最后作为新闻对外发布。&lt;br /&gt;&lt;br /&gt;在互联网上，我们经常看到有人说，兰州悲剧了。当然，甘肃省的领导们肯定不知道这句话什么意思。如今我们真正看到兰州悲剧了。在这个新闻发布以后，被各大网站转载，但是今天打开这些网站，发现所有的新闻链接都已经失效，没有一条能够打开。是谁能和谐省宣传部呢，当然是宣传总部。甘肃省的领导们对圣旨的领悟能力极差。他们犯下了重大的错误。马屁拍在老虎屁股上。&lt;br /&gt;&lt;br /&gt;网络评论员也叫五毛党，乃是地下党。你把成立一支地下党的消息以及名单直接公布了，乃是大忌。这个消息应该是一个密件，由专人送达上级部门，那么上级部门必将重重有赏。这个新闻直接透露了政府一直不愿意承认的一个事实，那就是五毛党的存在。如果一个人想要获得赞美和拥护必须要靠花钱收买别人的嘴才可以，那说明这个人肯定够丑的。这条新闻直接摧毁了上级部门努力营造的假象。兰州宣传部门的领导看来一辈子升官无望。&lt;br /&gt;&lt;br /&gt;另外，这条新闻的灾难性在于，他完全暴露了五毛党的结构组成以及基本人数，并且容易被一些网友所利用,新闻里说，今年甘肃省要加快网监、网评队伍建设，形成以50名网络评论“高手”为核心层、100名网络评论“好手”为紧密层、500名网络评论“写手”为外围层的网评队伍体系。&lt;br /&gt;&lt;br /&gt;在甘肃省这么一个小省里，尚且需要新增添650的专业网络评论员，那么好事者很容易推算出，在全国范围内，专业网络评论员的数量应该不下十万人。假设每个网络评论员的年工资平均为五万元人民币，那么政府每年要为自己夸奖自己支付50亿人民币，也就是25000个希望小学，或者十分之一个三峡大坝，或者杨浦大桥加南浦大桥加东方明珠打包带走还是双份，或者30架波音737，或者一个中型航空母舰，或者90台在汶川地震中急缺的只向俄罗斯租借到一台的空中巨无霸米26H直升机。这个数据如果不小心让人知道了，非常容易引起人民群众和政府之间的矛盾，往自己脸上贴金乃是人之常情，贴金就要花钱，但往自己脸上贴航母的确说明这脸有点太大了。好在还没有好事者这样推算过，至今也没有人提出过质疑，算是万幸。&lt;br /&gt;&lt;br /&gt;通过这场兰州悲剧，各位领导们也知道了领会上级精神和误会上级精神之间其实只有一念之差，各省市宣传部领导们应该引以为戒。&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;--------------------------------&lt;br /&gt;&lt;br /&gt;甘肃今年将建650人网评队伍 旨在引导群众正确看待热点&lt;br /&gt;（ 2010-01-20 11:24:09）     稿件来源：每日甘肃网-西部商报&lt;br /&gt;&lt;br /&gt;    &lt;span style="font-weight: bold;"&gt;新华网&lt;/span&gt;甘肃频道消息    当今互联网已经成为各种社会思潮、各种利益诉求的集散地。发现和培养一批引导正确舆论方向的网络评论员队伍已刻不容缓。日前，甘肃省宣传思想工作会议在兰州召开，甘肃省委常委、宣传部部长励小捷出席会议并作讲话。今年，该省将逐步形成一支网络“高手”、“好手”、“写手”等650人的网评队伍体系。&lt;br /&gt;&lt;br /&gt;    网评队伍要及时引导舆论&lt;br /&gt;&lt;br /&gt;    今年甘肃省要利用互联网强大的新闻聚合、在线互动等功能，加快网监、网评队伍建设，形成以50名网络评论“高手”为核心层、100名网络评论“好手”为紧密层、500名网络评论“写手”为外围层的网评队伍体系。&lt;br /&gt;&lt;br /&gt;    网络评论员需积极关注社会热点和舆论动态，知识涉猎面宽、储备量大，有较高的写作水平和较好的文字功底，能理性公正地分析当今一些社会现象，见解独到，观点新颖，有较强的说服力和影响力。网络评论员可经常登录网站、B B S、博客等，了解网上信息并针对网民关注的热点问题，及时发帖跟帖，正确引导社会舆论。&lt;br /&gt;&lt;br /&gt;    引导群众正确看待热点&lt;br /&gt;&lt;br /&gt;    励小捷明确了2010年甘肃省宣传思想文化工作的具体举措：积极回应人们普遍关心的就业就学、楼市股市、卫生医疗等热点，主动设置议题，引导群众正确看待热点，理性合法表达诉求；全省86个县区的新闻网站今年年内有效开通；做好2010“感动甘肃十大陇人骄子”评选活动，组织开展 “争做道德实践先锋”主题活动和全省第二届道德模范评选表彰活动；谋划好新的公共文化建设项目，对“社区书屋”和“社区和学校电影放映工程”等建设项目抓紧论证，争取早日列入“十二五”规划的盘子；推进党委、人大、政协、法检两院对外重要信息发布工作，协调重点企事业单位开展资助新闻发布，加强选题策划和议题设置，选择公众关注的热点问题，及时邀请新闻发言人“自主发布”。&lt;br /&gt;&lt;br /&gt;    甘肃上《新闻联播》110条&lt;br /&gt;&lt;br /&gt;    2009年，甘肃省近1200万人次参与全国“双百”人物和“感动甘肃人物”评选；戏剧《大梦敦煌》入选文化部首届“优秀保留剧目大奖”，以650%的投入产出比成为全国收益最好的剧目；中央主要新闻媒体对甘肃省的报道近4000条，央视《新闻联播》110条，创历史最高；共举办新闻发布会257场，满足了公众的知情权，主动引导了社会舆论……兰州九州开发区滑坡、天水和酒泉因冰冻造成的大范围堵车、兰州石化某罐区爆燃事件都在当天给予及时报道，有的实现了直播。励小捷说，2009年甘肃加强了重大活动的宣传报道和热点问题的引导，既积极关注社会关切，又没有把问题炒热，及时准确、公开透明地做好突发公共事件的报道。&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;http://www.xinhuanet.com/chinanews/2010-01/20/content_18818855.htm&lt;br /&gt;&lt;br /&gt;catch: http://cache.baidu.com/c?m=9f65cb4a8c8507ed4fece763105392230e54f729678b8a522c88c40e84642c101a39feea7d794c578f9239261caf4b5fe8e7360435003db799d5d91781fdc574699f204073168c4218d91ea8dc46529b66cf4eacf259b1b5aa74d5ecc5d2ac494e8f16406d8087c1015c4e8d3cac4377f4a6ee1948000debb76b39ac05206cde3e40b444fbf732180582ebdd5e5192778c2746cbe922b74a11bf19a715112343b74cc6521779&amp;amp;p=8163c54ad79f12a05bfee66561&amp;amp;user=baidu</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2987917739018029533/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/01/backup.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2987917739018029533'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2987917739018029533'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/01/backup.html' title='Backup'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7752530621976548589</id><published>2010-01-22T00:29:00.003-06:00</published><updated>2010-01-22T11:52:14.282-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Avatar Comment</title><content type='html'>《阿凡达》，詹姆斯·卡梅隆的归来 (from 三联生活周刊)&lt;br /&gt;&lt;br /&gt;我不偏执于影片的教育意义，但我也不想让娱乐完全流于空洞。——卡梅隆&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;　　　　　　　　　　　　　　　　　　　《阿凡达》&lt;br /&gt;&lt;br /&gt;　　就在詹姆斯·卡梅隆导演此次中国宣传的3周前，本刊记者曾连线远在美国的卡梅隆，那时，有好莱坞影史上最恢宏史诗之称的《阿凡达》正开始成为世界范围内的话题，而电话的另一端卡梅隆导演说，这是《阿凡达》完成的第二天，感觉像在度假般愉快，以10作为满分的话，他给《阿凡达》的难度打到11分。&lt;br /&gt;&lt;br /&gt;　　3周后，卡梅隆如约出现在北京，采访时间定在上午11点，10点57分卡梅隆已经安稳地坐下，深蓝色西装，白色衬衫，他的声音太沙哑了，为了宣传这部电影，他走了很多的地方，但他说：“我不会因为声音沙哑而放弃回答你的任何一个问题，走了这么远就是为了回答这些问题。”&lt;br /&gt;&lt;br /&gt;　　此时，《阿凡达》已经在全球100多个国家公映，并且在北美地区首周末票房创下了7300万美元的历史纪录。&lt;br /&gt;&lt;br /&gt;　　卡梅隆为本刊记者总结《阿凡达》于他自己的意义，只是实现了自己男孩时代就有的梦想：“&lt;span style="font-weight: bold;"&gt;剧本完成于1995年，人们说这是搁置了14年的电影，实际上从很小的时候至今，我都喜欢在早餐桌上随手画点什么，那些保留下来的图片上早就有这部电影的样子。写这个故事的时候，我早有这么一个属于自己的视觉图像图书馆，写剧本就像给那些断断续续的梦中人物找到他们的家。&lt;/span&gt;”&lt;br /&gt;&lt;br /&gt;　　《阿凡达》确实像用成长的男孩目光审视了世界。故事发生在遥远的星球潘多拉，那里有荧亮的大树、艳丽的神兽，也生活着与自然优雅共处的纳威人，但人类为了解决能源问题，动用了强大的军事力量去开发这个星球的矿物资源，瘫痪的前海军陆战队士兵杰克·萨利和植物学家格蕾丝博士利用混血替身去潘多拉完成侦察的使命，他本该去维护地球人的利益，却对这种所谓的人类文明产生怀疑。&lt;br /&gt;&lt;br /&gt;　　卡梅隆对本刊记者说，他所有的影片都是爱情电影，比如《异形》讲述母女之爱，《泰坦尼克号》是一个经典的男孩遇到女孩的故事，&lt;span style="font-weight: bold;"&gt;《阿凡达》里的男孩女孩，更像是经典的《罗密欧与朱丽叶》，男女主人公有完全不同的文化身份，并且两种文化在利益上是相互冲突和对立的，但是他们在对方眼里看到了值得自己尊重的存在，“‘I see you’是一句寓言性的存在，我希望成为观众跟着杰克重新审视世界的开始”。&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;　　卡梅隆也向本刊记者坦言，除了昭然若揭的环境主题，他相信《阿凡达》有更重要的现实意义：“&lt;span style="font-weight: bold;"&gt;这个故事从诞生开始就有这样一个核心的愿望和当下社会有所关照，我不偏执于影片的教育意义，但我已不想让娱乐完全流于空洞。在《阿凡达》里，我希望每个观众都能和我一起完成一次发现之旅，潘多拉开始被说成是一个毁灭的星球，那里的气体会杀了你，那里的怪兽会吃了你，但是电影结束的时候，我们放开了自己的眼光，也转变了自己的观念，我们该想想自己和自然的关系，还有面对异己文化的态度。想到我们人类历史上这样或那样的过往，我们犯过的错误，人类是重新学会处理与外在世界关系的时候了，因为这关系已经影响到我们的将来。在之前十几年，我深切体验了整个人类社会所罹患的自然缺失症（nature deficit disorder），这是完成这部电影的根本原因。&lt;/span&gt;”&lt;br /&gt;&lt;br /&gt;科学探险家&lt;br /&gt;&lt;br /&gt;　　全球热映的《阿凡达》提出了这样的宣传口号——“詹姆斯·卡梅隆苦心孤诣12载的心血之作”。1997年的《泰坦尼克号》至今，真有12年之久，对于任何一位处于巅峰的导演，12年的间隔，总是让人费解。于是只要有卡梅隆出现的场合，最集中的问题莫过于：“怎样的电影需要筹备十几年的时间？”&lt;br /&gt;&lt;br /&gt;　　卡梅隆重复的标准答案是：“这部电影确实等了很久很久，原因是我在等待技术的成熟，等待图像捕捉技术的成熟。我想要技术能毫不损失地捕捉住演员的面部表情，再无损失地运用到电脑CG图像中。我也在研发自己的真人3D技术，甚至，启动《阿凡达》的头两年，做的仍旧是技术的研发。”&lt;br /&gt;&lt;br /&gt;　　但如果好奇卡梅隆究竟是如何打发10年的等待，你就会在他的履历中发现一些鲜为人知但分量十足的存在。2002年，他历时5年完成了纪录片《俾斯迈的考察》（Expedition:Bismarck），探究了“二战”时德国沉没的一艘主力战舰的前世今生，获得了当年的艾美奖。2003年完成了《深渊幽灵》（Ghosts of the Abyss），调查记录了滞留着“泰坦尼克号”遗骸和异形海洋生物的深海平台空间的真相。拍摄纪录片的同时，他甚至和美国国家航空航天局(NASA)的科学家们一起，研究了海洋中央脊状突起处存在的生物形式，以这部分海底地貌作为淹没在水中的山脉链条，以及其今后的变化趋势。&lt;br /&gt;&lt;br /&gt;　　事实上，关于纪录片的经历卡梅隆并不常提起，追问下的解释有一种没缘由的歉意：“我当初的目标是离开主流商业电影5年，过另外一种理想人生，成为真正的探险家、科学家、未知空间探索者、神秘海洋的探索者。当我忙着把这些目标，一个接一个在自己的生活里实现的时候，没来得及意识到时光飞逝，10年的光阴已经溜走了。”&lt;br /&gt;&lt;br /&gt;　　同时，卡梅隆也告诉本刊记者，恰是这些科学探险，积累下启动《阿凡达》的勇气：“我的科学探险对于《阿凡达》有直接影响，但也不是人们想象的那样，如何积累下不可多得的经验。纪录片是坚硬的训练，我学到了很多，但更重要的是从中体验了大自然的壮阔及脆弱，经历这样的人生，才了解自己曾经和自然的疏远，这是重拾《阿凡达》剧本的动力。”&lt;br /&gt;&lt;br /&gt;　　但如今，卡梅隆把导演《阿凡达》说成自己经历过的最艰险的科学探险：“&lt;span style="font-weight: bold;"&gt;与科学探险不同的是，《阿凡达》的挑战性不仅在于脑力上的冲击，更多在于纯粹的坚持。你知道，我们既不是在海上，也不是在对抗暴风雨，没有看得到的险阻，但实际上在对抗一个更恐怖的事实——不知道自己在做什么，包括我自己也在内，最终我的选择就是不断解决问题，一往无前。&lt;/span&gt;”&lt;br /&gt;&lt;br /&gt;技术狂人&lt;br /&gt;&lt;br /&gt;　　一往无前解决问题是标准不过的先锋姿态，也是卡梅隆的一贯作风。事实上，美国加利福尼亚大学物理学系毕业的卡梅隆，从放弃卡车司机的职业，在罗杰·卡曼（Roger Corman）的《太空大战》（Battle Beyond the Stars，1980）里获得第一份布景师的工作开始，利用技术手段营造视觉效果，就成了他所认定的帮助自己脱颖而出的杀手锏。也就是从那时起，这个心存高远的年轻人努力创造着机会去吸引制片人的注意。&lt;br /&gt;&lt;br /&gt;　　在20世纪80年代经典Cult电影《杀出银河系》（Galaxy of Terror，1981）中，卡梅隆得到摄影助理的工作，当时他要完成这样一个镜头——一条断臂上面爬满了蛆虫。为达到视觉效果，他为这条胳膊连上了可控制的电流，摄影机开始转动，隐身在镜头外的工作人员就按下按钮，于是卡梅隆喊开始，那些蛆虫真的扭曲翻滚起来。这天正是两个制片人巡视片场的日子，这个神奇的表演把两位老先生看得有些惊呆，接下来就迫不及待地和他谈起那些更大的计划。&lt;br /&gt;&lt;br /&gt;　　经过30年的导演生涯，如今的卡梅隆依然不变地喜欢在每一部电影里完成自己技术的突破。《终结者》之外，美国国家电影学会最佳视觉效果奖不厌其烦地提名给他的每一部电影，并且绝大多数时候也最终把奖杯颁给了他。&lt;br /&gt;&lt;br /&gt;　　2003年，他研发了属于自己的联合数字3D摄影机系统（fusion digital 3D camera system），其原理是利用两个并列的摄像头，模拟人的瞳距，对同一对象进行不同焦点的拍摄，再精确合成出适应人眼的立体画面。在海底纪录片《深渊幽灵》中，卡梅隆对这套系统进行了实践，把惯常运用在CG动画片中的3D技术，运用到真人拍摄中去。在《阿凡达》开始的前两年里，他再次改进了联合数字3D 摄影机系统，以达到自己心中的完美。&lt;br /&gt;&lt;br /&gt;　　素有技术狂人之称的卡梅隆从不怀疑技术的价值，他告诉本刊记者：“随着数字3D技术的成熟，我们必然会迎来电影的新时代，观众会看到那些在数字电影时代之前不可想象的视觉奇迹，这也会加速大电影制作的受欢迎程度。依靠计算机技术的成熟，CG动画片已经可以毫无成本增加地转化为3D格式，我想随着真人 3D电影技术的演进，观众能享受到更多高水准的3D电影。我希望这将成为观众习惯了在电脑、手机，还有互联网上看电影之后，重新返回电影院的理由。”&lt;br /&gt;&lt;br /&gt;　　而狂人的另一层含义就是近乎疯狂的努力。《阿凡达》的完成让卡梅隆兀自感慨，4年前带着部分推动技术前进初衷开始的电影，4年后，自己也难以置信于前进的距离。“为了成为第一部可见的具说服力的真人3D电影，我和我的团队奋斗了4年，没有休息日，完全不得喘息。所有努力因为我绝对坚信3D是整个电影产业的一个革命，把《阿凡达》当成革命的一部分。近几年来3D技术的革新，更多由动画片引领，比如皮克斯、梦工厂，他们已经点燃了观众对3D动画的热情，那么希望《阿凡达》至少让观众注意到动画电影之外也存在着3D效果。”&lt;br /&gt;&lt;br /&gt;　　卡梅隆告诉本刊记者：“再过5年，《阿凡达》中的技术实际上就可以非常普遍，每一个电影导演都可以选择使用或者不使用。我觉得在今后，一个导演实际上可以做到根据自己的故事选择自己的拍摄方式，每一种技术突破实际上就是给导演工具箱里添上一件好用的工具，重要的还是电影本身。观众是不会去在意那些新兴技术的，观众在乎的是他们在电影院里看到的东西，得到的感受。”&lt;br /&gt;&lt;br /&gt;大片导演&lt;br /&gt;&lt;br /&gt;　　除去独树一帜的技术狂热，卡梅隆在好莱坞的世界里，向来为人所津津乐道的还有他充沛的创作能力。80年代，就有电影杂志记者写下这样的文章描述这位年轻导演的工作场景：“他在一间房间里摆上三张桌子，埋头工作的打字机里《终结者》开了个头，另一张桌子上的《第一滴血Ⅱ》交战正酣，而第三张桌子上的《异形》差不多已经完成了。”或许这就是为何卡梅隆至今骄傲地对本刊记者说：“我从不读剧本，我只写剧本。”&lt;br /&gt;&lt;br /&gt;　　旗帜鲜明的独立创作精神下，卡梅隆是不折不扣的大片导演，至今，在好莱坞历史上，保持着这样一些关于他的记录，首部投资过亿电影（《终结者》）的导演、首部投资至两亿美元的电影（《泰坦尼克号》）导演，至于如今的《阿凡达》，更没有理由怀疑他吸引观众的超凡能力。&lt;br /&gt;&lt;br /&gt;　　卡梅隆对本刊记者强调的是，拍自己想看的电影：“&lt;span style="font-weight: bold;"&gt;我没有考虑过怎么吸引观众，我已经55岁了，或许我拍不出14岁的观众想看的东西，但还好，我一直觉得自己只有14岁（笑）。我想象把那个美丽的蓝色外星女孩放到梦幻的丛林中，有各种各样绚烂的动物植物，或许是这些吸引了年轻观众，但你知道，这也正是我至今想要实现的梦境。&lt;/span&gt;”&lt;br /&gt;&lt;br /&gt;　　对于大片导演的身份，卡梅隆毫不讳言曾经的困扰，至今他用“既是赐福也是诅咒”来形容当年《泰坦尼克号》的巅峰。赐福的是，让他可以筹到资金做一些超越平常的事情，人们相信他，不需要去改编一本小说或者去翻拍一部漫画，也不需要成为别人的续篇，就可以获得实现梦想的机会。而诅咒的是，几年来卡梅隆的耳边总有这样的声音：“好，瞧瞧这次他搞出什么花样。”&lt;br /&gt;&lt;br /&gt;　　卡梅隆告诉本刊记者，他没有办法拒绝大制作的诱惑，但30年的电影生涯，终于也有了自己的解决之道：“大制作的主流电影确实对电影制作者来说会构成问题，比如我总希望制作精美而有震撼力的电影，想在技术上突破，这些都需要资金支持。但这也意味着，我对于整个工业负有责任，对我来说，前提是首先做对我自己产生意义的电影，有我的想法和认定的价值在其中。尤其是这十几年，我宁愿自己的电影都是长时间内心愿望的积累，而不是潮流冲击而来。每个电影人应该有自己的公式，我想我自己的原则就是为观众营造出那种梦幻般的世界，用强烈的情感唤醒观众，引发观众自身的情感反应，这是我所认为的理想中的电影。”&lt;br /&gt;&lt;br /&gt;http://blog.sina.com.cn/s/blog_470bf2570100fx3u.html</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7752530621976548589/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/01/avatar-comment.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7752530621976548589'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7752530621976548589'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/01/avatar-comment.html' title='Avatar Comment'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7576608056881950923</id><published>2010-01-16T11:31:00.003-06:00</published><updated>2010-01-16T11:39:58.345-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>From Others</title><content type='html'>From 大头&lt;br /&gt;&lt;br /&gt;不知道，写什么才不会被封。&lt;br /&gt;2010-01-16 14:45:27&lt;br /&gt;&lt;br /&gt;              其实，我对COUNTRY大事不那么上心，虽然平时也有点类愤青的想法，但因为我只是个女人，拯救世界，拯救国家的这档子事，还是留给男人吧。&lt;br /&gt;&lt;br /&gt;       其实，我只是希望有个日记本。因为BUS，很好看。让我平生第一次坚持写这么长时间的日记……&lt;br /&gt;&lt;br /&gt;        还有，关于G中国。刚好有认识的大哥哥在谷中国工作。而我自己，也对这家公司颇为向往和好奇。比如可以在上班时间游泳----虽然我不会游泳；可以在自助餐厅大块大块吃烤肉----虽然也绝对会大颗大颗长痘痘，所以在关于未来的绮丽梦境里，它一直模模糊糊地存在着。不管怎么说，GMAIL和MAP的确很好用，这是它和我生活唯一最为密切相关的地方。&lt;br /&gt; &lt;br /&gt;       我想起那个著名的故事，是犹太人身上发生的，写这个的时候，我兀自有点怕，怕这段话在豆瓣上也不过。&lt;br /&gt;     “在德国，起初纳粹追杀/共/产/主/义/者，我没有说话——因为我不是/共/产/主/义/者；接着纳粹追杀犹太人，我没有说话——因为我不是犹太人；后来纳粹追杀工会成员，我没有说话——因为我不是工会成员；此后纳粹追杀天主教徒，我没有说话——因为我是新教教徒；最后他们奔我而来，却再也没有人为我站出来了。”&lt;br /&gt;      &lt;br /&gt;       于是，这一天来了，连自己最私密的日记本都被严密监视着。我不知道，还该对这个..有什么信心？我想我们从小总被一个概念混淆着。其实...并不等于国家。我爱国，因为这里有我的亲人朋友，有我爱的生活方式，我爱的文字。除了...以外。&lt;br /&gt;&lt;br /&gt;      颠倒BLACK AND WHITE ，颠倒YES OR NO，混淆视听，还要多久？&lt;br /&gt;   &lt;br /&gt;(http://www.douban.com/note/57087384/)&lt;br /&gt;---------------------------------------&lt;br /&gt;&lt;br /&gt;From 艾小柯&lt;br /&gt;&lt;br /&gt;幻灭&lt;br /&gt;2010-01-15 11:44:45&lt;br /&gt;&lt;br /&gt;把博客从新浪搬到博客大巴去以后，一直非常喜欢那里安静贴心的气氛。模板好，后台管理人性化，页面干净，尺度也挺大。&lt;br /&gt;&lt;br /&gt;这次网禁事件发生后，这个曾经的好地方已回天乏术，十年井绳了。&lt;br /&gt;&lt;br /&gt;以下是被网站锁住的部分文章列表：&lt;br /&gt;&lt;br /&gt;铜雀春深锁不住——影评&lt;br /&gt;现在，让我们紧紧相爱——影评&lt;br /&gt;好莱坞电影的崭新时代——影评&lt;br /&gt;政治宣传的真相——读书笔记&lt;br /&gt;美国大学的社会教育——时政评论&lt;br /&gt;穿越战争的迷雾——影评&lt;br /&gt;两个布努艾尔——读书笔记&lt;br /&gt;超现实主义的现实主义——影评&lt;br /&gt;诺拉之恋（七）——游记散文&lt;br /&gt;诺拉之恋（六）——游记散文&lt;br /&gt;蛋糕实验——菜谱&lt;br /&gt;纪录片的要素——读书笔记&lt;br /&gt;我不会写乐评——诗歌&lt;br /&gt;非暴力的两难抉择——影评&lt;br /&gt;瞬间——影评&lt;br /&gt;【小说】离开欧迈拉斯的人——翻译小说&lt;br /&gt;爱情是什么——影评&lt;br /&gt;浪淘沙——读书笔记&lt;br /&gt;作一位理智的读者——读书笔记&lt;br /&gt;一个理想主义者的宣言——读书笔记&lt;br /&gt;再谈冷血——时政评论&lt;br /&gt;恐怖大师——影评&lt;br /&gt;《天使与魔鬼》之改变功过——影评&lt;br /&gt;错把他乡作故乡——读书笔记&lt;br /&gt;情归西雅图（上）——游记&lt;br /&gt;第一个和第二个白日梦——随笔&lt;br /&gt;希望在人间——影评&lt;br /&gt;一歌到底，谁解我心——影评&lt;br /&gt;冷血——时政评论&lt;br /&gt;《斯巴达克斯》的动人瞬间——影评&lt;br /&gt;迷信——散文&lt;br /&gt;爱——散文&lt;br /&gt;两个中国人在旧金山——影评&lt;br /&gt;一场不够热辣的热带惊雷——影评&lt;br /&gt;我的理想主义——杂文&lt;br /&gt;别对自己人那么苛刻——评论&lt;br /&gt;为谁辛苦为谁甜——影评&lt;br /&gt;《国家地理》“中国之路”——翻译&lt;br /&gt;一沙一世界——影评&lt;br /&gt;春游散记（二）——游记&lt;br /&gt;……&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;再往前还有很多，数不过来了。有些涉及了所谓政治敏感事件，有些则是毫无道理的敏感词。没有解释、通知，说锁便锁。&lt;br /&gt;&lt;br /&gt;突然觉得google宣布离开也许并非一个独立事件。如果把这一切都串联起来观察的话，这更像是在一场政治运动高潮到来前的高调逃离……&lt;br /&gt;&lt;br /&gt;PS. 我倒不是说这一次事件，我也相信像“蛋糕实验”这样的文章必然会被恢复——在一定时间之后。但整个思维方式已经改变了：设立很多的敏感点，先锁住，慢慢再解锁。这基本就是宣布，不鼓励任何涉及时政历史的话题。整个网站的定位已经变化了。&lt;br /&gt;　　&lt;br /&gt;blog上有位朋友给我留言，引用了一段希特勒的名言：&lt;br /&gt;　　&lt;br /&gt;“不需要让青少年有判断力和批判力。只要给他们汽车、摩托车、美丽的明星、刺激的音乐、流行的服饰，以及对同伴的竞争意识就行了。剥夺青少年的思考力，根植他们服从指导者命令的服从心才是上策。&lt;br /&gt;　　&lt;br /&gt;让他们对批判国家、社会和指导者抱持着一种动物般原始的憎恶。让他们深信那是少数派和异端者的罪恶。让他们都有同样的想法。让他们认为想法和大家不同的人就是国家的敌人……“&lt;br /&gt;　　&lt;br /&gt;这就是”娱乐至死“的狠毒之处。&lt;br /&gt;&lt;br /&gt;(http://www.douban.com/note/56959827/)</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7576608056881950923/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/01/from-others.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7576608056881950923'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7576608056881950923'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/01/from-others.html' title='From Others'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5891161245263611168</id><published>2010-01-16T10:05:00.007-06:00</published><updated>2010-01-16T11:05:30.934-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Avatar</title><content type='html'>看这部电影，是冲着它强大的市场宣传以及精美的画面而去的。而最后得到的，是眼角的湿润，以及更多对于生命对于人性对于社会的思考。&lt;br /&gt;&lt;br /&gt;回国之前，曾经和室友有过一次有关言论自由的讨论。他说，中国人理应不获得这样的权利，因为他们无从分辨什么真理，更具体一点，因为美国占有着强大的经济和舆论地位，所以注定言论会对其有所偏爱。紧接着，他所举的例子是，尽管资本主义的自由的言论中也有对于社会的批评，但是他们的基调是为自己身为一个自由国度的人而自豪；而中国则相反，人们会因为批评而质疑自己的国家，社会必将大乱。于是，其左派言论得证。&lt;br /&gt;&lt;br /&gt;我一直都不善辩论，这次也不例外。对于他这样的规律总结，我只有沉默。但事后的观察和总结告诉我，很明显，前面的言论削足适履了。拿电影来讲，好莱坞票房热门中，当然不乏其爱国主义题材，但更多的作品，所立足和探讨的，是社会和人性。最近的一个例子，是Times评选的近二十年最佳影片（http://www.time.com/time/specials/packages/completelist/0,29569,1949837,00.html）。里面勉强纳入爱国题材电影的，只有一部the hurt locker。而就算是这部电影，所讲述的也是对于生命的尊重，以及战争对于人性的扭曲。除此之外，一个大国，竟然把嘲笑自己政府的Fahrenheit 9/11放到了列表之中，看来它们是当真不怕被和谐呢。列表中其它的电影，题材则更加关注人和社会，思考、检讨和探索要明显的多于赞扬。&lt;br /&gt;&lt;br /&gt;关于Avatar，美国人看到的是历史上白人对于印第安人残忍的殖民掠夺，中国人看到的则是现实中政府对于暴民的镇压。电影的结局是美好的，一如既往的表达着人们趋向善美的情节。而电影的精彩则在于，每个人都能从中看到某些似曾相识的场景。贪婪、缺乏体谅、缺乏尊重、缺乏独立思考……所有的这些弱点，在社会中普遍的存在，于是，我们需要有文学作品或者尖锐的批评来帮助警醒。如是，才可能改善，甚至进步。&lt;br /&gt;&lt;br /&gt;而对于这位好友的后半段理解，我同样得到了不同的解释。我从来都为自己是一个中国人而感到自豪，由己推人，绝大多数中国人也都一定会为了自己的种族而自豪。而如果说会有所怀疑的，也不是我们的民族，而是政府。两者在教育中被混为一谈，实则有着明显的区别。怀疑什么？会有所严重？后果又会可能如何？这些答案，我还没有想好，继续学习，继续思考。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5891161245263611168/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/01/avatar.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5891161245263611168'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5891161245263611168'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/01/avatar.html' title='Avatar'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3694804545937608653</id><published>2010-01-15T10:36:00.003-06:00</published><updated>2010-01-15T11:01:31.427-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>New year resolution</title><content type='html'>刚刚过去的09年，是匆忙与慌乱的一年。从年初的申请，到寒假班的东奔西跑，上半年东方和实验室之间应顾不暇，然后就是下半年在奥斯丁的各种意料之外的困难，一直在应付，却也一直没有找到终极的解决之道。当然，用另外一种眼光看待这些事情，也可找出些许的积极意义，譬如锻炼了自己的能力、心性、毅力等等。而对自己而言，09年最为让自己感觉不满的地方在于，由于自己的懈怠，导致很多事情最终都是在火烧眉毛状态下完成，一来结果自然难尽人意，再者又逐渐助长了自己更加浮躁的心情。如此往复，以致几乎没有完整的看完一本书，而到了年末的时候，我发觉自己竟然很难安静下来看完一部电影。&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;假期的回国是个正确的选择。从元月元日清晨登上飞机开始，由环境所限，我又开始了安静的读书，在漫长的旅途中欣赏电影，反思自己的行为，并且为之作出善意的改变。回到家中，见了妈妈、爸爸、姥姥、爷爷、奶奶，见了小猩猩。整理了自己的书架。慢速阅读九点里那些用心写好的文字，然后对照自己。在新的一年里，希望如下：&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1、不拖欠任何工作或者作业，按时保质的完成；&lt;/div&gt;&lt;div&gt;2、争取不错过任何的课程，预习、复习，努力出席答疑；&lt;/div&gt;&lt;div&gt;3、每周看部电影，每月看一本书，记下心得；&lt;/div&gt;&lt;div&gt;4、按时锻炼身体，规范作息时间；&lt;/div&gt;&lt;div&gt;5、找到心仪的老师，找到心仪的研究方向；&lt;/div&gt;&lt;div&gt;6、每月写一份文献总结；&lt;/div&gt;&lt;div&gt;7、熟练编写代码，独立完成自己的项目概览。&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3694804545937608653/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2010/01/new-year-resolution.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3694804545937608653'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3694804545937608653'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/01/new-year-resolution.html' title='New year resolution'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1521337676563656449</id><published>2009-12-31T21:17:00.000-06:00</published><updated>2009-12-31T21:18:21.343-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>New Divide</title><content type='html'>Songwriters: Bennington, Chester Charl; Bourdon, Robert; Delson, Brad; Farrell, Dave; Hahn, Joseph; Shinoda, Mike;&lt;br /&gt;&lt;br /&gt;I remembered black skies, the lightning all around me&lt;br /&gt;I remembered each flash as time began to blur&lt;br /&gt;Like a startling sign that fate had finally found me&lt;br /&gt;And your voice was all I heard that I get what I deserve&lt;br /&gt;&lt;br /&gt;So give me reason to prove me wrong, to wash this memory clean&lt;br /&gt;Let the floods cross the distance in your eyes&lt;br /&gt;Give me reason to fill this hole, connect the space between&lt;br /&gt;Let it be enough to reach the truth that lies across this new divide&lt;br /&gt;&lt;br /&gt;There was nothing in sight but memories left abandoned&lt;br /&gt;There was nowhere to hide, the ashes fell like snow&lt;br /&gt;And the ground caved in between where we were standing&lt;br /&gt;And your voice was all I heard that I get what I deserve&lt;br /&gt;&lt;br /&gt;So give me reason to prove me wrong, to wash this memory clean&lt;br /&gt;Let the floods cross the distance in your eyes across this new divide&lt;br /&gt;&lt;br /&gt;In every loss, in every lie, in every truth that you'd deny&lt;br /&gt;And each regret and each goodbye was a mistake too great to hide&lt;br /&gt;And your voice was all I heard that I get what I deserve&lt;br /&gt;&lt;br /&gt;So give me reason to prove me wrong, to wash this memory clean&lt;br /&gt;Let the floods cross the distance in your eyes&lt;br /&gt;Give me reason to fill this hole, connect the space between&lt;br /&gt;Let it be enough to reach the truth that lies across this new divide&lt;br /&gt;Across this new divide, across this new divide</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1521337676563656449/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/12/new-divide.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1521337676563656449'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1521337676563656449'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/12/new-divide.html' title='New Divide'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2478647154449120381</id><published>2009-12-30T11:55:00.002-06:00</published><updated>2009-12-30T12:02:23.392-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Warm words</title><content type='html'>&lt;span style="font-weight: bold;"&gt;海盗湾平安夜的一段话，&lt;/span&gt;&lt;br /&gt;We believe that we have changed something. Not just us, but all of us. The Pirate Bay has always been something extra. We didnt just wanna run another tracker. We wanted it to mean something. And you our users have helped us with that. The history of the bay is still being written, it's way to early for a conclusion. (http://thepiratebay.org/blog/177)&lt;br /&gt;&lt;br /&gt;-------------------&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight: bold;"&gt;李承鹏的一段话：&lt;/span&gt;&lt;br /&gt;由黄健翔、韩寒和我共同参与援建的绵阳小枧希望小学已经建成，这份功劳最大的是成都置信集团，我们只是小小地参与。黄健翔捐赠了一块绝对超过20万的运动草坪，校长对我说，漂亮啊，围边三十多个乡里找不到这么漂亮的操场了（黄健翔还专门发短信说“赶紧用，用烂了我再修”）。韩寒捐赠的是六万元现金的 “文学奖学金”，另外有不低于十五万的电脑和书籍（不是他自己出的书，而是专门给孩子买的学习用的书）。我捐了六万“体育奖学金”和十五万全套运动器械（买的，不是别人赞助的）。那天大雾，黄健翔和韩寒没有来，他们除工作外还有个重要理由“与其带着人马前呼后拥花着上万机票和吃住，不如拿这笔钱来买书和电脑”，我觉得这个很好，否则把村里鸡毛都吃得不剩，就违背我们本意，这恰恰是之前我们反对的。&lt;br /&gt;&lt;br /&gt;按他俩私下要求，现场无领导打扰，无记者访问。但有小孩子表演节目，我一直忍不住笑，有个女孩太认真就把跳舞的位置站错了，差点跟另一女孩打起来，还有个小孩表演时把方向搞反了，还有拿球签名的小孩把我叫成陈叔叔……&lt;br /&gt;&lt;br /&gt;经查，本次援建质量可靠，时间及时，无诈捐现象，有书面证明。此条只是给一年来总在博客里提问的人们一个交待，不做宣传，此事以后不会再提。因为我们不是演员，只是路人甲乙丙。&lt;br /&gt;&lt;br /&gt;-------------------&lt;br /&gt;&lt;br /&gt;&lt;span style="font-weight: bold;"&gt;卢安克的一段对话：&lt;/span&gt;&lt;br /&gt;然后我才知道，他说他不记得了，是真的不记得了。&lt;br /&gt;&lt;br /&gt;“以前我的思考都在头脑里发生，我想到了，但我做不到。现在我不思考了，只感受，反而做到了我之前想做而做不到的，因为思考变成了生活，变成了行为。”&lt;br /&gt;&lt;br /&gt;看他的博客，会清晰地看到他这个变化的过程。&lt;br /&gt;&lt;br /&gt;他之前写过《与孩子的天性合作》，写下他的研究和经验。几十万字，现在他已经不再记得写过什么，他也不认为会有什么可借鉴的模式。他说他不再思考，也不再写了，只是感受。我当时看的时候担心他坠入虚无，直到采访时，才知道我头脑中的桩子插得何等之深。&lt;br /&gt;&lt;br /&gt;“你认为孩子应该是什么样的呢？&lt;br /&gt;&lt;br /&gt;“如果自己作为老师，带着一种想像，想像学生该怎么样，总是把他们的样子跟觉得该怎么样比较，是教育上最大的障碍。这样我没办法跟他们建立关系，这个想像就好象一面隔墙在学生和我的之间，所以我不要这个想像”&lt;br /&gt;&lt;br /&gt;“但是即使是我们平常接触到的一个很好的老师也会说，比如说我想要一个有创造力的，有想象力的，什么样的学生，他也会有他的一个标准，难道你没有吗？&lt;br /&gt;&lt;br /&gt;“那学生做不到，他会不会放弃呢，会不会怪这个学生？”&lt;br /&gt;&lt;br /&gt;“可能会失望。”&lt;br /&gt;&lt;br /&gt;“我以前考虑过很多方法，最后放弃了，方法都没有用，唯一有用的是老师的心态，老师心态最受影响的就是那种学生该怎么样的想像，他总是想着这个，他没办法进入适合学生的心态，没办法真正去看学生是怎么样子的，如果很开放地看得到，没有什么想像，很自然地就会有反应，适合学生的反应，而这种反应学生很喜欢，很容易接受。”&lt;br /&gt;&lt;br /&gt;所以他才说，他没有任何可写的了，他曾经在博客里以巨大的篇幅批评和反对过标准化教育，反对整齐划一的校园，反对“让人的心死去”的教育理念，他跟现实世界里的问题较着劲，现在他说他放弃了要改变什么的想法。我刚一听的时候也一惊。&lt;br /&gt;&lt;br /&gt;他说“如果想改变中国的现状，然后带着这个目的做我做的事情，那我不用做了。幸好我不是这样的，我不想改变，我没有这个压力。”&lt;br /&gt;&lt;br /&gt;我愣了好一会儿，才接着往下问“如果不是为了改变，那我们做什么？”&lt;br /&gt;&lt;br /&gt;“当然会发生改变，改变自会发生，但这不是我的目的，也不是我的责任，也不是压在我的肩膀上的。”&lt;br /&gt;&lt;br /&gt;“改变也不是目的？”&lt;br /&gt;&lt;br /&gt;“它压着太重了，也做不到”他说“但你不这么想的时候，它会自已发生”。&lt;br /&gt;&lt;br /&gt;有人跟我形容过听他说话的感觉-----你以为是禅悟式的玄妙，其实背后是严整的逻辑体系，是一步步推导认识的结果。&lt;br /&gt;&lt;br /&gt;“你原来也有过那种着急的要改变的状态，怎么就变了，就不那样了？&lt;br /&gt;&lt;br /&gt;“慢慢理解为什么是这个样子，理解了就觉得当然是这样了。&lt;br /&gt;&lt;br /&gt;“你对现实完全没有愤怒？&lt;br /&gt;&lt;br /&gt;“没有。”&lt;br /&gt;&lt;br /&gt;“你知道还会有一种危险是，当我们彻底地理解了现实的合理性，很多人就放弃了。”这是我的困惑。&lt;br /&gt;&lt;br /&gt;“那可能还是因为想到自己要改变，所以没办法了，碰到障碍了，就放弃了。我也改变不了，但也不用改变，它还是会变。”&lt;br /&gt;&lt;br /&gt;“那我们做什么呢？”&lt;br /&gt;&lt;br /&gt;“把自己的事情做好，勇敢一点。”&lt;br /&gt;&lt;br /&gt;-------------------&lt;br /&gt;&lt;br /&gt;看这样的文字和思想，会感觉很温暖。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2478647154449120381/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/12/we-believe-that-we-have-changed.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2478647154449120381'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2478647154449120381'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/12/we-believe-that-we-have-changed.html' title='Warm words'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7580064976131809046</id><published>2009-12-29T16:37:00.004-06:00</published><updated>2009-12-30T09:04:05.806-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Work'/><title type='text'>Slides about Semantic Web</title><content type='html'>&lt;div style="width: 425px; text-align: left;" id="__ss_1718687"&gt;&lt;a style="margin: 12px 0pt 3px; font-family: Helvetica,Arial,Sans-serif; font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; line-height: normal; font-size-adjust: none; font-stretch: normal; display: block; text-decoration: underline;" href="http://www.slideshare.net/HatemMahmoud/web-30-the-semantic-web" title="Web 3.0 The Semantic Web"&gt;Web 3.0 The Semantic Web&lt;/a&gt;&lt;object style="margin: 0px;" width="425" height="355"&gt;&lt;param name="movie" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=web-3-0-the-semantic-web-090714041600-phpapp02&amp;amp;stripped_title=web-30-the-semantic-web"&gt;&lt;param name="allowFullScreen" value="true"&gt;&lt;param name="allowScriptAccess" value="always"&gt;&lt;embed src="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=web-3-0-the-semantic-web-090714041600-phpapp02&amp;amp;stripped_title=web-30-the-semantic-web" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="355"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;div style="font-size: 11px; font-family: tahoma,arial; height: 26px; padding-top: 2px;"&gt;View more &lt;a style="text-decoration: underline;" href="http://www.slideshare.net/"&gt;presentations&lt;/a&gt; from &lt;a style="text-decoration: underline;" href="http://www.slideshare.net/HatemMahmoud"&gt;Hatem Mahmoud&lt;/a&gt;.&lt;/div&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;more technical and detailed slides:&lt;br /&gt;&lt;div style="width: 425px; text-align: left;" id="__ss_1422666"&gt;&lt;a style="margin: 12px 0pt 3px; font-family: Helvetica,Arial,Sans-serif; font-style: normal; font-variant: normal; font-weight: normal; font-size: 14px; line-height: normal; font-size-adjust: none; font-stretch: normal; display: block; text-decoration: underline;" href="http://www.slideshare.net/LeeFeigenbaum/semantic-web-landscape-2009" title="Semantic Web Landscape 2009"&gt;Semantic Web Landscape 2009&lt;/a&gt;&lt;object style="margin: 0px;" width="425" height="355"&gt;&lt;param name="movie" value="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=semantic-web-landscape-2009-090512082718-phpapp02&amp;amp;stripped_title=semantic-web-landscape-2009"&gt;&lt;param name="allowFullScreen" value="true"&gt;&lt;param name="allowScriptAccess" value="always"&gt;&lt;embed src="http://static.slidesharecdn.com/swf/ssplayer2.swf?doc=semantic-web-landscape-2009-090512082718-phpapp02&amp;amp;stripped_title=semantic-web-landscape-2009" type="application/x-shockwave-flash" allowscriptaccess="always" allowfullscreen="true" width="425" height="355"&gt;&lt;/embed&gt;&lt;/object&gt;&lt;div style="font-size: 11px; font-family: tahoma,arial; height: 26px; padding-top: 2px;"&gt;View more &lt;a style="text-decoration: underline;" href="http://www.slideshare.net/"&gt;presentations&lt;/a&gt; from &lt;a style="text-decoration: underline;" href="http://www.slideshare.net/LeeFeigenbaum"&gt;LeeFeigenbaum&lt;/a&gt;.&lt;/div&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7580064976131809046/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/12/web-3.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7580064976131809046'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7580064976131809046'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/12/web-3.html' title='Slides about Semantic Web'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-423008841146758942</id><published>2009-12-23T21:51:00.000-06:00</published><updated>2009-12-23T21:56:58.243-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Some words in "Observation"</title><content type='html'>“我把它放在一个医学家面前，我说请你给我写三千字，他说行，你等着吧，他肯定写尼古丁含量，几支烟的焦油就可以毒死一只小老鼠，吸烟的人肺癌的发病率，是不吸烟人的多少倍，吸烟如何危害健康。还是这盒烟，我把他拿给一个搞美术设计的人，我说哥们请你写三千字，那哥们给你写，这个设计的颜色，它的民族化的特点，它的标识写出来。我给一个经济学家，他告诉你，烟草是国家税收的大户，如果全不吸烟的话，影响经济发展，还有烟草走私对经济影响。”&lt;br /&gt;&lt;br /&gt;“我现在把烟给你，请你写三千字，你就会问写什么呀？”&lt;br /&gt;&lt;br /&gt;“你有自己认识事物的座标系吗？有几个？”&lt;br /&gt;--------------&lt;br /&gt;&lt;br /&gt;“思想、你、你妈这是三个东西，现在你妈看不懂，这是铁定的事实，到底是这思想错了，还是你妈的水平太低，还是你没把这思想表达清楚？我告诉你，你妈是上帝，不会错。思想本身也不会错，是你错了，是你在叙述这个思想的时候，叙述的节奏、信息的密度和它的影像化程度没处理好，所以思想没有被传递”&lt;br /&gt;--------------&lt;br /&gt;&lt;br /&gt;“什么是好片子？”他说。“你的领导不愿意表扬，又找不出理由枪毙，一人在家的时候挺爱看的就是。”&lt;br /&gt;&lt;br /&gt;我当年以为是他是说好节目要尖锐，他说“不是，不是说你把采访对象不愿意说的一句话套出来叫牛逼，把他和你都置于风险之中，这不叫力量。要是拿掉你这句话，你还有什么？”&lt;br /&gt;&lt;br /&gt;“你的主题要蕴含在结构里，不要蕴含在只言片语里，要追求整个结构的力量。”&lt;br /&gt;&lt;br /&gt;“这种结构，是如何去建构这个片子中的相关人物，以及相互关系，在这种关系里呈现出一种深刻。”。&lt;br /&gt;&lt;br /&gt;“结论是简单的，关系是深刻的”&lt;br /&gt;--------------&lt;br /&gt;&lt;br /&gt;“你必须退让的时候，就必须退让。但在你必须选择机会前进的时候，必须前进。这是一种火候的拿捏，需要对自己的终极目标非常清醒，非常冷静，对支撑这种目标的理念非常清醒，非常冷静。只有你非常清楚地知道你的靶子在哪儿，退到一环，甚至脱靶都没有关系。环境需要你脱靶的时候，你可以脱靶，这就是运作的策略，但你不能失去自己的目标。”&lt;br /&gt;&lt;br /&gt;原文地址：http://www.bullogger.com/blogs/chjguancha/archives/349824.aspx</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/423008841146758942/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/12/blog-post.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/423008841146758942'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/423008841146758942'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/12/blog-post.html' title='Some words in &quot;Observation&quot;'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7541755100101165714</id><published>2009-12-14T16:50:00.000-06:00</published><updated>2009-12-26T20:41:03.565-06:00</updated><app:control xmlns:app='http://purl.org/atom/app#'><app:draft>yes</app:draft></app:control><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>habits that keep being excellent</title><content type='html'>在austin的第一个学期，已经完全结束了。感触很多，其中最深的，就是身边很多优秀的同学，他们的想法以及习惯。&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;CP。我认识他已经超过15年了。从同学，好友，再到无话不谈的哥们儿。他优秀到很多时候让我感觉惭愧。清华自动化系第一，一位美国老师，曾经把他推荐信中的“one of the best students”中的one of删掉。我不知道怎么样形容才是准确的，但我确信，他给我的最深印象——坚定而直白的态度——是他能如此出色的主要原因。他曾经说过，觉得玩游戏还不如多看一会儿准备考试的书呢，都是在耗费体力精力，不如用到更加有意义的地方；凡事都有因果报应，没有付出活该最后得不到好的结果；对一件事情多多琢磨，才能真正理解一个简单定理几句简单话语里蕴含的意义；等等。然后往往会紧接着自嘲说，很多人说他的想法变态。可就是这些想法，帮助他从国家理科班到清华再到现在一步一步走过来。&lt;br /&gt;&lt;br /&gt;Jiaming。是我在课上认识的第一个中国人，清华电子系的。很腼腆，很真诚，知识学的很踏实。随机过程和凸面分析两门课，我都问过他很多问题。哪些东西是大一学过的，哪些东西是大三学过的，哪个知识点和哪个知识点相连，如数家珍。也让我感觉份外惭愧。&lt;br /&gt;&lt;br /&gt;Bobo。说话很搞的一个哥们儿。最近刚刚结婚，再次祝福:) 说话也是十分的实在，对周围的所有人都很尊重。&lt;br /&gt;&lt;/div&gt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7541755100101165714'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7541755100101165714'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7977598890169307308</id><published>2009-12-12T12:43:00.001-06:00</published><updated>2009-12-30T16:50:54.500-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>YeeYan</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;最近几日，烦心的事情来自于国内，也来自于各种纷杂的评论。译言被关掉了，若干个影响甚广的P2P网站也被关掉了。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;先说后者。从版权保护的角度而言，这样的行为无可厚非。每个人都需要尊重他人的劳动成果。无论从个人角度而言，所谓的代价或者是其中的分成是多么的不合理，但是既然人们付出了劳动和智慧，并且为其标上了价格，那么就理应获得承认和尊重。而另一方面，这些网站的关闭却叫人痛心。因为它们是面对着中国。我不知道如何形容自己心爱的祖国里种种光怪陆离的事情。优秀的海外电视剧和著作，很大一部分根本无法获得合法的刊发途径。一些不甚优秀，但含有针锋相对观点的作品，更是不得其门而入。绝大部分正式途径获取的信息都经过了严格的筛选。也就是说，没有任何合法的途径，来让每个人自己去决定，相信什么、信仰什么、摒弃什么。在这样一种大环境下，私下的盗版传播成了唯一的途径。如是，一个自相矛盾的现象，很多人在通过非法的途径，获取信息，而这些信息，大都在教导人们向往美好而自由。于是，以合法合理的方式去消除异己之见，也就自相矛盾起来了。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;译言的关闭，则没有如上那么纠结。只是痛心、愤怒。伽利略的话，引用了无数次，“If in order to banish the opinion in question from the world it were sufficient to stop the mouth of a single man,... then that would be very easily done. But things stand otherwise. To carry out such a decision it would be necessary not only to prohibit the book of Copernicus and the writings of other authors who follow the same opinion, but to ban the whole science of astronomy. Furthermore, it would be necessary to forbid men to look at the heavens。”。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;向往自由和民主，彼此尊重，寻求真相——我从来不认为这是什么私货。右派很多观点，听起来很是幼稚，如果趋向于阴谋论，又过于阴暗；而左派的观点，我所见所闻，没有任何逻辑可言，或仅从利益出发，趋附于犬儒，或仅仅是不断对偏右言论中某个论据证伪。问题在于，证伪本身并不能证实现实制度的合理性。我没有任何“左”、“右”意见，仅仅是通过最朴素的是非观和逻辑，不断思考。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;You can built walls separate city from city, people from people. But it is impossible to build wall to separate man from freedom. Because freedom always finds the path to build peace.&lt;/div&gt;&lt;div&gt;&lt;a href="http://www.chrysler.com/en/"&gt;http://www.chrysler.com/en/&lt;/a&gt; (12/2009)&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7977598890169307308/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/12/yeeyan.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7977598890169307308'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7977598890169307308'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/12/yeeyan.html' title='YeeYan'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-986992058164161785</id><published>2009-12-12T12:33:00.000-06:00</published><updated>2009-12-12T12:36:03.261-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Titan reports about Rockets~</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;from http://e.titan24.com/&lt;/div&gt;&lt;div&gt;记者王猛休斯敦报道&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;    当记者们刚刚涌入火箭的更衣室，就听到海耶斯在吆喝：“请不要靠近阿里扎，让他穿好衣服，待会他会去新闻发布室里接受你们的采访。”俨然，海耶斯在扮演球队媒体官的角色。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;    这句话确实是火箭媒体官内尔松的常用语，到了季后赛，每场比赛发挥最好的球员会被请进新闻发布室接受采访。得了26分，投中4个三分球的阿里扎腼腆地冲着记者们摇头：“别听他胡说。”他羞答答的样子把众人全逗笑了。拿下骑士，火箭像赢下一场季后赛那般快乐。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;    虽然骑士是“背靠背”的第二场，虽然前一晚他们在孟菲斯经过加时赛苦战仍然输给了弱旅灰熊，可没人相信火箭能有机会干掉他们。骑士的天赋太好，板凳太深，阵容太高。《休斯敦纪事报》的一位专栏作家说：对，他们应该会累了，可和累相比，我想他们也会更加愤怒，一支以争取冠军为目的的球队，不会容许连败发生的。就是这样，连休斯敦唯一的这家报纸也不看好火箭。在比赛当天上摊的版面上，他们在专栏里疾呼：詹姆斯应该考虑火箭作为转会的目的地，这样火箭终将拥有天赋和领袖，而詹姆斯也终于可以率领一支顽强的团队比赛了。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;    每当被轻视时，火箭总能爆发出惊人的能量。他们用8比0开局，接着被对手反扑，比分变成了10比13，火箭落后三分。可这群平民球员掀起了更加猛烈的攻势，用一个19比1的高潮完全控制住了局面。压制对手一段时间不难，可要把比赛控制在自己手里整整三节，需要无比坚韧的防守，以及雪中送炭的进攻。火箭以29比14领先时，距离第一节结束还有两分钟，那时候谁能相信，火箭能将詹姆斯和骑士如此轻松地压制在身下，让对手动弹不得。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;    詹姆斯愤怒了，连冲带撞地杀向火箭的内线。迈克·布朗愤怒了，在斯科拉一个有走步嫌疑的上篮得分之后，追着裁判连嚷带骂，喷出的吐沫星子完全罩住了裁判，被吹了两次技术犯规踢出场。韦斯特也站了出来，他的个头比洛里和布鲁克斯大，速度毫不逊色，变成火箭限制不了的一点，他得到了骑士全队第二高的14分。骑士已经把能用的法子都用了，能使的劲儿都使了，也没能再次追平比分。詹姆斯不得不承认：“这是一支顽强的球队。”&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;    在这个晚上，火箭不仅展露出了顽强，还有一些明星的味道。在每一个关键时刻，阿里扎都站了出来，把皮球送进骑士的篮筐，把对手的传球断掉，阿德尔曼说：“这就是我期盼的，在关键时刻，有人能够站出来。”第一节拉开优势的是阿里扎。原本火箭只领先6分，随时可能被对手反超过去。阿里扎关键时刻一个抢断，快步奔回进攻一端，接到布鲁克斯传球，毫不犹豫地三分出手，命中。下一个回合，詹姆斯准备用三分反击，未中。又是阿里扎从人群里蹿了出来，摘下篮板，扔给布鲁克斯后迅速寻找进攻位置。布鲁克斯又把球扔了回来，阿里扎继续出手，再次命中三分。两个回合只花了不到30秒就把分差变成了12分，逼得骑士叫了暂停。第四节，骑士开始了最后的反扑，一度把分差缩小到5分，阿里扎又站了出来，在骑士锋线的纠缠下拔地而起，中投命中。接着又投中一个三分，在第四节过半的时候把分差再次扩大到12分。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;    阿里扎笑了，如释重负地笑着。他已经有很长时间没投得如此顺手了。在和骑士的比赛之前，他手感一直都不怎么顺，虽然一场比赛也能得上十多分，可都需要二十次以上的出手次数。尤其是三分球，过去的四场比赛，他只投进了4个三分，可出手了23次。阿里扎说：“我很高兴，终于找到了手感，当前两个三分命中之后，我知道手感来了。这种感觉很好，我已经很久没尝到了，现在我就盼着能保持下去。”&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;    当然，拿下这场比赛不仅仅靠着阿里扎的手感，还有海耶斯舍身与奥尼尔搏斗，还有巴蒂尔纠缠詹姆斯，火箭再一次证明在这个集体中蕴藏着何等巨大的潜能。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;    兰德里说：“这取决于你是否愿意，如果你想抢一个篮板，你就能，如果你坚定地投篮，你就能得分，我乐于跟最伟大的球员挑战。”斯科拉说：“这取决于你如何使用自己的优势，有些比我高的对手，我反而觉得会打得很舒服，有些比我矮的，我却很讨厌跟他们打。”巴蒂尔说：“每个这样的夜晚，我都会很享受。我们知道这场胜利有多不容易，也知道几乎没谁相信我们能赢，那就算是我们抢来的吧，抢来的会让我们更珍惜。”&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/986992058164161785/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/12/titan-reports-about-rockets.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/986992058164161785'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/986992058164161785'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/12/titan-reports-about-rockets.html' title='Titan reports about Rockets~'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-848604778250037767</id><published>2009-12-10T18:52:00.000-06:00</published><updated>2009-12-10T19:04:32.485-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>swift or high quality</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;上周和gus.的谈话，收获不小。除了明确一些具体的知识点，例如：需要重新阅读real analysis的书籍，上通信网络的课程需要学好现在的stochastic process之外，最重要的一个提醒，莫过于有关学精和学快之间的关系。&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;在他看来，一个学期四门课程似乎有些过量了。因为这样就会没有能力把每一门课程学精。而站在我的观点上，我只是想强迫自己尽量多的学习，在尽量短的时间内摄入大量的知识。但，说实话，现在随着复习最后一门考试的深入，越发的感觉到，自己最不足的地方，就是什么知识似乎之前的学习都不是很透彻。数学也好，还是应用编程也好，似乎都需要去查阅大量相关背景。而当大批的任务摆在面前的时候，我又容易犯自己最典型的毛病：什么都不想做，然后消耗着时间，听天由命。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;在“学快vs.学精”之外，实际上另一个紧迫的问题在于，导师们都十分精明的等待着好成绩的出现。就像是gus.所说的，招学生就像是赌博，需要提高赌中的概率，有三个方面：最好的学生，对研究方向有兴趣，而且这个学生和老师的目标一致。后两个条件比较空洞，说实话随便掰一掰，谁都能打扮成这个样子。而第一个条件，要求上课100%出勤，要求答疑经常出现，要求每次作业完美无缺，要求全A……没有一个是现在的我能够做到的。想到这些，似乎下学期当真需要减少一门课程，让自己能够以最饱满的精力来应付手头所有的内容。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;我勾画过自己理想的样子。不舍昼夜，务必到达。&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/848604778250037767/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/12/swift-or-high-quality.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/848604778250037767'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/848604778250037767'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/12/swift-or-high-quality.html' title='swift or high quality'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8525396191380769949</id><published>2009-11-30T18:58:00.000-06:00</published><updated>2009-11-30T22:58:07.189-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Work'/><title type='text'>Expository papers</title><content type='html'>这段时间做convex optimization的大作业，发现老师们的一个很棒的做法，实际上是从他们大学时就已经开始了——写expository paper。&lt;br /&gt;&lt;br /&gt;Expository writing is a type of writing, the purpose of which is to inform, explain, describe, or define the author's subject to the reader. Expository text is meant to deposit information and is the most frequently used type of writing by students in colleges and universities. A well-written exposition remains focused on its topic and lists events in chronological order. (en.wikipedia)&lt;br /&gt;&lt;br /&gt;很多文献，看了过段时间总会忘记，而像这样把原委记录下来，序言、定义、公理、证明、结论，以及参考文献，以后自己查阅起来也比简单的digest要有的放矢的多。经过自己大脑加工处理的知识，记忆应用起来，自然也会更加的得心应手。写的时候需要注意，首先尽量搜集相关主题的论文，或者是顺藤摸瓜逐渐填充；其次，把相同的内容进行归类和比较，最终得出根据自己计算或者是最新文献的结论，做醒目标识；第三，写的时候可以是“框架-&gt;定理-&gt;推论-&gt;例子”这样的逐渐填充，但成稿的时候，一定要把所有的定理以及例子进行统一编号；最后，章节以及定理的前后衔接，一定要符合逻辑顺序。&lt;br /&gt;&lt;br /&gt;只是，这样的文章貌似写一篇要花不少时间。给自己定一个要求，一个月一篇。一步一个脚印往下走，也能心里更踏实。</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8525396191380769949/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/11/expository-papers.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8525396191380769949'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8525396191380769949'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/11/expository-papers.html' title='Expository papers'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6602562833022174122</id><published>2009-11-29T21:56:00.001-06:00</published><updated>2009-11-29T21:56:54.048-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Kobe</title><content type='html'>转自新浪，孙沛的文章&lt;div&gt;----------------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-family: Simsun; font-size: 14px; line-height: 23px; "&gt;&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; font-size: 14px; line-height: 23px; "&gt;　　科比真的是个可怕的家伙。他的可怕不在于天赋，而在于极其强烈的好胜心，和由之驱生的刻苦努力。一般情况下，一个已经30岁的、拥有数枚总冠军戒指和上亿美元身家的、早已功成名就的超级巨星，是不会再在基本技术层面上痛下苦功的。如果是安东尼-沃克，一定是把所有钱吃喝嘌赌挥霍一空，再也不管什么篮球；如果是肖恩-坎普，一定是买下成吨的大麻和烈酒，顺便给自己超过两位数的私生子女购买新的玩具；如果是麦迪，一定是隔三岔五地感冒头痛，再象征性地在场上扔一点三分，表示老子其实还是想好好打球的。&lt;/p&gt;&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; font-size: 14px; line-height: 23px; "&gt;　　科比的做法和这些人都不同。他在这个夏天好好休养了身体，又抽空找奥拉朱旺补课，苦练低位和篮下脚步。然后他就完全变了一个人。开季后，所有人都看到科比发疯了似地在低位要球、靠打、转身、后仰、跳投，除了迈克尔-乔丹，联盟历史上再没有第二个后卫如此频繁地利用低位单打取分。&lt;/p&gt;&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; font-size: 14px; line-height: 23px; "&gt;　　截止11月24日，NBA.COM的Hotspots上，清楚地显示科比本赛季在左右两侧的低位45度总共出手64球，占总出手次数的20.8%！如果你不明白这意味着什么，那么再来看看下面的几组数据：德怀特-霍华德在同样区域出手6次，占总出手次数的4.7%；勒布朗-詹姆斯在同样区域出手15次，占总出手次数的5.7%；德维恩-韦德在同样区域出手32次，占总出手次数的11.8%；凯文-加内特在同样区域出手26次，占总出手次数的15.2%；蒂姆-邓肯在同样区域出手32次，占总出手次数的27.6%。&lt;/p&gt;&lt;p style="margin-top: 15px; margin-right: 0px; margin-bottom: 15px; margin-left: 0px; padding-top: 0px; padding-right: 0px; padding-bottom: 0px; padding-left: 0px; border-top-width: 0px; border-right-width: 0px; border-bottom-width: 0px; border-left-width: 0px; border-style: initial; border-color: initial; font-size: 14px; line-height: 23px; "&gt;　　看到了么？科比低位单打的比例，不但远远高出其他后卫和锋卫摇摆人，甚至超过全明星级别的内线，几乎要向蒂姆-邓肯看齐。更重要的是，这种进攻方式被证明是极其有效的，尤其在右侧低位45度，科比的投篮命中率高达52.8%，既保存了大量体力，规避了受伤风险，还能提供强力的杀伤，篮球上帝的看家本领果然妙用无穷。&lt;/p&gt;&lt;/span&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/6602562833022174122/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/11/kobe.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6602562833022174122'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6602562833022174122'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/11/kobe.html' title='Kobe'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8031921299399965487</id><published>2009-11-27T20:58:00.000-06:00</published><updated>2009-11-27T21:03:24.766-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Be a winner</title><content type='html'>&lt;span class="Apple-style-span"   style="font-family:Arial, sans-serif;font-size:100%;"&gt;&lt;span class="Apple-style-span" style="font-size: 13px; white-space: pre-wrap;"&gt;&lt;div&gt;英语有两个词造的很好，winner和loser。winner: One that wins, especially a victor in sports or a notably successful person. loser: One that fails consistently, especially a person with bad luck or poor skills. 汉语对于后者并没有准确的翻译。原因未知。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;在美剧里面，尽管不想中国的电视剧一般的脸谱化，但还是可以把人基本上分做这两种。对于前者的描绘，实际上并不是戏剧世界里时常出没的天才们，而是那些对于某一个事物或者是目标执着向前的人，比如彻夜实验的Zack，废寝忘食的Olivia，寻找真相的lightman以及他的同事们……最直接的话语，莫过于刚刚看完的一集bones里面Brandon所说的"keep practice"。可以认为它们都是在进行无形的意识形态灌输。但我更倾向于把它们看做对于某种普世价值观的认同：业精于勤。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;没有人会希望成为一个loser。可细究起来，失败的原因无非是因为坏运气或者烂能力。谋事在人，成事在天。那么，如果没有做好前半句，后面无论如何期待，最多是个狗屎运而已了。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;最近一直在纠结于随机过程。我的这个学期，按逻辑来讲，远算不上紧张。当然，熟悉环境、改正坏毛病、适应学习方法、适应不同口音、适应不同速度，以及最为重要的，为自己本科时对于时间的浪费无度而还债——如果把这些项目统统计入的话，那我的这个学期还是当真十分忙碌的。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;好在最近好像找到了一些正确的节奏和感觉。我希望这些好的东西，都可以通过我的不断努力，不断自我暗示而增强。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;而这篇日志，也是我的自我暗示:)&lt;/div&gt;&lt;/span&gt;&lt;/span&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8031921299399965487/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/11/be-winner.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8031921299399965487'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8031921299399965487'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/11/be-winner.html' title='Be a winner'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-499088856598722038</id><published>2009-11-19T16:23:00.000-06:00</published><updated>2009-12-02T13:53:59.702-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>paying debts</title><content type='html'>&lt;div&gt;&lt;span class="Apple-style-span"  style="font-size:medium;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"   style="font-family:Simsun;color:#666666;"&gt;&lt;span class="Apple-style-span" style="line-height: 25px; -webkit-border-horizontal-spacing: 2px; -webkit-border-vertical-spacing: 2px; "&gt;&lt;span class="Apple-style-span"  style="font-size:medium;"&gt;情圣迄今为止说过最让我认同的话，就是“现在好好学吧，就当是为我们大学无所顾忌荒诞度日的还债了”。这样的过程在绝大多数的时间里，是一件令人沮丧的事情。发觉自己对于很多默认了解的知识一无所知，然后翻箱倒柜的查找。但平心静气思考，毕竟，现在每天的自己都比前一天充实了一点，哪怕只有一点点。还是一件挺令人鼓舞的事情。&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"   style="font-family:Simsun;color:#666666;"&gt;&lt;span class="Apple-style-span"  style=" line-height: 25px; -webkit-border-horizontal-spacing: 2px; -webkit-border-vertical-spacing: 2px;font-size:medium;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"   style="font-family:Simsun;color:#666666;"&gt;&lt;span class="Apple-style-span"  style=" line-height: 25px; -webkit-border-horizontal-spacing: 2px; -webkit-border-vertical-spacing: 2px;font-size:medium;"&gt;准备从家里寄过来的书目。随时更新~&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"   style="font-family:Simsun;color:#666666;"&gt;&lt;span class="Apple-style-span"  style=" line-height: 25px; -webkit-border-horizontal-spacing: 2px; -webkit-border-vertical-spacing: 2px;font-size:medium;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"   style="font-family:Simsun;color:#666666;"&gt;&lt;span class="Apple-style-span"  style=" line-height: 25px; -webkit-border-horizontal-spacing: 2px; -webkit-border-vertical-spacing: 2px;font-size:medium;"&gt;数理方程&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"   style="font-family:Simsun;color:#666666;"&gt;&lt;span class="Apple-style-span"  style=" line-height: 25px; -webkit-border-horizontal-spacing: 2px; -webkit-border-vertical-spacing: 2px;font-size:medium;"&gt;复变函数&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"   style="font-family:Simsun;color:#666666;"&gt;&lt;span class="Apple-style-span" style="line-height: 25px; -webkit-border-horizontal-spacing: 2px; -webkit-border-vertical-spacing: 2px;"&gt;Java编程思想&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"   style="font-family:Simsun;color:#666666;"&gt;&lt;span class="Apple-style-span" style="line-height: 25px; -webkit-border-horizontal-spacing: 2px; -webkit-border-vertical-spacing: 2px;"&gt;Wireless communications: principles and practice &lt;span class="Apple-style-span" style="white-space: pre;"&gt;(&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span class="Apple-style-span"   style="font-family:Simsun;color:#666666;"&gt;&lt;span class="Apple-style-span" style="line-height: 25px; -webkit-border-horizontal-spacing: 2px; -webkit-border-vertical-spacing: 2px;"&gt;Theodore S. Rappaport)&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"   style="font-family:Simsun;color:#666666;"&gt;&lt;span class="Apple-style-span" style="line-height: 25px; -webkit-border-horizontal-spacing: 2px; -webkit-border-vertical-spacing: 2px;"&gt;代码大全&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"   style="font-family:Simsun;color:#666666;"&gt;&lt;span class="Apple-style-span" style="line-height: 25px; -webkit-border-horizontal-spacing: 2px; -webkit-border-vertical-spacing: 2px; "&gt;&lt;br /&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span"   style="font-family:Simsun;color:#666666;"&gt;&lt;span class="Apple-style-span" style="line-height: 25px; -webkit-border-horizontal-spacing: 2px; -webkit-border-vertical-spacing: 2px;"&gt;&lt;div&gt;---------------------&lt;/div&gt;&lt;div&gt;收寄地： 中国&lt;/div&gt;&lt;div&gt;寄达地： 美国&lt;/div&gt;&lt;div&gt;邮件种类： 水陆路包裹&lt;/div&gt;&lt;div&gt;包裹总重量： 5 千克&lt;/div&gt;&lt;div&gt;基本资费： 163.50 元(人民币)&lt;/div&gt;&lt;div&gt;包裹总重量： 10 千克&lt;/div&gt;&lt;div&gt;基本资费： 263.50 元(人民币)&lt;/div&gt;&lt;div&gt;包裹总重量： 15 千克&lt;/div&gt;&lt;div&gt;基本资费： 363.50 元(人民币)&lt;/div&gt;&lt;/span&gt;&lt;/span&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/499088856598722038/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/11/paying-debts.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/499088856598722038'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/499088856598722038'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/11/paying-debts.html' title='paying debts'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5764005766994227898</id><published>2009-10-10T22:54:00.000-05:00</published><updated>2009-10-18T10:18:06.349-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>silly persons</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;“我不想教育你，不爱看别看，所以，请你也别来教育我。&lt;/div&gt;&lt;div&gt;&lt;div&gt;                                                        ——马日拉”&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;这句话用来形容我现在生活中很多时候的心情分外恰当。找到一个能在思想上有所交流的人，是件困难的事情。所以我从来不奢望这样的事情可以经常发生。更多的时候，并不是我不想去毫无保留的分享所有念头，而仅仅是是因为如果分享注定导致争论，那就没有必要去开启这样的谈话。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;在美国这边，和国内差别较大的一件事情就是，每天可以遇见各色人种。不是指肤色，而是指思想。并且更加奇怪的是，很多人都在试图去说服别人。于是，对我而言，就到了这样的一个尴尬的处境：一方面，植根于心底的普世价值，是不可能改变的，那么当遇到异于此的观点，就会感觉很不舒服；另一方面，总会有这样的碎碎念，辩论吧，没这心力，出于尊重还不好骂，听着还觉得傻逼。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;还是马日拉老师的这句话“我不想教育你，所以，请你也别来教育我”。&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5764005766994227898/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/10/blog-post.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5764005766994227898'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5764005766994227898'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/10/blog-post.html' title='silly persons'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8249283705897337428</id><published>2009-10-10T18:25:00.000-05:00</published><updated>2009-10-10T18:29:36.515-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>some thoughts in my mind</title><content type='html'>I want to be a professor of HIT some day:)&lt;br /&gt;I want to graduate from here within three years~&lt;br /&gt;I want to surpass the people surrounding me, again</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8249283705897337428/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/10/some-thoughts-in-my-mind.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8249283705897337428'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8249283705897337428'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/10/some-thoughts-in-my-mind.html' title='some thoughts in my mind'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-294166729006314645</id><published>2009-10-09T09:10:00.000-05:00</published><updated>2009-10-09T09:14:36.756-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>touching songs</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;梁静茹，陈奕迅的歌曲，切不可以在如黄昏的清晨肆意沉浸。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;偶尔，会很想amoon。做很多幼稚的假设。而我们能交谈的内容，似乎也只剩下，好久不见。&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/294166729006314645/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/10/touching-songs.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/294166729006314645'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/294166729006314645'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/10/touching-songs.html' title='touching songs'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2795477055418588722</id><published>2009-09-25T18:16:00.000-05:00</published><updated>2009-09-25T18:23:44.761-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Self-control</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;我不想让这样一个词语，成为我永恒的一个论题。但不能否认，我总是会在一些小事上，在这里出现很多问题。譬如说，前一天熬夜看书，第二天白天两门课，中间两个小时的间歇时间我还查阅了近三个月的某本学术期刊，并且下载了两个很不错的工具包，然后呢，晚上想，放松一下吧。于是，实况足球+电视剧，就能耗到零点了。又譬如，上午上课，下午无事，回到宿舍，睡个午觉吧。心里想，一个小时，定个闹钟。结果一觉睡到天黑，并且搞得晚上失眠。坐卧不宁。&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;像是在写检讨。但这些的确都是恼人并且傻逼的错误。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;我看得到自己的优点。缺点同样明显。现在我可以比以往任何时候都更加明显的感觉到压力、感觉到环境的优越，以及感觉到自己的不足。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;博客是一个用来鼓励自己的地方。检讨先。&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2795477055418588722/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/09/self-control.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2795477055418588722'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2795477055418588722'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/09/self-control.html' title='Self-control'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7186622776377106299</id><published>2009-09-22T20:00:00.001-05:00</published><updated>2009-09-22T20:05:11.452-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>sth. that I have to obey</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1. 每周的文献，每周按时消化、摘抄；&lt;/div&gt;&lt;div&gt;2. 每节课后务必整理笔记；&lt;/div&gt;&lt;div&gt;3. 作业、项目，一律赶早不赶晚；&lt;/div&gt;&lt;div&gt;4. 隔离reader，隔离msn，隔离校内；&lt;/div&gt;&lt;div&gt;5. 每天最多看一集电视剧......&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7186622776377106299/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/09/sth-that-i-have-to-obey.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7186622776377106299'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7186622776377106299'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/09/sth-that-i-have-to-obey.html' title='sth. that I have to obey'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-626856632764088668</id><published>2009-09-16T23:56:00.000-05:00</published><updated>2009-09-17T00:00:07.932-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Computer, Coffee Maker, Audio-Technica</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;有了自己的房间，有了柔软的大床:)有了大把可以自由安排的时间。还有了一台性能剽悍的电脑，一个小巧的咖啡机，以及从国内带过来的大耳机。感觉生活一下柔软了:)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;该做些以前一直在想，而甚至没有时间开始的事情。&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/626856632764088668/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/09/computer-coffee-maker-audio-technica.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/626856632764088668'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/626856632764088668'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/09/computer-coffee-maker-audio-technica.html' title='Computer, Coffee Maker, Audio-Technica'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6767432195101101609</id><published>2009-09-14T23:45:00.000-05:00</published><updated>2009-09-14T23:47:20.826-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>7 Thoughts That Are Bad For You</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;From http://www.livescience.com/&lt;/div&gt;By Jeanna Bryner, LiveScience Senior Writer&lt;br /&gt;posted: 12 September 2009 10:54 am ET&lt;br /&gt;-------------------------------------&lt;br /&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;Our personalities do more for us than determine our social circles. Temperament can impact a person's physical health.&lt;br /&gt;&lt;br /&gt;"The idea that behavior or personality traits can influence health is one that's been around for a long time. We're just now getting a handle on to what extent they do," said Stephen Boyle of Duke University Medical Center in North Carolina.&lt;br /&gt;&lt;br /&gt;From those with a chill demeanor to the completely frazzled types, mental factors are ultimately tied to physical health. And while a highly neurotic person might deteriorate more quickly than others, not every character trait will kill you. Some might even boost lifetimes.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;No. 7: Cynicism&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Cynics who tend to be suspicious and mistrustful of others, a character trait that scientists refer to as hostility, may have an increased likelihood of developing heart disease. "These aren't necessarily hot-headed people, but people who are more likely to read into people's behavior as some hostile motive," Boyle said during a telephone interview.&lt;br /&gt;&lt;br /&gt;In a study of more than 300 Vietnam veterans who were healthy at the study start, Boyle found that those who scored high on measures of hostility were about 25 percent more likely to develop heart disease.&lt;br /&gt;&lt;br /&gt;Boyle and his colleagues think that hostile individuals might experience more stress, which can cause spikes in an immune-system protein called C3 that has been linked with various diseases, including diabetes. In fact, the participants with higher scores on hostility showed an increase in these proteins while the non-hostile men showed no such increase.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;No. 6: Lack of meaning&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;If you lack a sense of purpose, your stay on Earth could be truncated. A study involving more than 1,200 elderly participants who didn't have dementia at the study's start found that those who indicated having a high purpose in life were about half as likely to die over the study period, which lasted up to five years. The results, published in the June 15 issue of the journal Psychosomatic Medicine, held regardless of a person's age, sex, education and race, along with level of depression and neuroticism.&lt;br /&gt;&lt;br /&gt;"Persons with high purpose readily derive meaning from and make sense of the events of their lives, and likely engage in behaviors and activities that they deem important," said study researcher Patricia Boyle of the Rush Alzheimer's Disease Center in Chicago.&lt;br /&gt;&lt;br /&gt;Some other research has suggested that people with a higher sense of purpose may have different levels of stress hormones, better heart health or improved immune systems, though more research is needed to firm up any of these biological mechanisms, she said.&lt;br /&gt;&lt;br /&gt;The opposite also holds: "The findings from our study suggested that people who no longer set and work actively toward goals or enjoy their day-to-day activities (how they spend their time) are those with greater mortality risk," Boyle told LiveScience.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;No. 5: Fretting&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;People who are highly neurotic — constantly worried and anxious, and prone to depression — die sooner on average than their chill counterparts. And a recently reported study of nearly 1,800 men followed over a 30-year period suggests that's partly because neurotics are also more likely to smoke. Perhaps having a cigarette eases anxiety, said study researcher Daniel Mroczek of Purdue University in Indiana, adding that such a short-term payoff might not be worth it if it kills you down the line.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;No. 4: Lack of self-control&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Late for appointments? Can't keep your desk organized? No self-control? These seeming benign qualities could take a toll on your health.&lt;br /&gt;&lt;br /&gt;A review of more than 20 studies and nearly 9,000 participants revealed people who are conscientious — organized, self-disciplined, as opposed to impulsive — live two to four years longer than others. Study researcher Howard S. Friedman of the University of California, Riverside suspects the boost in lifetime can be attributed partly to the fact that highly conscientious individuals are less likely to smoke or drink to excess, and live more stable and less stressful lives. The study is detailed in a 2008 issue of the journal Health Psychology.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;No. 3: Anxiety&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;The jitters can put a strain on your noggin, research suggests. Compared with the highly frazzled, Individuals with a mellow demeanor who are outgoing may be less likely to develop dementia, which can be caused by Alzheimer's disease and other illnesses. The claim is based on a study that followed more than 500 elderly individuals for five years. Among the outgoing extroverts, dementia risk was 50 percent lower for participants who were calm compared with those who were prone to distress.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;No. 2: Gloom and doom&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;The gloomy, inhibited person is not just at a disadvantage socially, but also physically.&lt;br /&gt;&lt;br /&gt;A preliminary study of more than 180 patients suffering from peripheral arterial disease (plaque buildup in the arteries) showed participants with so-called type D, or distressed, personality, had an increased odds of dying sooner than other people. Type-D people are more likely to experience negative emotions while at the same time hold in their feelings.&lt;br /&gt;&lt;br /&gt;The researchers, who detail their work in the August issue of the journal Archives of Surgery, suggest the personality type is linked with the body's immune system as well as stress response system.&lt;br /&gt;&lt;br /&gt;&lt;b&gt;No. 1: Stress&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;Whatever you do, don't let this list worry you! Research is showing that prolonged stress can be deadly, and if it doesn't do you in, workplace stress can increase your chances of heart disease, flu virus, metabolic syndrome and having high blood pressure.&lt;br /&gt;&lt;br /&gt;A study of nearly 700 Israeli workers found that those who experienced job burnout (when work stress becomes unmanageable) were nearly twice as likely to develop type 2 diabetes, in which a person's body becomes resistant to the sugar-regulating hormone called insulin.&lt;br /&gt;&lt;br /&gt;And while a job promotion might boost your income, it also stresses you out. British researchers recently found that when people get promoted, they suffer on average about 10 percent more mental strain and are less likely to find time to go to the doctor.&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/6767432195101101609/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/09/7-thoughts-that-are-bad-for-you.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6767432195101101609'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6767432195101101609'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/09/7-thoughts-that-are-bad-for-you.html' title='7 Thoughts That Are Bad For You'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5708685804587246912</id><published>2009-09-06T13:27:00.000-05:00</published><updated>2009-09-06T13:36:53.715-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>Brian Evanse's advices</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;前几天和brian聊了很多，不过因为忙乱，很多事情没能及时记录，所以，必然会有些已经淡忘。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1、课程不用紧盯EE的来选，有关音乐与心理感受相关的课程会出现在Psychology的课表里，有关模式识别、机器学习和数据挖掘的课程会出现在CS的课表里，有关作曲、节奏等规律的课程会出现在Music的课表里，有关***的课程会出现在ME的课表里。所以，我需要做的，是综合考虑所有的课程，然后进行选择。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;2、需要参加一些研讨班。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;3、保持与若干个教授的紧密接触。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;4、不断总结自己的研究方向，以及不断做出努力来进行推进。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;5、明年二月份，会是一个很重要的月份。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;到美国已经将近一个月了。仔细观察一下周围，发现在这里，我已经获得了比国内多的多的各种资源。而更为重要的是，在这里我可以全身心的学习，充实自己。当然，还有锻炼身体，以及连续观看自己喜爱的电视剧和视频短片^_^这种完全的自我支配，令人着迷。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;的确，有些时候还是会比较混乱。譬如说，经常为了屁大点儿的一个widget整到凌晨两点多。但我也相信，自己对于自己的控制会越来越好。然后，希望能快点看到个不一样的自己。&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5708685804587246912/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/09/brian-evanses-advices.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5708685804587246912'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5708685804587246912'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/09/brian-evanses-advices.html' title='Brian Evanse&apos;s advices'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7341424760050089720</id><published>2009-08-28T16:35:00.000-05:00</published><updated>2009-08-28T16:40:29.985-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Oakland: How to Succeed in Life (by Andrew Carnegie)</title><content type='html'>Everybody wants to preach to the young, and tell them to be good and they will be happy. I shall not enter far upon that field, but confine myself to presenting from a business man's standpoint of view, a few rules, which, I believe, lie at the root of business success.&lt;br /&gt;&lt;br /&gt;First--Never enter a bar-room. Do not drink liquor as a beverage. I will not paint the evil of drunkenness, or the moral crime; but I suggest to you that it is low and common to enter a bar-room, unworthy of any self-respecting man, and sure to fasten upon you a taint which will operate to your disadvantage in life, whether you ever become a drunkard or not.&lt;br /&gt;&lt;br /&gt;Second--I wish young men would not use tobacco--not that it is morally wrong, except in so far as it is used in excess and injures health, which the medical faculty declares it does. But the use of tobacco requires young men to withdraw themselves from the society of women to indulge the habit. I think the absence of women from any assembly tends to lower the tone of that assembly. The habit of smoking tends to carry young men into the society of men whom it is not desirable that they should choose as their intimate associates. The practice of chewing tobacco was once common. Now it is considered offensive. I believe the race is soon to take another step forward, and that the coming man is to consider smoking as offensive as chewing was formally considered. As it is practically abandoned now, so I believe smoking will be.&lt;br /&gt;&lt;br /&gt;Third--Having entered upon work, continue in that line of work. Fight it out on that line (except in extreme cases), for it matters little what avenue a young man finds first. Success can be attained in any branch of human labor. There is always room at the top in every pursuit. Concentrate all your thought and energy upon the performance of your duties. Put all your eggs into one basket and then watch that basket, do not scatter your shot. The man who is director in a half dozen railroads and three or four manufacturing companies, or who tries at one and the same time to work a farm, a factory, a line of street cars, a political party and a store, rarely amounts to much. He may be concerned in the management of more than one business enterprise, but they should all be of the one kind, which he understands. The great successes of life are made by concentration.&lt;br /&gt;&lt;br /&gt;Fourth--Do not think a man has done his full duty when he has performed the work assigned him. A man will never rise if he does only this. Promotion comes from exceptional work. A man must discover where his employer's interests can be served beyond the range of the special work allotted to him; and whenever he sees his employer's interests suffer, or wherever the latter's interests can be promoted, tell him so. Differ from your employers upon what you think his mistakes. You will never make much of a success if you do not learn the needs and opportunities of your own branch much better than your employer can possibly do. You have been told to "obey orders if you break owners." Do no such foolish thing. If your employer starts upon a course which you think will prove injurious, tell him so, protest, give your reasons, and stand to them unless convinced you are wrong. It is the young man who does this, that capital wants for a partner or for a son-in-law.&lt;br /&gt;&lt;br /&gt;Fifth--Whatever your wages are, save a little. Live within your means. The heads of stores, farms, banks, lawyers' offices, physicians' offices, insurance companies, mills and factories are not seeking capital; they are seeking brains and business habits. The man who saves a little from his income has given the surest indication of the qualities which every employer is seeking for.&lt;br /&gt;&lt;br /&gt;Sixth--Never speculate. Never buy or sell grain or stocks upon a margin. If you have savings, invest them in solid securities, lands or property. The man who gambles upon the exchanges is in the condition of the man who gambles at the gaming table. He rarely, if ever, makes a permanent success. His judgment goes; his faculties are snapped; and his end, as a rule, is nervous prostration after an unworthy and useless life.&lt;br /&gt;&lt;br /&gt;Seventh--If you ever enter business for yourself, never indorse for others. It is dishonest. All your resources and all your credit are the sacred property of the men who have trusted you; and until you have surplus cash and owe no man, it is dishonest to give your name as an indorser to others. Give the cash you can spare, if you wish, to help a friend. Your name is too sacred to give.&lt;br /&gt;&lt;br /&gt;Do not make riches, but usefulness, your first aim; and let your chief pride be that your daily occupation is in the line of progress and development; that your work, in whatever capacity it may be, is useful work, honestly conducted, and as such ennobling to your life.&lt;br /&gt;&lt;br /&gt;To sum up, do not drink, do not smoke, do not indorse, do not speculate. Concentrate, perform more than your prescribed duties; be strictly honest in word and deed. And may all who read these words be just as happy and prosperous and long lived as I wish them all to be. And let this great fact always cheer them: It is impossible for any one to be cheated out of an honorable career unless he cheats himself.</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7341424760050089720/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/08/oakland-how-to-succeed-in-life-by.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7341424760050089720'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7341424760050089720'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/08/oakland-how-to-succeed-in-life-by.html' title='Oakland: How to Succeed in Life (by Andrew Carnegie)'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2724275842228796499</id><published>2009-08-18T11:33:00.000-05:00</published><updated>2011-02-28T14:21:26.808-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>APML</title><content type='html'>now I am trying to type my idea in English, especially in school's computers which have no chinese input methods at all:)&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;---------------------------------------------------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;there is a new interesting concept named APML (Attention Profiling Make-up Language), which can help user find more precise information they want.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;here are some relevant webpage about the topic.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;http://www.masternewmedia.org/online_marketing&lt;/div&gt;&lt;div&gt;/attention-profiling-apml&lt;/div&gt;&lt;div&gt;/apml-beginners-guide-attention-profile-20071113.htm&lt;/div&gt;&lt;div&gt;http://www.apml.org/&lt;/div&gt;&lt;div&gt;http://cleverclogs.org/2007/10/basics-of-atten.html&lt;/div&gt;&lt;div&gt;http://eliasbizannes.com/blog/&lt;/div&gt;&lt;div&gt;2007/10/explaining-apml-what-it-is-why-you-want-it/&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2724275842228796499/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/08/apml.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2724275842228796499'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2724275842228796499'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/08/apml.html' title='APML'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1567459836218108043</id><published>2009-08-15T15:42:00.000-05:00</published><updated>2009-08-15T15:48:04.354-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>……</title><content type='html'>到美国了。有好的，也有不好的。&lt;br /&gt;梦到了哭泣的自己&lt;br /&gt;小星星，还有小孙老师&lt;br /&gt;以及许许多多破碎而凌乱的画面&lt;br /&gt;&lt;br /&gt;忘记是那本书中说过&lt;br /&gt;梦中哭泣的人，无非是隐藏了更深的脆弱</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1567459836218108043/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/08/blog-post.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1567459836218108043'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1567459836218108043'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/08/blog-post.html' title='……'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-9048128367123876121</id><published>2009-05-11T00:59:00.000-05:00</published><updated>2009-05-11T01:05:35.835-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Great Huston Rockets!</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Beat LA~&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/9048128367123876121/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/05/great-huston-rocket.html#comment-form' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/9048128367123876121'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/9048128367123876121'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/05/great-huston-rocket.html' title='Great Huston Rockets!'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7846345917782796719</id><published>2009-05-10T20:16:00.000-05:00</published><updated>2009-05-10T20:22:27.158-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Work'/><title type='text'>Are You Really an Entrepreneur?</title><content type='html'>&lt;div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;(from readwriteweb.com)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1. &lt;span class="Apple-style-span" style="font-weight: bold;"&gt;You're always looking for opportunities.&lt;/span&gt; This is almost the definition of an entrepreneur. Every pain point is an opportunity.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;2. &lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Are you prepared to work long hours, every day, for an indefinite period of time?&lt;/span&gt; Ahem, let's dispel illusions. Put down "The 4-Hour Workweek"; it is a myth that the author spun to sell books (so that he could work 4 hours a week).&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;3. &lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Good Health.&lt;/span&gt; You cannot answer "Yes" to item #2 unless you are blessed with good health and the discipline to maintain it in tough times.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;4. &lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Do you have a unique service or product?&lt;/span&gt; Most entrepreneurs have a pocketful of ideas, many of them viable. But they suffer from the "kid in a candy store" dilemma, not knowing which to choose. The trick is choosing the one that really is a winner and having the discipline (see item #9) to ignore all the others.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;5.&lt;span class="Apple-style-span" style="font-weight: bold;"&gt; Are you willing to make short-term sacrifices for long-term success?&lt;/span&gt; There will be long periods of time when everyone around you questions your sanity, and on all normal metrics (hours worked and stress endured vs. material rewards gained), they would be right.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;6.&lt;span class="Apple-style-span" style="font-weight: bold;"&gt; Honesty and integrity&lt;/span&gt;. You often have to be able to work with people without the protection of legal contracts. It is the essence of moving fast, and you often simply won't be able to afford a lawyer. So, you have to work with people who have honesty and integrity. It is hard to do that unless you have honesty and integrity yourself.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;7. &lt;span class="Apple-style-span" style="font-weight: bold;"&gt;You're dreaming miles ahead while focused on what you're doing right now.&lt;/span&gt; The entrepreneur is an odd mix: part dreamer, part brutal realist and pragmatist. You should focus first on today and, secondly, on the big picture, and ignore the rest. Today is about the immediate stuff that you have to get done to stay in business, to deliver projects to clients, to collect cash, and so on. The big picture is about looking at what the world might look like 10 years from now and then building towards that. We cannot know what will happen next week, month, or year. The medium term is totally unknown. However, many long-term trends are fairly clear, even though the timetable is unknown.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;8. &lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Are you self-confident? &lt;/span&gt;You will almost certainly be going against odds that would make most people run away.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;9. &lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Discipline.&lt;/span&gt; This relates to many of the other traits mentioned in this checklist. You will need discipline to maintain your health (item #2), so that you can work hard (item #3), so that you can focus on the one product or service you have chosen and ignore all temptations (item #4).&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;10. &lt;span class="Apple-style-span" style="font-weight: bold;"&gt;You're prepared to say, "I don't know, but I'll figure it out."&lt;/span&gt; Entrepreneurs have to be generalists. They may know one thing very, very well. But they also have to know enough about almost everything else to occasionally do those things themselves, and have the judgment to eventually hire the right people to do those things.&lt;/div&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7846345917782796719/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/05/are-you-really-entrepreneur.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7846345917782796719'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7846345917782796719'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/05/are-you-really-entrepreneur.html' title='Are You Really an Entrepreneur?'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8747154814095228707</id><published>2009-05-05T04:30:00.001-05:00</published><updated>2009-05-05T04:32:35.658-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Network'/><title type='text'>Good things about journalism</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;From the New York Times&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-family: Arial; font-size: 14px; line-height: 21px;"&gt;1. A really strong desire to find the truth, wherever it may lurk;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-family: Arial; font-size: 14px; line-height: 21px;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-family: Arial; font-size: 14px; line-height: 21px;"&gt;2. An assumption that everyone knows more than you, and that your job is to find, cultivate, question, and listen to your sources, and then come to a view;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-family: Arial; font-size: 14px; line-height: 21px;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-family: Arial; font-size: 14px; line-height: 21px;"&gt;3. An inclination not to take anything at face value, because everyone has a point of view, and those points of view are usually driven by self-interest;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-family: Arial; font-size: 14px; line-height: 21px;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-family: Arial; font-size: 14px; line-height: 21px;"&gt;4. A resolve not to let commercial interests (in other words, advertisers) influence your search for the truth.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;文章探讨的是新闻工作者真正的意义。不过，写出的却似乎是一个放之各个行业皆准的原则。&lt;/div&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8747154814095228707/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/05/good-things-about-journalism.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8747154814095228707'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8747154814095228707'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/05/good-things-about-journalism.html' title='Good things about journalism'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8948195707413897984</id><published>2009-05-05T03:49:00.000-05:00</published><updated>2009-05-05T04:22:01.604-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>No watching when walking. When watching no walking</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;这是华山上最为常见的一个标语。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;在忙碌过后的一个急刹车，用一种近乎自虐的方式。体能还没有从接连的熬夜里恢复过来，就选择了攀爬这座以险峻闻名于世西岳，回想起来还真是佩服自己。一趟华山，需要总结的东西很多。譬如，应当结伴而行，否则很有可能半途而废；应当下午开始爬山，而不是像华阴镇上很多小旅店招揽顾客宣称的“夜爬华山”，否则会错过许多奇美的景致；上山沿盘山道而行，下山坐索道，是个符合体力曲线的好方法；山顶旅馆贵的夸张，租个帐篷若干好友连聊带休息，既经济划算而且别有趣味；早晨登顶，掐算好时间，完全没有必要租什么军大衣，否则就是像我一样，纯粹变成了考验自己体力的负重训练；等等……&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;千丈崖也好、天梯也好，还是临空的栈道也好。考验体力，更考验毅力。路上偶尔可以遇到有人坐在石阶上咒骂“他妈的，老子再也不来了”，或者是“不爬了，老娘把这辈子的山都爬完了”……而我们同行的四个人，就像是大多数人一样，互相鼓励，开着玩笑，然后一路向前。最搞笑的是猪，这哥们儿对于时间很是敏感：几点了，爬了多久，需要再多久到那个里程。途中租我们帐篷的小哥说话总是不靠谱，问他再爬多久到东峰，他说20分钟，结果我们爬了40分钟；问他几点日出，他说六点半，结果幸亏没有信他，我们五点半看到了红彤彤的太阳。还有一次，问他再多少分钟能到下一个洗手间，他说两分钟。然后猪说，“好，我就掐两分钟的时间，时间一到我马上就尿……”……挺好的。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;路上的八卦也不错。猪和志，一眼就能看出有夫妻相，可是两个人都装傻。于是，我只能从对话中窥探某些线索。譬如，志说，“爬山爬的，我的大腿小腿都不是我的了”。于是，猪说，“那就都是我的”。又譬如，志问猪，“你背个军大衣不累么？”猪说，“没关系。再多的衣服也能背！”志说，“那我就把衣服都脱给你背。”猪大喜，说，“@#￥%&amp;amp;。”然后就被志晾到一边，半天没有搭理^_^&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;有关标题的这个警示语，本想写篇励志文章的。结果发现明显跑题了。写不来那种小故事大道理的文章。不过感触很深。景色很美，但看景走路，很容易就会掉入深到恐怖的山涧。于是，两者只能择其一——视体力而定，视心情而定，视目的而定。其实，不只是爬华山。其实做什么事情都是这样的。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8948195707413897984/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html#comment-form' title='8 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8948195707413897984'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8948195707413897984'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html' title='No watching when walking. When watching no walking'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>8</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7064204018023034252</id><published>2009-03-17T02:57:00.000-05:00</published><updated>2009-03-17T03:22:31.572-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>Belief in sb or sw</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;转一篇好朋友兼小朋友的日志~:)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;----------------------------------------------&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;从去年的AO开始，我渐渐的习惯了你的失落。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;直到现在。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;突然发现原来喜欢一个人可以喜欢的这么深。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;但是，因为喜欢的深，所以伤的深。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;我还记得，去年温网，守着电视机到凌晨五点，但是你输掉了比赛，于是我一夜没睡，哭了。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;我还记得，去年你连输几站，世界第一岌岌可危，我经常上课走神，生怕下一秒你就不再是世界第一。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;我还记得，去年奥运会的时候，我在英国，飞奔到酒吧里看电视，就为了看看当旗手的你。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;我还记得，你输掉了奥运会的单打比赛，向观众席鞠躬，我抱着电脑，大哭。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;我还记得，你和小瓦拿到了双打冠军，那灿烂的金镶玉。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;我还记得，去年美网的决赛，是在一个下雨的清晨。我去上学了，刚出地铁站，老妈打来电话，你赢了。于是我淋着雨蹲在地上哭得毫无形象，把同学吓了一跳。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;我还记得……&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;记得的太多太多，我数不过来。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;今年AO我看见了你的眼泪，心碎的眼泪。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;连着几天，我都失眠了。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;一闭上眼睛，就是你在哭。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;我不是个勇敢的人。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;我不敢给自己背上太多的负担。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;所以，对不起，Roger，我只能和你说再见，再也不见。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;我不后悔，我爱过了痛过了笑过了哭过了，我还有回忆。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;See you, Roger.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Best wishes.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;------------------------------------------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;就好像是《Serenity》里那个先知临终前说的话，no matter what you believe, just believe it.每个人都会有可以让他称之为信仰的东西。或者是一支球队，或者是一个乐队，或者是某个人、某种处事态度、某种生活状态；更持久的，是某个有关于自己的目标。所有这些东西，有时候会混为一谈，模糊而持久的伫立在远方。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;所以，尽管可以难过，也没什么好一直难过下去的。我们都需要一直前行，向着藉由某个人所勾勒出来的自己。&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7064204018023034252/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/03/belief-in-sb-or-sw.html#comment-form' title='6 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7064204018023034252'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7064204018023034252'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/03/belief-in-sb-or-sw.html' title='Belief in sb or sw'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>6</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3360840485865365713</id><published>2009-03-08T20:51:00.000-05:00</published><updated>2009-03-08T21:00:16.717-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>Timetable</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;8:30--12:00     Experiment/ Code debugging&lt;/div&gt;&lt;div&gt;13:30--16:00   Reading references&lt;/div&gt;&lt;div&gt;16:00--18:00   Writing thesis&lt;/div&gt;&lt;div&gt;18:30--21:30    Teaching in NOS&lt;/div&gt;&lt;div&gt;22:00--23:00   Physical Excercises&lt;/div&gt;&lt;div&gt;23:00--23:30   Answering Emails&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3360840485865365713/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/03/timetable.html#comment-form' title='2 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3360840485865365713'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3360840485865365713'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/03/timetable.html' title='Timetable'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>2</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5639985191794038060</id><published>2009-03-04T19:33:00.000-06:00</published><updated>2011-02-28T14:21:26.809-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>The 1st time</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;凡事都有第一次。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;第一次写这样网络应用的代码，一千多行，写了将近半个月。不过总算是吭哧出来了。准备过两天放到google code里面测试一下反应:)&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;# -*- coding: utf-8 -*-&lt;/div&gt;&lt;div&gt;#&lt;/div&gt;&lt;div&gt;# GDnet - A Python interface to online-music recommendation&lt;/div&gt;&lt;div&gt;# Copyright (C) 2008-2009  Wu Qiong&lt;/div&gt;&lt;div&gt;#&lt;/div&gt;&lt;div&gt;# This program is free software; you can redistribute it and/or&lt;/div&gt;&lt;div&gt;#  modify it under the terms of the GNU General Public License&lt;/div&gt;&lt;div&gt;#  as published by the Free Software Foundation; either version &lt;/div&gt;&lt;div&gt;#  2 of the License, or (at your option) any later version.&lt;/div&gt;&lt;div&gt;#&lt;/div&gt;&lt;div&gt;# This program is distributed in the hope that it will be useful,&lt;/div&gt;&lt;div&gt;# but WITHOUT ANY WARRANTY; without even the implied &lt;/div&gt;&lt;div&gt;# warranty of MERCHANTABILITY or FITNESS FOR   &lt;/div&gt;&lt;div&gt;# A PARTICULAR PURPOSE. See the GNU General Public&lt;/div&gt;&lt;div&gt;# License for more details.&lt;/div&gt;&lt;div&gt;#&lt;/div&gt;&lt;div&gt;# You should have received a copy of the GNU General Public&lt;/div&gt;&lt;div&gt;# License along with this program; if not, write to the Free&lt;/div&gt;&lt;div&gt;# Software Foundation, Inc., 59 Temple Place, Suite 330,&lt;/div&gt;&lt;div&gt;# Boston, MA 02111-1307, USA&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;__name__ = 'GDnet'&lt;/div&gt;&lt;div&gt;__version__ = '0.0.1'&lt;/div&gt;&lt;div&gt;__doc__ = 'A Python interface to online-music recommendation'&lt;/div&gt;&lt;div&gt;__author__ = 'Wu Qiong'&lt;/div&gt;&lt;div&gt;__email__ = 'creasywuqiong@gmail.com'&lt;/div&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5639985191794038060/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/03/1st-time.html#comment-form' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5639985191794038060'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5639985191794038060'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/03/1st-time.html' title='The 1st time'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3820551107802023050</id><published>2009-02-28T19:58:00.000-06:00</published><updated>2011-02-28T14:21:26.809-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>Graduation Design</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;一周以来一直在用python做一些网络编程的东西。忽然感觉这是个比C或者Java都要人性化的语言。不需要声明变量，不需要大括号，回行自动缩进，更接近语言形式的交互，丰富的脚本资源……当真一用就马上熟悉了。此外，最近看两本和pyghon有关的书籍时候，更清晰的感觉到，大师的迷人之处就在于，能够把很晦涩的东西用最简练和形象的语句表达出来，没有雕琢的痕迹，也不会故弄玄虚。如果拿这样的学术作风和自己对比，就会很是羞愧难当——当被审稿人质疑文章缺乏学术深度的时候，甚至没有想过去据理力争，第一反应是挑拣背景知识里最复杂最冗长的公式堆砌到文章的恰当位置；更搞的是一个中国的国际会议投稿，审稿意见回来竟然是“英语表达不过关，语言缺乏深度”，我心里想“~!&amp;amp;%￥#@”，然后理所当然的进行文章的“GRE难句化”，写出了让ETS都会自惭形秽的恶心句子，文章倒是顺利的录用了。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;需要反省的事情很多，这算是很重要的一个。之前但凡遇到文科同学，总要心口不一的羡慕一番，“你看，你的学科多好，可以不用实验不用仿真，满嘴跑火车就成”。实际上，无非是想显摆一下自己所从事的这项严谨的事业而已。而细想起来，这种注重实事求是的学科，跑火车也不是什么少见的事情。玩的大一点，就像是韩国的那个Woo Suk Hwang教授，造假造的都快获得诺贝尔奖了。玩的小一点，在各种文献搜索引擎中的中文论文，有很大一部分都是抄的，无非是多个仿真结果而已。前阵子论文中期审核时候，导师还批评我们这帮答辩的，“你们的参考文献怎么都是外文的呢？”——是啊，中文的大部分都是抄的，参考也要参考个原本不是。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;跑题了。毕业论文会写个音乐推荐的软件，有些类似 Itunes Genius，但音频分析的部分更加侧重一些。工作量有一些大，希望能够按时完成吧:) 附件是两个很有效的Python脚本，抓取网站API。具体实现才发觉，土豆或者Amazon的推荐功能实际还是很初级的^_^&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;------------------------------------&lt;br /&gt;&lt;/div&gt;&lt;div&gt;C:\Python25&gt;cd feedparser&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;C:\Python25\feedparser&gt;python setup.py install&lt;/div&gt;&lt;div&gt;running install&lt;/div&gt;&lt;div&gt;running build&lt;/div&gt;&lt;div&gt;running build_py&lt;/div&gt;&lt;div&gt;creating build&lt;/div&gt;&lt;div&gt;creating build\lib&lt;/div&gt;&lt;div&gt;copying feedparser.py -&gt; build\lib&lt;/div&gt;&lt;div&gt;running install_lib&lt;/div&gt;&lt;div&gt;copying build\lib\feedparser.py -&gt; C:\Python25\Lib\site-packages&lt;/div&gt;&lt;div&gt;byte-compiling C:\Python25\Lib\site-packages\feedparser.py to feedparser.pyc&lt;/div&gt;&lt;div&gt;running install_egg_info&lt;/div&gt;&lt;div&gt;Writing C:\Python25\Lib\site-packages\feedparser-4.1-py2.5.egg-info&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;C:\Python25\feedparser&gt;cd..&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;C:\Python25&gt;cd pydelicious-0.5.0&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;C:\Python25\pydelicious-0.5.0&gt;python setup.py install&lt;/div&gt;&lt;div&gt;running install&lt;/div&gt;&lt;div&gt;running build&lt;/div&gt;&lt;div&gt;running build_py&lt;/div&gt;&lt;div&gt;creating build&lt;/div&gt;&lt;div&gt;creating build\lib&lt;/div&gt;&lt;div&gt;copying pydelicious.py -&gt; build\lib&lt;/div&gt;&lt;div&gt;running install_lib&lt;/div&gt;&lt;div&gt;copying build\lib\pydelicious.py -&gt; C:\Python25\Lib\site-packages&lt;/div&gt;&lt;div&gt;byte-compiling C:\Python25\Lib\site-packages\pydelicious.py to pydelicious.pyc&lt;/div&gt;&lt;div&gt;running install_egg_info&lt;/div&gt;&lt;div&gt;Writing C:\Python25\Lib\site-packages\pydelicious-0.5.0-py2.5.egg-info&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;C:\Python25\pydelicious-0.5.0&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/3820551107802023050/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/graduation-design.html#comment-form' title='2 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3820551107802023050'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/3820551107802023050'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/graduation-design.html' title='Graduation Design'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>2</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1719346938952464337</id><published>2009-02-24T09:33:00.001-06:00</published><updated>2009-02-24T09:47:46.218-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>Thank you all~</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;最近看了不少关于自己的评价。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;谢谢正评价~:) 很感谢。我会更加努力，讲义和笔记能派上用场，就是最大的褒奖了~&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;谢谢混和评价:)~ 我知道自己无论到什么时候，都还有方面需要改进。其实现在上课一直是这样，总会去想，“这一点，之前的某个班里并没有讲透彻”。我唯一可以做弥补的，就是倾注更大的热情去回复每一个来往的邮件和信息。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;谢谢负评价~尽管会有怨气，但我始终感谢从小时候到现在的每一个看低我的人。这是一种分外强大的进步动力。只是，如果仅仅因为这种评价而误导了你上课的时间，那倒真的是件很可惜的事情。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;寒假彻底过去。开始专心到自己的工作上了~~&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/1719346938952464337/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/thank-you-all.html#comment-form' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1719346938952464337'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/1719346938952464337'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/thank-you-all.html' title='Thank you all~'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8408324628401512575</id><published>2009-02-23T20:51:00.000-06:00</published><updated>2009-02-23T21:02:24.685-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>Build on, rather than replace, one another.</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;忙活了一上午，忽然很欣喜自己的理解力大增，一本晦涩参考英文书竟然一马平川的看了一半~~~~忽然看到一页，有个十分熟悉的五角星标注着：“应该和BP内核能够优势互补”……咦？怎么之前这本书竟然有人看过？怎么这个人还和我想的一样？怎么会这么有缘？莫非……&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;果然……翻了半天阅读摘抄才发现，这本书去年十月份我断断续续地看过一些。只是由于申请学校加寒假课程，早就半途而废了。白窃喜了一番……&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;切实教训。工作进度是要时刻记录的。&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/8408324628401512575/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/build-on-rather-than-replace-one.html#comment-form' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8408324628401512575'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/8408324628401512575'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/build-on-rather-than-replace-one.html' title='Build on, rather than replace, one another.'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6684625424783897806</id><published>2009-02-22T19:42:00.000-06:00</published><updated>2009-02-22T19:52:04.499-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>bullshit</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;偶然。几分钟录音里的话让我重新认识一个傻逼！真他妈恶心&lt;/div&gt;&lt;div&gt;做人首先应该学会尊重别人，但你不会&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt; &lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/6684625424783897806/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/bullshit.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6684625424783897806'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6684625424783897806'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/bullshit.html' title='bullshit'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6936876341731210510</id><published>2009-02-21T08:43:00.000-06:00</published><updated>2009-02-21T09:38:31.142-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>Winter Classes End</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;昨天结完了最后一个GMAT班，没有任何感觉。回到宿舍蒙头大睡。醒来看到星光灯火，恍惚了半天才知道自己身处的状况。忽然很想念香烟。翻了半天，早就记不得二十多天之前扔到哪里去了。再看看手表，只好做罢。只是有了一种空空的感觉。就好像是刚刚考完高考、GRE，或者刚刚递送走Georgia Institute of Technology的材料一样。习惯了一种生活模式，要么是持续将近一年的复习，要么是持续了数月的申请，要么是这二十几天满负荷的倾囊而出。戛然而止。&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;盘点一下寒假的消耗~&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;念慈庵蜜炼川贝琵琶膏   2.5瓶&lt;/div&gt;&lt;div&gt;念慈庵蜜炼川贝琵琶糖   2盒&lt;br /&gt;&lt;/div&gt;&lt;div&gt;金嗓子喉宝   1.5盒&lt;/div&gt;&lt;div&gt;梨    5个&lt;/div&gt;&lt;div&gt;金喉健喷雾   1瓶&lt;/div&gt;&lt;div&gt;巧克力     若干&lt;/div&gt;&lt;div&gt;袜子       1双&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;最后这个比较诡异，因为在自己印象中，除了头几天我比较欢实的在讲台上蹦跶之外，大部分的时间我都是坐着的。实在是没那个心力像年轻时候一样全程蹦来蹦去了:)竟然这样也会费袜子……&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;寒假的感动很多。绝大部分来源于三个住宿班。男孩子女孩子们，苦中作乐、努力不懈的样子。看到之后，心力暖暖的，感觉无论如何努力的备课以及答疑都是不够的。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;记得一次有个住宿班要连上三节课，结果下午四点下课后，答疑到晚饭时候。吃过饭回到教室休息室，碰到个老教师，他问，“下午去哪里了？”&lt;/div&gt;&lt;div&gt;“答疑一直没动地方。”&lt;/div&gt;&lt;div&gt;“新来的吧？”&lt;/div&gt;&lt;div&gt;“也不新了，都已经……”&lt;/div&gt;&lt;div&gt;“没过三年？”&lt;/div&gt;&lt;div&gt;“嗯……”&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;第二天换了另外一个住宿区，还是我俩。又是三节课。我又是答疑直到晚上上课之前。在回去的车上，他拍着我的肩膀说，“小同志，你‘新’的不轻啊！”——“……”我无言以对。如果这个仅仅是因为“新”的缘故。那我宁愿一直都这样下去。或者，在心地僵硬之前离开这里。将心比心，是我在做任何事情时候最常使用的方法。如果对方本无所谓，那我当然也无所谓，甚至可以束之高阁。但如果都是坦诚相见，又何必藏着掖着呢。老师是人，所以需要足够的时间缓解体力。学生也是人，不仅仅是一个集合名词，而且他们每个人也都面临这人生最重要的考验。所以，能尽力时还是要尽力的~&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;最近校内加了不少学生，给我发回对于上课的反馈竟然是“可爱”……呃……这个……&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;老罗曾经讲了一句，“骂我，我就扭捏，因为没有骂到点子上；夸我，我又局促，因为夸得还不够”。哈哈~那是真正的牛人。像我这样的凡人，感觉到的是，“骂我，我就扭捏，因为确实没有骂到点子上；夸我，我又局促，因为也确实没有夸到点子上”。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;胡言乱语，到此为止~&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;晚安^_^&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/6936876341731210510/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/winter-classes-end.html#comment-form' title='7 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6936876341731210510'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/6936876341731210510'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/winter-classes-end.html' title='Winter Classes End'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>7</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2507597965090403718</id><published>2009-01-28T08:57:00.000-06:00</published><updated>2009-01-28T09:00:12.169-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>Waiting and Praying</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;和萱萱聊天，说到垃圾邮件箱中可能会有好消息。心情忐忑的看了，没有……网上看到，有人收到了拒信，有人收到了offer。于是更加忐忑。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;anyway, now, no news is good news.&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2507597965090403718/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/waiting-and-praying.html#comment-form' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2507597965090403718'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2507597965090403718'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/waiting-and-praying.html' title='Waiting and Praying'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4166893454682907643</id><published>2009-01-26T08:08:00.000-06:00</published><updated>2009-01-26T08:15:47.727-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>a prayer for the wild at heart, kept in cages</title><content type='html'></content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4166893454682907643/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/prayer-for-wild-at-heart-kept-in-cages.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4166893454682907643'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4166893454682907643'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/prayer-for-wild-at-heart-kept-in-cages.html' title='a prayer for the wild at heart, kept in cages'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7169373223416711345</id><published>2009-01-25T02:34:00.001-06:00</published><updated>2010-07-06T11:27:49.685-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><title type='text'>An Interesting Professor</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;gt;&amp;gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Are You Taking&amp;nbsp;New Students?&lt;/span&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt; &lt;/span&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Yes, I am currently taking students, and I do have funding for them. The areas of my research are described on my home page, and my current research is some extrapolation of what's written there. I am only interested in PhD students - if you want a MS only, I'm not the right choice for your advisor. When I state that I am accepting students, this does not imply that I admit anyone directly.&lt;span class="Apple-style-span" style="font-weight: bold;"&gt; So, the process of becoming my student is the following: apply to the graduate program in general, get accepted, perform well in your first year classes and exams, and at some point in your first year, discuss what you're interested in doing.&lt;/span&gt;&amp;nbsp;Please, do not send me your application and resume right now. Doing so proves that you're capable of ignoring the instructions written several times in this single page.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;gt;&amp;gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;What Is Your&amp;nbsp;Ideal Student?&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;I'm not looking for slave labor, nor am I looking for programming drones. The ideal student for me is some combination of being bright and being hard-working. Coupled with this is the desire to actually pursue research, which is some catch-all term for investigating an area where you don't have all of the answers. &lt;span class="Apple-style-span" style="font-weight: bold;"&gt;I'd rather deal with someone who's willing to be a little risky and come up with nothing than someone who's willing to risk nothing and comes up with nothing exciting.&lt;/span&gt; &lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Research by its nature is an inherent gamble.&lt;/span&gt; However, it's a risk that can be managed - if you aim for something ambitious, you may not graduate in four years. However, when you do graduate, chances are that you'll have far more interesting options than someone who just wanted to get out as quickly as possible.&amp;nbsp;That being said, I also want someone who is practical - a working incomplete system is far more useful than a complete but non-working system. So, some amount of programming is almost always needed in order to get your PhD. In fact, chances are good that you'll do a fair bit of programming on your own projects. Such is life.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&amp;gt;&amp;gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;How Do I Get&amp;nbsp;More Answers?&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;If you have more questions, I'm willing to provide more answers. However, I need to have some proof that you've bothered to read this far. So, what I ask is that if you want to write me a question, please open it with "&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Dear Sidney Poitier&lt;/span&gt;," which is the name of a famous actor. This will let me know that you read this whole page and that I shouldn't just delete your e-mail. If you're wondering why I ask that you call me Sidney Poitier, it's because I receive too much mass e-mail that starts off with "Dear Sir:" - a look into Poitier's filmography will answer the rest.&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7169373223416711345/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/interesting-professor.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7169373223416711345'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7169373223416711345'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/interesting-professor.html' title='An Interesting Professor'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4792893610659062666</id><published>2009-01-22T03:15:00.000-06:00</published><updated>2009-01-22T03:47:44.102-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Music'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>Pretty Old Days</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;听着BSB的歌，是种很奇妙的感觉。就好像是又看到了初中的自己，那个只喜欢刘若英和back street boy的大男孩。想来，那会儿也许只是想找个大哥哥，或者大姐姐，说自己想说的，唱自己想唱的。尽管仍然很喜欢他们，但不能否认，无论是奶茶还是AJ的声线和旋律都称不上独特。略微扩大一下视野，都能发现很多雷同的事物。那是个蓝色情歌和男孩和声组合泛滥的年代。也许仅仅因为我最先听到了他们的歌，所以时至今日，他们的声音仍然是最为特别的。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;大一有段时间很是眷恋DIDO大妈的絮叨。想来，大概是由于老妈不在身边，忽然发觉真的需要个人继续在耳边唠唠叨叨。Since her songs are full of witty, ironic, and malicious remarks just as having a conversation with her, it is really delightful to listen to them.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;几天前，听SLIPKNOT和LULLACRY的新专辑，给J8M发短信，说，“我感觉自己又年轻了:)”。很长一段时间，我们生活里只有这样的音乐，强烈断档的不均衡，却包涵着犹如古典乐般严谨的旋律。这也许是天下最俱可恨的一群人，拥有别人无法企及的才华却肆意挥洒。这里面包裹了许多人ANGLES、QUEENS、LINKIN、NIGHTWISH、POISON、METALLICA、MAROON5......&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;也许所有的风格都是应时应景而生，听一首歌，想起一段时光，真好:)&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/4792893610659062666/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/pretty-old-days.html#comment-form' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4792893610659062666'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/4792893610659062666'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/pretty-old-days.html' title='Pretty Old Days'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2289914017609828336</id><published>2009-01-19T19:18:00.000-06:00</published><updated>2011-02-28T14:21:26.810-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>To myself</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1. Continuing improving in some aspects of life;&lt;/div&gt;&lt;div&gt;2. Recording every little, tiny, small innovation spark and improvement;&lt;/div&gt;&lt;div&gt;3. Compare all of the attributes in two experiments in order to yield convincing conclusions;&lt;/div&gt;&lt;div&gt;4. Maybe you should build a list revealing what tasks you are engaging now;&lt;/div&gt;&lt;div&gt;5. It is better early than late.&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/2289914017609828336/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/to-myself.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2289914017609828336'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/2289914017609828336'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/to-myself.html' title='To myself'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7333868082518378815</id><published>2009-01-19T04:34:00.000-06:00</published><updated>2009-01-19T08:01:48.935-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>Hazy Future</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;下午和能在bridge里聊天。他说毕业后一定会回国，一来因为他老爸一人在国内，真的是需要个伴儿相互照顾；二来，他说若是留在米国，现在已经能看到自己35岁的样子，很没有意思，回国尽管压力会更大，但机会也更多。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;一副五大三粗的样子，往往会让人忽视他内心的缜密和强大。而看着他透过玻璃遥望远方的眼神，忽然发觉自己的许多好友竟然会有如此这般的相似。刘表、sunf、小猫、三立……坐在对面的能，以及如同站在镜子面前的自己。我们都在寻找，甚至是沿着相同的思路，采用相似的方法。&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7333868082518378815/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/hazy-future.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7333868082518378815'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7333868082518378815'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/hazy-future.html' title='Hazy Future'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5891041586213782193</id><published>2009-01-14T08:18:00.000-06:00</published><updated>2009-01-15T00:57:33.640-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>sth about autism</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;不知道加上一个“症”字是否恰当，就像是不知道这样的感觉是否应当使用“治愈”的字眼一样。只是偶尔，可以比较清楚的了解，自己和周围多了一道墙，这种感觉就叫做，寂寞。蔡智恒曾经精辟的描述过这样的感觉：孤单只代表身边没有人.；寂寞是一种内心感受无法与人沟通的心理状态……因为抽烟所以寂寞，因为寂寞所以抽烟；抽到后来，往往不知道抽的是烟还是寂寞。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;我不是一个合群的人，喜欢坐在露台上静静地看雨天里熙熙攘攘的人群。喜欢在咖啡馆里数着城铁站进进出出的列车。喜欢站在安全的距离以外思考每一个细节。我会毫无保留的帮助每一个好认识的人，但过近的距离总会让我感觉局促而不安。在D-22，对着不知名的乐手，和几个操着南方口音的美国鬼子或是英语蹩脚的芬兰人有一搭没一搭的扯淡，几瓶啤酒半包香烟会让我度过一个惬意的周末夜晚。同学聚会的KTV包房，总为连目光都无处投放而感到局促。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;我只有不多的几个好朋友。期待着和他们相聚的日子。每次总会希望能盘膝而坐，彻夜长谈直至天明。在冯小刚今年的贺岁剧里，最让我感触的是那个在日本的朋友，自己唱着歌离去。如泣如诉。这般的烂情绪从去年的最后一天纠缠我直到现在。和几个好友的聚会只是让它更加发酵。我们都会有自己的事业，自己的家庭，自己的孩子。然后天各一方。&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;这也许就是寂寞吧。&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/5891041586213782193/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/sth-about-autism.html#comment-form' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5891041586213782193'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/5891041586213782193'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/sth-about-autism.html' title='sth about autism'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7955211834896071613</id><published>2009-01-13T02:38:00.000-06:00</published><updated>2009-01-13T09:25:34.700-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Network'/><title type='text'>Google's production</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;今天看了两篇文章，分析google如何能够取得人们的好感和使用，第一篇的key words只有一个“CONTROL”。但我感觉，这样的分析有些过于简化了。的确，google中的控制权使我感觉很好。现在还清楚的记得，一周前，从压根儿不懂CSS的语句，到按照一个模板自己修改、设计整个页面，不断试验直到满意时候自己的欣喜。Gmail中的自定义智能屏蔽和标签管理也让我现在基本放弃了outlook。但是，原因似乎远非如此。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;第二篇文章是Google官方博客中的技术人员写的。更加接近使用时的真实感受，只是感觉文字还是有点虚幻。我就从一个使用者的角度，加入一些总结吧~&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;1. Focus on people—their lives, their work, their dreams.&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="color: rgb(51, 51, 255);"&gt;纯粹的广告语言，跳过~&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="color: rgb(51, 51, 255);"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;2. Every millisecond counts.&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="color: rgb(51, 51, 255);"&gt;虽然没有开发人员在自己博客里面声称的加速56倍那么夸张，但Chrome对于Javascript的内核支持的确使得很多网站的访问速度大大加快。网站对于Java脚本的密集应用，让“load and run”模式明显劣于Chrome的应用浏览器内部网络，尽管Google标称的“cloud computing”还相当的虚幻。同样的两个页面，来自blogger和spaces.msn，装载速度天差地别，当然我会选择那个让我效率更高的地方。 在这里，与其说是技术原因，不如说是设计思路的问题。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;3. Simplicity is powerful.&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="color: rgb(51, 51, 255);"&gt;当把新浪网中打开一个网页看着各种低俗广告的蹦来蹦去，和Google reader简明扼要的rss浏览比较，对于后者的选择也就顺理成章了。同样是邮件广告，在新浪中，是强行加入每个邮件的末尾，大多是什么智联招聘或者某某婚介网之类。而gmail是读取邮件关键字并以标志性的文字形式在屏幕最边上一列给出相关广告。尽管一般而言两种广告我都不会去点击，但相信后者的广告针对性会更好一些。这样简简单单的关键字搜索技术，如果新浪的技术人员不会的话，我这个刚刚入门的学生可以教你们。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;4. Engage beginners and attract experts.&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="color: rgb(51, 51, 255);"&gt;我是基本被engage了……&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;5. Dare to innovate.&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="color: rgb(51, 51, 255);"&gt;在gmail的lab里面，有很多小的gadget，大部分派不上任何的用场。但感觉很可爱。就好像看到自己某一天，一时性起鼓捣出一串蹩脚的代码，试试看，还能运行，那就算作是一个成果好了:)当然，也不能忘记google reader和google maps，都是lab里面毕业生~&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;6. Design for the world.&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="color: rgb(51, 51, 255);"&gt;google程序员的口号，忽略~&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;7. Plan for today's and tomorrow's business.&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="color: rgb(51, 51, 255);"&gt;同上。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;8. Delight the eye without distracting the mind.&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="color: rgb(51, 51, 255);"&gt;算是一个感受。不会强行插播广告，没有放入无法屏蔽的垃圾邮件。而且，界面已经远非当年那样简陋了:)&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;9. Be worthy of people's trust.&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="color: rgb(51, 51, 255);"&gt;这个应该让李彦宏以及牛根生看看。有一次开什么员工会议，领导在台上说，“我和牛根生、李彦宏是好朋友，所以他们有难的时候我一定会帮，我们都是中国民营企业的典范”。说的倒也没错，除了谈不上典范，几个人都是一路货。李彦宏的竞价排名和三鹿公关，已经让我彻底的厌恶了这个人。把责任往奶农身上推，然后在进入资本市场寻求发展之后还要“抵御外辱”，我相信很多事情，媒体的报道和当事者本人的初衷出入甚大。往小里说，要先学会做人，才能去做事。往大里说，"Don't be evil"应当是每个企业遵循的准则。&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;10. Add a human touch.&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="color: rgb(51, 51, 255);"&gt;这个属于“CONTROL”的范畴，第一篇文章讲得肯定比我透彻:)&lt;/span&gt;&lt;/div&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;-------------------------------------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Why products fail&lt;/span&gt;&gt;&lt;/div&gt;&lt;div&gt;by Mike Elgan&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Why do some people prefer Windows XP and Mac OS X over Windows Vista? After all, Vista is pretty and sleek and much more advanced than XP, and, in many areas, Mac OS X. Why is there so much love for Xbox, but none for Windows Mobile?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Why do BlackBerry users love their BlackBerrys, but the public is lukewarm about Palm devices?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Why is the Amazon Kindle, which is an unsophisticated, clunky, poorly designed gadget so popular with owners?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Why do people love plain, ugly Gmail?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The answer to these questions is a mystery to most of the companies that make PCs, gadgets, consumer electronics devices and to software makers. The industry spends billions on usability testing and user interface design. Unfortunately, that money is mostly wasted.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;The problem is that there are too many technologists in technology. The technology is only half the equation. The other half is the human, that irrational, impulsive, impatient, power-hungry gratification machine.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;When you ask someone what they really want, they won't tell you the truth because they're not aware of the truth.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Both users and product designers alike talk about user interface (UI) consistency, usability and simplicity, and system attributes like performance and stability. What's missing is that these attributes are means to an end. The real issue is always the user's physiological feeling of being in control. And control comes in many ways:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Consistency&lt;/span&gt;: Designers focus on UI "consistency," but why? Consistency gives predictability, which gives users a feeling that they know what will happen when they do something -- even for the first time. It's a feeling of mastery, of control.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Usability&lt;/span&gt;: One of the errors software and hardware designers make is to base their UI decisions on the assumption that the user is an idiot who needs to be protected from himself. Give this moron too much rope and he'll hang himself, the reasoning goes. But instead of taking the Microsoft route -- burying and hiding controls and features, which protects newbies from their own mistakes but frustrates the hell out of experienced users -- it's better to offer a bullet-proof "undo." Give the user control, let them make their own mistakes, then undo the damage if they mess something up.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Simplicity&lt;/span&gt;: Simplicity is complex. And there are many ways to achieve it. One way is to insist on top-to-bottom, inside-and-outside simplicity. Extreme examples include the original Palm Pilot organizer, Gmail and RSS feeds. And then there's the illusion of simplicity, which is the Microsoft route. In trying to be the operating system vendor for all people and all tasks, Microsoft Windows and Windows Mobile are extraordinarily complex pieces of software engineering. To "simplify," the company hides features, buries controls and groups features into categories to create the appearance of fewer options, without actually reducing options. (From all accounts, it appears that Windows 7 will offer more of the same.) Both extremes result in something you could call "simplicity." But one version thrills users by putting them in control. The other frustrates them by taking away control.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Performance&lt;/span&gt;: Everyone hates slow PCs. It's not the waiting. It's the fact that the PC has wrenched control from the user during the time that the hourglass is displayed. That three seconds of staring at the hourglass is three seconds when you feel utterly powerless. Fast computers are good because they keep the user in control.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;Stability&lt;/span&gt;: Designers focus on system "stability," but it's not because they worry about time wasted, though that's how users tend to talk a lack of stability. Like the performance issue, instability is about the theft of system control from the user. People waste all kinds of time on all kinds of things, and usually don't mind doing it. What enrages people is when somebody else forces wasted time on you. Blue Screens of Death are more akin to running into unexpected traffic jams or having somebody take away the TV remote control. You're forced into putting your objectives on hold, and left feeling powerless.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;One reason for the industry-wide pandemic of frustrating products is that the whole culture of usability testing doesn't emphasize user feelings of control. Microsoft does usability tests, for example, but its tests are flawed. Typically, it sits random people in front of a PC in a usability lab. Victims are directed to do various tasks, and asked what they're doing and thinking as they try to complete those tasks. All of this is monitored, and everything is recorded.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Microsoft usability testing tends to focus on enabling users to "accomplish goals." Microsoft categorizes these goals according to their educated preconceptions about what people are trying to do based on their jobs or user categorization are you a student, middle manager, designer, for instance. So Microsoft focuses on results. My view is that how the user feels during the process is more important than anything else.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Here's the problem. In these scenarios, users are using somebody else's PC. They expect and assume that the software is in control. There is no psychological feeling of "ownership" over the equipment or the software or the work or anything. So the most important element -- the sense of control people feel when doing their own work on their own PCs in their own homes -- is missing entirely from the tests.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;During usability tests, users are asked constantly about the software. And that's the wrong question.&lt;span class="Apple-style-span" style="font-weight: bold;"&gt; When real people are doing real work, they're focused on their own desires and objectives and are frustrated or not frustrated based on the degree to which they're given what they want.&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;My advice to Microsoft is to add an additional test: a "Who's In Control?" test. After performing a task, ask the user to rank their experience on a scale with "me in control" on one side, and "software in control" on the other. Try all test methods for completing various tasks, and choose the one ranked with the maximum "me in control" score. And they need the home version for ongoing testing in the "real world."&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;We've all experienced the full range of emotions while using gadgets, PCs, phones and software. At one end of the spectrum is a kind of thrilling joy, where something "just works." At the other end, there is a consuming rage. The amount of time your emotional state spends at one end of the spectrum rather than the other is the one and only thing that determines how much you "love" the product.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;All the factors involved in using a PC -- consistency, usability, simplicity, stability, performance and even the successful completion of tasks -- all come down to control.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Give me control, and I will love your product. It's as simple as that.&lt;/div&gt;&lt;div&gt;---------------------------------------&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;&lt;div&gt;&lt;&lt;span class="Apple-style-span" style="font-weight: bold;"&gt;What makes a design "Googley"&lt;/span&gt;?&gt;&lt;/div&gt;&lt;div&gt;by Sue Factor&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Late in 2007, our User Experience (UX) group—which does user interface design, visual design, user research, web development, and user interface writing—set out to articulate the principles that ought to guide Google designs worldwide. What are the fundamentals that all Google designers and researchers accept? Which approaches to design are particularly "Googley"? How can we encourage teams throughout Google to dream big and make smart design decisions?&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;A small team gathered to discuss these questions and define the Googley Design Principles:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;1. Focus on people—their lives, their work, their dreams.&lt;/div&gt;&lt;div&gt;2. Every millisecond counts.&lt;/div&gt;&lt;div&gt;3. Simplicity is powerful.&lt;/div&gt;&lt;div&gt;4. Engage beginners and attract experts.&lt;/div&gt;&lt;div&gt;5. Dare to innovate.&lt;/div&gt;&lt;div&gt;6. Design for the world.&lt;/div&gt;&lt;div&gt;7. Plan for today's and tomorrow's business.&lt;/div&gt;&lt;div&gt;8. Delight the eye without distracting the mind.&lt;/div&gt;&lt;div&gt;9. Be worthy of people's trust.&lt;/div&gt;&lt;div&gt;10. Add a human touch.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;These UX principles flow naturally from the Ten things Google has found to be true and the UX group's stated mission: to design products that satisfy and delight our users. We described the principles as "Our Aspirations" for two reasons:&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;We have a lot of work to do when it comes to implementation.&lt;/div&gt;&lt;div&gt;Every real-world product will have to strike a balance between all ten principles.&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;Still, we don't want to waffle too much. These principles represent the User Experience group's declaration of beliefs. With "Satisfy and Delight" stitched on our leotards, we're determined to get up on the tightrope and start juggling principles. Please applaud or boo, as appropriate, so that we can make the next act even better.&lt;/div&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7955211834896071613/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/googles-production.html#comment-form' title='1 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7955211834896071613'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7955211834896071613'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/googles-production.html' title='Google&apos;s production'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>1</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7578193106874696301</id><published>2009-01-10T07:10:00.000-06:00</published><updated>2009-01-10T09:27:19.946-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='Network'/><title type='text'>Bullog.cn is killed... again!</title><content type='html'>&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;尽管上面的很多言论相当无趣，但自由的发表自己的观点并尊重别人的立场，是一个健康的社会最为基本的特征吧。搞不好过几天，blogspot也会被屏蔽；然后是Youtube？wikipedia？……随便吧，自欺欺人的做法，无非是逼着每一个心智健全的人离开这里。&lt;/div&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;div&gt;If in order to banish the opinion in question from the world it were sufficient to stop the mouth of a single man,... then that would be very easily done. But things stand otherwise. To carry out such a decision it would be necessary not only to prohibit the book of Copernicus and the writings of other authors who follow the same opinion, but to ban the whole science of astronomy. Furthermore, it would be necessary to forbid men to look at the heavens。----By Galileo&lt;br /&gt;&lt;/div&gt;</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/7578193106874696301/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/bullogcn-is-killed.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7578193106874696301'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/7578193106874696301'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/bullogcn-is-killed.html' title='Bullog.cn is killed... again!'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-521072267751370554</id><published>2009-01-09T23:44:00.001-06:00</published><updated>2009-01-10T10:58:21.842-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#post'/><category scheme='http://www.blogger.com/atom/ns#' term='My Life'/><title type='text'>Blessing~</title><content type='html'>又是一年考研的日子。熟识的人里面，鄂老师今天要冲刺北大的光华了。祝福一下，她会是最棒的那个！还有很多学生今天上SSAT的考场，同样祝福他们能够达到自己的目标~~</content><link rel='replies' type='application/atom+xml' href='http://creasywuqiong.blogspot.com/feeds/521072267751370554/comments/default' title='Post Comments'/><link rel='replies' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/blessing.html#comment-form' title='0 Comments'/><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/521072267751370554'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/posts/default/521072267751370554'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/blessing.html' title='Blessing~'/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:total>0</thr:total></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1495621810658403898</id><published>2009-01-13T19:11:00.000-06:00</published><updated>2009-01-14T18:47:47.486-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'></title><content type='html'>This comment has been removed by the author.</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/7955211834896071613/comments/default/1495621810658403898'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/7955211834896071613/comments/default/1495621810658403898'/><author><name>Cindy</name><uri>http://www.blogger.com/profile/09129987118480778139</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='22' height='32' src='http://1.bp.blogspot.com/_1fWud01lcpA/SWrRbjLmPFI/AAAAAAAAAAM/5LZ6vg6_dB0/S220/fdg.bmp'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/01/googles-production.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-7955211834896071613' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/7955211834896071613' type='text/html'/><gd:extendedProperty name='blogger.contentRemoved' value='true'/><gd:extendedProperty name='blogger.itemClass' value='pid-1342951216'/><gd:extendedProperty name='blogger.displayTime' value='January 13, 2009 at 7:11 PM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-438954231490558155</id><published>2009-02-19T10:21:00.000-06:00</published><updated>2009-02-19T10:21:52.246-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>皱巴巴老师你这里怎么都没的人呀~&lt;br&gt;给你添点人气^^</title><content type='html'>皱巴巴老师你这里怎么都没的人呀~&lt;BR/&gt;给你添点人气^^</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/2507597965090403718/comments/default/438954231490558155'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/2507597965090403718/comments/default/438954231490558155'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/waiting-and-praying.html?showComment=1235060460000#c438954231490558155' title=''/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/01/waiting-and-praying.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-2507597965090403718' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/2507597965090403718' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1469105306'/><gd:extendedProperty name='blogger.displayTime' value='February 19, 2009 at 10:21 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3322820078855466776</id><published>2009-02-21T23:21:00.000-06:00</published><updated>2009-02-21T23:21:54.795-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>TR说你们的琵琶膏大都是成箱成箱买的~~&lt;br&gt;另，老师长得确实很乖~&lt;br&gt;讲课没有抑扬顿挫，听一...</title><content type='html'>TR说你们的琵琶膏大都是成箱成箱买的~~&lt;BR/&gt;另，老师长得确实很乖~&lt;BR/&gt;讲课没有抑扬顿挫，听一听就会溜号，&lt;BR/&gt;所以都开始讨论这老师如何卡哇伊了&lt;BR/&gt;唯一让人觉得有点波澜的就是&lt;BR/&gt;...所以A就错掉了...所以A就对了...&lt;BR/&gt;唉,心都凉了，选哪个错哪个~~</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/6936876341731210510/comments/default/3322820078855466776'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/6936876341731210510/comments/default/3322820078855466776'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/winter-classes-end.html?showComment=1235280060000#c3322820078855466776' title=''/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/02/winter-classes-end.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-6936876341731210510' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/6936876341731210510' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1121328513'/><gd:extendedProperty name='blogger.displayTime' value='February 21, 2009 at 11:21 PM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4305502513155752318</id><published>2009-02-22T00:38:00.000-06:00</published><updated>2009-02-22T00:38:00.074-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>点头，这个评价真的非常确切……&lt;br&gt;很精辟的评价……&lt;br&gt;对于清单的最后一项，我只能说，是袜子的...</title><content type='html'>点头，这个评价真的非常确切……&lt;BR/&gt;很精辟的评价……&lt;BR/&gt;对于清单的最后一项，我只能说，是袜子的质量问题……&lt;BR/&gt;另外祝贺老师拿到通知~&lt;BR/&gt;&lt;BR/&gt;&lt;BR/&gt;Echo</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/6936876341731210510/comments/default/4305502513155752318'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/6936876341731210510/comments/default/4305502513155752318'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/winter-classes-end.html?showComment=1235284680000#c4305502513155752318' title=''/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/02/winter-classes-end.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-6936876341731210510' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/6936876341731210510' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1206984922'/><gd:extendedProperty name='blogger.displayTime' value='February 22, 2009 at 12:38 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4292138866606537414</id><published>2009-02-22T09:28:00.000-06:00</published><updated>2009-02-25T09:07:50.184-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'></title><content type='html'>This comment has been removed by the author.</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/6936876341731210510/comments/default/4292138866606537414'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/6936876341731210510/comments/default/4292138866606537414'/><author><name>Cindy</name><uri>http://www.blogger.com/profile/09129987118480778139</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='32' height='31' src='http://4.bp.blogspot.com/_1fWud01lcpA/SaFQL1Ip-II/AAAAAAAAABs/uweNs-1--Cs/S220/IMG_4800.jpg'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/02/winter-classes-end.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-6936876341731210510' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/6936876341731210510' type='text/html'/><gd:extendedProperty name='blogger.contentRemoved' value='true'/><gd:extendedProperty name='blogger.itemClass' value='pid-1342951216'/><gd:extendedProperty name='blogger.displayTime' value='February 22, 2009 at 9:28 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2078515910617471064</id><published>2009-02-25T01:42:00.000-06:00</published><updated>2009-02-25T01:42:52.651-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>哈哈~我要要努力学习~~~时刻记录学习的点滴~~鞭策自己~~</title><content type='html'>哈哈~我要要努力学习~~~时刻记录学习的点滴~~鞭策自己~~</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8408324628401512575/comments/default/2078515910617471064'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8408324628401512575/comments/default/2078515910617471064'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/build-on-rather-than-replace-one.html?showComment=1235547720000#c2078515910617471064' title=''/><author><name>Xiao Yi</name><uri>http://wendieqhc.blog.163.com</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/02/build-on-rather-than-replace-one.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-8408324628401512575' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/8408324628401512575' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-752101614'/><gd:extendedProperty name='blogger.displayTime' value='February 25, 2009 at 1:42 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6920267257440839369</id><published>2009-02-25T01:45:00.000-06:00</published><updated>2009-02-25T01:45:20.056-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>偷偷告诉你~你是我这几个老师里面最喜欢的~&lt;br&gt;也偷偷告诉你~一开始我长文章夸张到有时候只对一个~...</title><content type='html'>偷偷告诉你~你是我这几个老师里面最喜欢的~&lt;BR/&gt;也偷偷告诉你~一开始我长文章夸张到有时候只对一个~最后一次你布置作业的时候两篇我都全对了~&lt;BR/&gt;谢谢你！</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/1719346938952464337/comments/default/6920267257440839369'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/1719346938952464337/comments/default/6920267257440839369'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/thank-you-all.html?showComment=1235547900000#c6920267257440839369' title=''/><author><name>Xiao Yi</name><uri>http://wendieqhc.blog.163.com</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/02/thank-you-all.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-1719346938952464337' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/1719346938952464337' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-342423319'/><gd:extendedProperty name='blogger.displayTime' value='February 25, 2009 at 1:45 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-5793523163335726303</id><published>2009-02-25T02:28:00.000-06:00</published><updated>2009-02-25T02:28:01.046-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>同感，melody always goes with memories ~~&lt;br&gt;常常听一首老歌为...</title><content type='html'>同感，melody always goes with memories ~~&lt;BR/&gt;常常听一首老歌为的是缅怀那个时候发生的事情,念起那个时候的人...</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/4792893610659062666/comments/default/5793523163335726303'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/4792893610659062666/comments/default/5793523163335726303'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/pretty-old-days.html?showComment=1235550480000#c5793523163335726303' title=''/><author><name>lan</name><uri>http://www.blogger.com/profile/16671947120740443157</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img2.blogblog.com/img/b16-rounded.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/01/pretty-old-days.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-4792893610659062666' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/4792893610659062666' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1765262044'/><gd:extendedProperty name='blogger.displayTime' value='February 25, 2009 at 2:28 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3678121018254816865</id><published>2009-02-27T08:23:00.000-06:00</published><updated>2009-02-27T08:23:01.625-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>那就是我想要的生活：喜欢坐在露台上静静地看雨天里熙熙攘攘的人群。喜欢在咖啡馆里数着城铁站进进出出的列...</title><content type='html'>那就是我想要的生活：喜欢坐在露台上静静地看雨天里熙熙攘攘的人群。喜欢在咖啡馆里数着城铁站进进出出的列车。&lt;BR/&gt;生活还是需要沉淀一下的静谧~&lt;BR/&gt;&lt;BR/&gt;你的学生~LY</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/5891041586213782193/comments/default/3678121018254816865'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/5891041586213782193/comments/default/3678121018254816865'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/01/sth-about-autism.html?showComment=1235744580000#c3678121018254816865' title=''/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/01/sth-about-autism.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-5891041586213782193' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/5891041586213782193' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-146092623'/><gd:extendedProperty name='blogger.displayTime' value='February 27, 2009 at 8:23 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8640593384590630442</id><published>2009-02-28T04:33:00.000-06:00</published><updated>2009-02-28T04:33:42.814-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>想起那时候跑去送你润喉糖的时候好傻哦···哈哈···一紧张就说成“老师，给你糖吃~”  +_+</title><content type='html'>想起那时候跑去送你润喉糖的时候好傻哦···哈哈···一紧张就说成“老师，给你糖吃~”  +_+</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/6936876341731210510/comments/default/8640593384590630442'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/6936876341731210510/comments/default/8640593384590630442'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/winter-classes-end.html?showComment=1235817180000#c8640593384590630442' title=''/><author><name>Xiao Yi</name><uri>http://wendieqhc.blog.163.com</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/02/winter-classes-end.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-6936876341731210510' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/6936876341731210510' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-362301391'/><gd:extendedProperty name='blogger.displayTime' value='February 28, 2009 at 4:33 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8404325356922017662</id><published>2009-03-01T02:42:00.000-06:00</published><updated>2009-03-01T02:42:44.046-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>强人~~~我还只是上学期学完C++，这学期还要学VB和VC（感觉和C++差不多），就几年学习的距离还...</title><content type='html'>强人~~~我还只是上学期学完C++，这学期还要学VB和VC（感觉和C++差不多），就几年学习的距离还真大~~&lt;BR/&gt;你不是读电信的吗？到了研究生就专攻编程吗？</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/3820551107802023050/comments/default/8404325356922017662'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/3820551107802023050/comments/default/8404325356922017662'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/graduation-design.html?showComment=1235896920000#c8404325356922017662' title=''/><author><name>lychee</name><uri>http://www.blogger.com/profile/01892780472562957580</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='21' height='32' src='http://3.bp.blogspot.com/_9g7LwO-OB8Y/SapDhavdP_I/AAAAAAAAAAM/tWlbt3ZFWSo/S220/DSC_1286.JPG'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/02/graduation-design.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-3820551107802023050' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/3820551107802023050' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1266401275'/><gd:extendedProperty name='blogger.displayTime' value='March 1, 2009 at 2:42 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8557495150318097990</id><published>2009-03-01T19:36:00.000-06:00</published><updated>2009-03-01T19:36:25.987-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>同意！深入浅出才是最高境界~</title><content type='html'>同意！深入浅出才是最高境界~</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/3820551107802023050/comments/default/8557495150318097990'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/3820551107802023050/comments/default/8557495150318097990'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/graduation-design.html?showComment=1235957760000#c8557495150318097990' title=''/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/02/graduation-design.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-3820551107802023050' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/3820551107802023050' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-601066838'/><gd:extendedProperty name='blogger.displayTime' value='March 1, 2009 at 7:36 PM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7428692879226846434</id><published>2009-03-05T00:36:00.000-06:00</published><updated>2009-03-05T00:36:31.929-06:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>哦哦~祝你成功~</title><content type='html'>哦哦~祝你成功~</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/5639985191794038060/comments/default/7428692879226846434'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/5639985191794038060/comments/default/7428692879226846434'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/03/1st-time.html?showComment=1236234960000#c7428692879226846434' title=''/><author><name>Xiao Yi</name><uri>http://wendieqhc.blog.163.com</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/03/1st-time.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-5639985191794038060' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/5639985191794038060' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1595241363'/><gd:extendedProperty name='blogger.displayTime' value='March 5, 2009 at 12:36 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8857747036369599892</id><published>2009-03-09T00:25:00.000-05:00</published><updated>2009-03-09T00:25:28.256-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>oh,Creasy you're so busy...</title><content type='html'>oh,Creasy you're so busy...</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/3360840485865365713/comments/default/8857747036369599892'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/3360840485865365713/comments/default/8857747036369599892'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/03/timetable.html?showComment=1236576300000#c8857747036369599892' title=''/><author><name>da tou</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/03/timetable.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-3360840485865365713' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/3360840485865365713' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1553088003'/><gd:extendedProperty name='blogger.displayTime' value='March 9, 2009 at 12:25 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2431247197510962863</id><published>2009-03-09T00:43:00.000-05:00</published><updated>2009-03-09T00:43:02.688-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>I Share My timetable &lt;br&gt; 1  7:30-8:50    words an...</title><content type='html'>I Share My timetable &lt;BR/&gt; 1  7:30-8:50    words and phrases&lt;BR/&gt; 2  8:50-12:15   classes of major &lt;BR/&gt; 3  13:30-17:30  issue and argument&lt;BR/&gt; 4  17:30-19:00  relax&lt;BR/&gt; 4  7:00-9:30    classes of C.S&lt;BR/&gt; 5  10:20-12:00  homework of C.S&lt;BR/&gt;&lt;BR/&gt; 向老师学习～加油～</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/3360840485865365713/comments/default/2431247197510962863'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/3360840485865365713/comments/default/2431247197510962863'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/03/timetable.html?showComment=1236577380000#c2431247197510962863' title=''/><author><name>da tou</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/03/timetable.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-3360840485865365713' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/3360840485865365713' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1835986794'/><gd:extendedProperty name='blogger.displayTime' value='March 9, 2009 at 12:43 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6507502478976142312</id><published>2009-03-17T08:39:00.000-05:00</published><updated>2009-03-17T08:39:48.157-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>这种感觉我也有过，不过已经在几年前为RAUL释放出来了。哎。&lt;br&gt;费德勒已经辉煌过那么久了，没关系...</title><content type='html'>这种感觉我也有过，不过已经在几年前为RAUL释放出来了。哎。&lt;BR/&gt;费德勒已经辉煌过那么久了，没关系……没关系……让曾经最强大的他留在记忆中就好咯。纳豆没出现之前就预料到一定有那么一天的了..</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/7064204018023034252/comments/default/6507502478976142312'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/7064204018023034252/comments/default/6507502478976142312'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/03/belief-in-sb-or-sw.html?showComment=1237297140000#c6507502478976142312' title=''/><author><name>KAIYIN</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/03/belief-in-sb-or-sw.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-7064204018023034252' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/7064204018023034252' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-2144323827'/><gd:extendedProperty name='blogger.displayTime' value='March 17, 2009 at 8:39 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1049610192292296075</id><published>2009-03-17T09:39:00.000-05:00</published><updated>2009-03-17T09:39:57.783-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>想当年ROGER头次排名第一的那年，那是相当帅呆了。傻傻的可爱～唉。</title><content type='html'>想当年ROGER头次排名第一的那年，那是相当帅呆了。傻傻的可爱～唉。</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/7064204018023034252/comments/default/1049610192292296075'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/7064204018023034252/comments/default/1049610192292296075'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/03/belief-in-sb-or-sw.html?showComment=1237300740000#c1049610192292296075' title=''/><author><name>KAIYIN</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/03/belief-in-sb-or-sw.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-7064204018023034252' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/7064204018023034252' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1203150'/><gd:extendedProperty name='blogger.displayTime' value='March 17, 2009 at 9:39 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6497090075069604935</id><published>2009-03-18T00:05:00.000-05:00</published><updated>2009-03-18T00:05:30.490-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>终于又恢复原来的写作风格了，不错不错~表扬一下~&lt;br&gt;好好加油做毕设，你哪天毕业啊，我去给你献花:...</title><content type='html'>终于又恢复原来的写作风格了，不错不错~表扬一下~&lt;BR/&gt;好好加油做毕设，你哪天毕业啊，我去给你献花:)&lt;BR/&gt;ps:我退了6G，没什么，只是觉得这样时间上会更从容一点儿~</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/7064204018023034252/comments/default/6497090075069604935'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/7064204018023034252/comments/default/6497090075069604935'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/03/belief-in-sb-or-sw.html?showComment=1237352700000#c6497090075069604935' title=''/><author><name>Cindy</name><uri>http://www.blogger.com/profile/09129987118480778139</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='24' height='32' src='http://3.bp.blogspot.com/_1fWud01lcpA/SaVfXbuS6RI/AAAAAAAAACM/xEumH2dbEqk/S220/large_nK0U_4499a198169.jpg'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/03/belief-in-sb-or-sw.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-7064204018023034252' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/7064204018023034252' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1342951216'/><gd:extendedProperty name='blogger.displayTime' value='March 18, 2009 at 12:05 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1717139823161905475</id><published>2009-03-18T04:27:00.000-05:00</published><updated>2009-03-18T04:27:16.094-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>说了多少次了，我不是“小朋友”！！！&lt;br&gt;反正他都怀孕了，也打不了几年了……&lt;br&gt;&lt;br&gt;&lt;br...</title><content type='html'>说了多少次了，我不是“小朋友”！！！&lt;BR/&gt;反正他都怀孕了，也打不了几年了……&lt;BR/&gt;&lt;BR/&gt;&lt;BR/&gt;Echo</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/7064204018023034252/comments/default/1717139823161905475'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/7064204018023034252/comments/default/1717139823161905475'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/03/belief-in-sb-or-sw.html?showComment=1237368420000#c1717139823161905475' title=''/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/03/belief-in-sb-or-sw.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-7064204018023034252' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/7064204018023034252' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1510688842'/><gd:extendedProperty name='blogger.displayTime' value='March 18, 2009 at 4:27 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6019475203004020376</id><published>2009-03-24T07:35:00.000-05:00</published><updated>2009-03-24T07:35:12.411-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>Freud曾经说过：我们需要信仰来摆脱恐慌。&lt;br&gt;所以，我说完了。&lt;br&gt;还有，你是“你去香港前最...</title><content type='html'>Freud曾经说过：我们需要信仰来摆脱恐慌。&lt;BR/&gt;所以，我说完了。&lt;BR/&gt;还有，你是“你去香港前最后一个老师“么？</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/7064204018023034252/comments/default/6019475203004020376'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/7064204018023034252/comments/default/6019475203004020376'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/03/belief-in-sb-or-sw.html?showComment=1237898100000#c6019475203004020376' title=''/><author><name>effy</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/03/belief-in-sb-or-sw.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-7064204018023034252' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/7064204018023034252' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-2069867529'/><gd:extendedProperty name='blogger.displayTime' value='March 24, 2009 at 7:35 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3576586315764654223</id><published>2009-03-27T06:43:00.000-05:00</published><updated>2009-03-27T06:43:08.283-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>我SPACE更新啦，终于认真写了一篇东西。哈哈～去逛逛吧～</title><content type='html'>我SPACE更新啦，终于认真写了一篇东西。哈哈～去逛逛吧～</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/7064204018023034252/comments/default/3576586315764654223'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/7064204018023034252/comments/default/3576586315764654223'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/03/belief-in-sb-or-sw.html?showComment=1238154180000#c3576586315764654223' title=''/><author><name>DA TOU</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/03/belief-in-sb-or-sw.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-7064204018023034252' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/7064204018023034252' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1628497818'/><gd:extendedProperty name='blogger.displayTime' value='March 27, 2009 at 6:43 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1269825145969706374</id><published>2009-05-06T10:15:00.000-05:00</published><updated>2009-05-06T10:15:52.504-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>华山西岳啊~~~我当时初中二年级时候去了华山，西岳当时刚刚出了事，那个台阶的链子断了，掉下去了不少人...</title><content type='html'>华山西岳啊~~~我当时初中二年级时候去了华山，西岳当时刚刚出了事，那个台阶的链子断了，掉下去了不少人的说，所以封山不许等，我就登了最高的南峰，北峰索道一上去就到了也算不上登了~~呵呵~~~那时候小可能不怕死，一些绕壁走的那种小道没护栏的，下面是深渊我还来回过来过去，把我那两老给吓死，现在真是佩服自己，哈哈~~~</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8948195707413897984/comments/default/1269825145969706374'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8948195707413897984/comments/default/1269825145969706374'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html?showComment=1241622900000#c1269825145969706374' title=''/><author><name>lychee</name><uri>http://www.blogger.com/profile/01892780472562957580</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='21' height='32' src='http://3.bp.blogspot.com/_9g7LwO-OB8Y/SapDhavdP_I/AAAAAAAAAAM/tWlbt3ZFWSo/S220/DSC_1286.JPG'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-8948195707413897984' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/8948195707413897984' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1266401275'/><gd:extendedProperty name='blogger.displayTime' value='May 6, 2009 at 10:15 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-817613180737118369</id><published>2009-05-07T03:16:00.000-05:00</published><updated>2009-05-07T03:16:21.976-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>to lychee, 你太强了~我几个山峰都爬了。可是到最后，我站着的时候脚都会发抖。不是害怕，是累...</title><content type='html'>to lychee, 你太强了~我几个山峰都爬了。可是到最后，我站着的时候脚都会发抖。不是害怕，是累的不住的哆嗦……&lt;br /&gt;……要么就是我老了……</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8948195707413897984/comments/default/817613180737118369'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8948195707413897984/comments/default/817613180737118369'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html?showComment=1241684160000#c817613180737118369' title=''/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-8948195707413897984' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/8948195707413897984' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-745358782'/><gd:extendedProperty name='blogger.displayTime' value='May 7, 2009 at 3:16 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6930853826645048229</id><published>2009-05-07T03:49:00.000-05:00</published><updated>2009-05-07T03:49:41.757-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>羡慕……
像我这种懒人永远与爬山绝缘……</title><content type='html'>羡慕……&lt;br /&gt;像我这种懒人永远与爬山绝缘……</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8948195707413897984/comments/default/6930853826645048229'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8948195707413897984/comments/default/6930853826645048229'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html?showComment=1241686140000#c6930853826645048229' title=''/><author><name>Echo</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-8948195707413897984' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/8948195707413897984' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-439689784'/><gd:extendedProperty name='blogger.displayTime' value='May 7, 2009 at 3:49 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1592640003325877171</id><published>2009-05-07T07:07:00.000-05:00</published><updated>2009-05-07T07:07:03.188-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>再问一句……
那俩人是男的女的……</title><content type='html'>再问一句……&lt;br /&gt;那俩人是男的女的……</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8948195707413897984/comments/default/1592640003325877171'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8948195707413897984/comments/default/1592640003325877171'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html?showComment=1241698020000#c1592640003325877171' title=''/><author><name>Echo</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-8948195707413897984' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/8948195707413897984' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1635989098'/><gd:extendedProperty name='blogger.displayTime' value='May 7, 2009 at 7:07 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7113883114189773129</id><published>2009-05-07T13:53:00.000-05:00</published><updated>2009-05-07T13:53:11.780-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>to echo~ 
你总会让我很无语。一个男的，一个女的~！！只不过有人起了男孩子的名字而已~</title><content type='html'>to echo~ &lt;br /&gt;你总会让我很无语。一个男的，一个女的~！！只不过有人起了男孩子的名字而已~</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8948195707413897984/comments/default/7113883114189773129'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8948195707413897984/comments/default/7113883114189773129'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html?showComment=1241722380000#c7113883114189773129' title=''/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-8948195707413897984' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/8948195707413897984' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-745358782'/><gd:extendedProperty name='blogger.displayTime' value='May 7, 2009 at 1:53 PM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7346997678654705208</id><published>2009-05-08T10:11:00.000-05:00</published><updated>2009-05-08T10:11:11.418-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>一般一般吧~~~哈哈~~~下一个目标黄山！你去过了吗？</title><content type='html'>一般一般吧~~~哈哈~~~下一个目标黄山！你去过了吗？</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8948195707413897984/comments/default/7346997678654705208'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8948195707413897984/comments/default/7346997678654705208'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html?showComment=1241795460000#c7346997678654705208' title=''/><author><name>lychee</name><uri>http://www.blogger.com/profile/01892780472562957580</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='21' height='32' src='http://3.bp.blogspot.com/_9g7LwO-OB8Y/SapDhavdP_I/AAAAAAAAAAM/tWlbt3ZFWSo/S220/DSC_1286.JPG'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-8948195707413897984' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/8948195707413897984' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1266401275'/><gd:extendedProperty name='blogger.displayTime' value='May 8, 2009 at 10:11 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7836250590318538766</id><published>2009-05-08T10:22:00.000-05:00</published><updated>2009-05-08T10:22:58.966-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>对了，想再问下~你准备去米国是去哪个大学？
我上Georgia Tech找一个叫G. T. Zhou...</title><content type='html'>对了，想再问下~你准备去米国是去哪个大学？&lt;br /&gt;我上Georgia Tech找一个叫G. T. Zhou的牛教授，以前是我们天津大学的，同门师姐，不过上网在它那个RESEARCH找了好久都找不到她的有关资料，想看看她研究什么的，以后好陶瓷~~</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8948195707413897984/comments/default/7836250590318538766'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8948195707413897984/comments/default/7836250590318538766'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html?showComment=1241796120000#c7836250590318538766' title=''/><author><name>lychee</name><uri>http://www.blogger.com/profile/01892780472562957580</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='21' height='32' src='http://3.bp.blogspot.com/_9g7LwO-OB8Y/SapDhavdP_I/AAAAAAAAAAM/tWlbt3ZFWSo/S220/DSC_1286.JPG'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-8948195707413897984' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/8948195707413897984' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1266401275'/><gd:extendedProperty name='blogger.displayTime' value='May 8, 2009 at 10:22 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-939343655389176201</id><published>2009-05-09T23:32:00.000-05:00</published><updated>2009-05-09T23:32:11.887-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>既然你知道名字像男的就说清楚……
否则出现误会也不是我的错^_^</title><content type='html'>既然你知道名字像男的就说清楚……&lt;br /&gt;否则出现误会也不是我的错^_^</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8948195707413897984/comments/default/939343655389176201'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/8948195707413897984/comments/default/939343655389176201'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html?showComment=1241929920000#c939343655389176201' title=''/><author><name>Echo</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/05/no-watching-when-walking.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-8948195707413897984' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/8948195707413897984' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-274578168'/><gd:extendedProperty name='blogger.displayTime' value='May 9, 2009 at 11:32 PM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2884941308913250589</id><published>2009-05-11T03:13:00.000-05:00</published><updated>2009-05-11T03:13:00.554-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>haha~~~YEP~~~!&amp;gt;.&amp;lt;..</title><content type='html'>haha~~~YEP~~~!&amp;gt;.&amp;lt;..</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/9048128367123876121/comments/default/2884941308913250589'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/9048128367123876121/comments/default/2884941308913250589'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/05/great-huston-rocket.html?showComment=1242029580000#c2884941308913250589' title=''/><author><name>head</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/05/great-huston-rocket.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-9048128367123876121' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/9048128367123876121' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1150263197'/><gd:extendedProperty name='blogger.displayTime' value='May 11, 2009 at 3:13 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8644735979804633042</id><published>2010-04-20T10:00:00.622-05:00</published><updated>2010-04-20T10:00:00.622-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>L是谁呀？有八卦？呵呵~</title><content type='html'>L是谁呀？有八卦？呵呵~</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/2784190386305904376/comments/default/8644735979804633042'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/2784190386305904376/comments/default/8644735979804633042'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/l-good-luck-for-test.html?showComment=1271775600622#c8644735979804633042' title=''/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2010/04/l-good-luck-for-test.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-2784190386305904376' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/2784190386305904376' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1268743220'/><gd:extendedProperty name='blogger.displayTime' value='April 20, 2010 at 10:00 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-9009828509363456290</id><published>2010-04-20T10:04:51.172-05:00</published><updated>2010-04-20T10:04:51.172-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>小吴最近怎么了，是不是有什么烦心事啊？少抽烟少喝咖啡对身体不好...我以前偶尔也失眠，试着坚持白天不...</title><content type='html'>小吴最近怎么了，是不是有什么烦心事啊？少抽烟少喝咖啡对身体不好...我以前偶尔也失眠，试着坚持白天不睡觉，睡前运动一下，就好多了~主要可能还是你自己心里压力大吧，好好调整，加油加油～</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/712054455824178388/comments/default/9009828509363456290'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/712054455824178388/comments/default/9009828509363456290'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/some-thoughts.html?showComment=1271775891172#c9009828509363456290' title=''/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2010/04/some-thoughts.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-712054455824178388' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/712054455824178388' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1268743220'/><gd:extendedProperty name='blogger.displayTime' value='April 20, 2010 at 10:04 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-2482485280036645332</id><published>2010-04-20T12:24:26.666-05:00</published><updated>2010-04-20T12:24:26.666-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>to anony.: who are you...</title><content type='html'>to anony.: who are you...</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/2784190386305904376/comments/default/2482485280036645332'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/2784190386305904376/comments/default/2482485280036645332'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/l-good-luck-for-test.html?showComment=1271784266666#c2482485280036645332' title=''/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2010/04/l-good-luck-for-test.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-2784190386305904376' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/2784190386305904376' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-745358782'/><gd:extendedProperty name='blogger.displayTime' value='April 20, 2010 at 12:24 PM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3572325581469610461</id><published>2010-04-20T20:35:34.341-05:00</published><updated>2010-04-20T20:35:34.341-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>啊哈，你猜猜啊~</title><content type='html'>啊哈，你猜猜啊~</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/2784190386305904376/comments/default/3572325581469610461'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/2784190386305904376/comments/default/3572325581469610461'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/l-good-luck-for-test.html?showComment=1271813734341#c3572325581469610461' title=''/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2010/04/l-good-luck-for-test.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-2784190386305904376' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/2784190386305904376' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1268743220'/><gd:extendedProperty name='blogger.displayTime' value='April 20, 2010 at 8:35 PM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4977234062250524806</id><published>2010-04-21T20:30:12.564-05:00</published><updated>2010-04-21T20:30:12.564-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>你这个密歇根人……</title><content type='html'>你这个密歇根人……</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/2784190386305904376/comments/default/4977234062250524806'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/2784190386305904376/comments/default/4977234062250524806'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/l-good-luck-for-test.html?showComment=1271899812564#c4977234062250524806' title=''/><author><name>Creasy</name><uri>http://www.blogger.com/profile/18214920068051205243</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='27' height='32' src='http://4.bp.blogspot.com/_I_c_gpW8w7g/SWY8nEuP-tI/AAAAAAAAAAM/zB6r7w9OXIY/S220/18scott-04.jpg'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2010/04/l-good-luck-for-test.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-2784190386305904376' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/2784190386305904376' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-745358782'/><gd:extendedProperty name='blogger.displayTime' value='April 21, 2010 at 8:30 PM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3353662855125015958</id><published>2010-04-22T13:39:05.513-05:00</published><updated>2010-04-22T13:39:05.513-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>切，你个西部牛仔大叔。。。</title><content type='html'>切，你个西部牛仔大叔。。。</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/2784190386305904376/comments/default/3353662855125015958'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/2784190386305904376/comments/default/3353662855125015958'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/l-good-luck-for-test.html?showComment=1271961545513#c3353662855125015958' title=''/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2010/04/l-good-luck-for-test.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-2784190386305904376' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/2784190386305904376' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-426401418'/><gd:extendedProperty name='blogger.displayTime' value='April 22, 2010 at 1:39 PM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-1501936294027682628</id><published>2010-05-02T16:42:06.377-05:00</published><updated>2010-05-02T16:42:06.377-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>你咋了啊？想谁了啊这是？patpat~</title><content type='html'>你咋了啊？想谁了啊这是？patpat~</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/35058348308889833/comments/default/1501936294027682628'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/35058348308889833/comments/default/1501936294027682628'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/04/missing.html?showComment=1272836526377#c1501936294027682628' title=''/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2010/04/missing.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-35058348308889833' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/35058348308889833' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-976487668'/><gd:extendedProperty name='blogger.displayTime' value='May 2, 2010 at 4:42 PM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-3102177457124543755</id><published>2010-07-22T21:44:38.000-05:00</published><updated>2010-07-22T21:44:38.000-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>顶一个。。。。。好吧我只是想说我翻墙成功了。。。。终于可以上Facebook了。。。。。。
这届世界...</title><content type='html'>顶一个。。。。。好吧我只是想说我翻墙成功了。。。。终于可以上Facebook了。。。。。。&lt;br /&gt;这届世界杯。。。刘建宏火了。。。。。&lt;br /&gt;就是这样&lt;br /&gt;Echo</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/3496638588093551375/comments/default/3102177457124543755'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/3496638588093551375/comments/default/3102177457124543755'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/07/funny-words.html?showComment=1279853078000#c3102177457124543755' title=''/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2010/07/funny-words.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-3496638588093551375' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/3496638588093551375' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-346950398'/><gd:extendedProperty name='blogger.displayTime' value='July 22, 2010 at 9:44 PM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8921213132100586493</id><published>2010-08-09T00:15:58.702-05:00</published><updated>2010-08-09T00:15:58.702-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>Hi,I just come to the US and can login this blog f...</title><content type='html'>Hi,I just come to the US and can login this blog freely.shuanging</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/3496638588093551375/comments/default/8921213132100586493'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/3496638588093551375/comments/default/8921213132100586493'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/07/funny-words.html?showComment=1281330958702#c8921213132100586493' title=''/><author><name>Cindy</name><uri>http://www.blogger.com/profile/09129987118480778139</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='24' height='32' src='http://3.bp.blogspot.com/_1fWud01lcpA/SaVfXbuS6RI/AAAAAAAAACM/xEumH2dbEqk/S220/large_nK0U_4499a198169.jpg'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2010/07/funny-words.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-3496638588093551375' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/3496638588093551375' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-1342951216'/><gd:extendedProperty name='blogger.displayTime' value='August 9, 2010 at 12:15 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-6289974991958327949</id><published>2010-09-21T23:07:51.350-05:00</published><updated>2010-09-21T23:07:51.350-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>how lazy you are...no article updated since my las...</title><content type='html'>how lazy you are...no article updated since my last visit...</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/6936876341731210510/comments/default/6289974991958327949'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/6936876341731210510/comments/default/6289974991958327949'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/winter-classes-end.html?showComment=1285128471350#c6289974991958327949' title=''/><author><name>Yi</name><uri>http://wendieqhc.blog.163.com/</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/02/winter-classes-end.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-6936876341731210510' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/6936876341731210510' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-2106767690'/><gd:extendedProperty name='blogger.displayTime' value='September 21, 2010 at 11:07 PM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-480848227318238450</id><published>2010-09-21T23:08:46.537-05:00</published><updated>2010-09-21T23:08:46.537-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>OMG...look at my last last comment...how silly i a...</title><content type='html'>OMG...look at my last last comment...how silly i am...</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/6936876341731210510/comments/default/480848227318238450'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/6936876341731210510/comments/default/480848227318238450'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/winter-classes-end.html?showComment=1285128526537#c480848227318238450' title=''/><author><name>Yi</name><uri>http://wendieqhc.blog.163.com/</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/02/winter-classes-end.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-6936876341731210510' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/6936876341731210510' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-2106767690'/><gd:extendedProperty name='blogger.displayTime' value='September 21, 2010 at 11:08 PM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8886813830598749161</id><published>2010-09-21T23:12:05.152-05:00</published><updated>2010-09-21T23:12:05.152-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>那啥，找到哪里看文章了== still silly after 2 years...掩面...</title><content type='html'>那啥，找到哪里看文章了== still silly after 2 years...掩面...</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/6936876341731210510/comments/default/8886813830598749161'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/6936876341731210510/comments/default/8886813830598749161'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2009/02/winter-classes-end.html?showComment=1285128725152#c8886813830598749161' title=''/><author><name>Yi</name><uri>http://wendieqhc.blog.163.com/</uri><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2009/02/winter-classes-end.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-6936876341731210510' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/6936876341731210510' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-2106767690'/><gd:extendedProperty name='blogger.displayTime' value='September 21, 2010 at 11:12 PM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-4711888342257233293</id><published>2010-10-13T03:28:38.318-05:00</published><updated>2010-10-13T03:28:38.318-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>1,i love this company,it can link to baned web 
2,...</title><content type='html'>1,i love this company,it can link to baned web &lt;br /&gt;2,you have to delete the links of my classmates!&amp;gt;.&amp;lt;</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/273898054558092691/comments/default/4711888342257233293'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/273898054558092691/comments/default/4711888342257233293'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/ways-to-keep-from-duplicating-path.html?showComment=1286958518318#c4711888342257233293' title=''/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2010/10/ways-to-keep-from-duplicating-path.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-273898054558092691' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/273898054558092691' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-739101007'/><gd:extendedProperty name='blogger.displayTime' value='October 13, 2010 at 3:28 AM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-8292482064395081576</id><published>2010-10-17T21:33:38.623-05:00</published><updated>2010-10-17T21:33:38.623-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>:]</title><content type='html'>:]</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/2219454216975926286/comments/default/8292482064395081576'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/2219454216975926286/comments/default/8292482064395081576'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/how-to-test-usrp-when-you-get-it.html?showComment=1287369218623#c8292482064395081576' title=''/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2010/10/how-to-test-usrp-when-you-get-it.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-2219454216975926286' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/2219454216975926286' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-739101007'/><gd:extendedProperty name='blogger.displayTime' value='October 17, 2010 at 9:33 PM'/></entry><entry><id>tag:blogger.com,1999:blog-2013717245689924924.post-7788057221604650958</id><published>2010-10-18T04:59:11.595-05:00</published><updated>2010-10-18T04:59:11.595-05:00</updated><category scheme='http://schemas.google.com/g/2005#kind' term='http://schemas.google.com/blogger/2008/kind#comment'/><title type='text'>patpat~
lan</title><content type='html'>patpat~&lt;br /&gt;lan</content><link rel='edit' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/5994249862775469061/comments/default/7788057221604650958'/><link rel='self' type='application/atom+xml' href='http://www.blogger.com/feeds/2013717245689924924/5994249862775469061/comments/default/7788057221604650958'/><link rel='alternate' type='text/html' href='http://creasywuqiong.blogspot.com/2010/10/why-dont-you-read-readme-file-first.html?showComment=1287395951595#c7788057221604650958' title=''/><author><name>Anonymous</name><email>noreply@blogger.com</email><gd:image rel='http://schemas.google.com/g/2005#thumbnail' width='16' height='16' src='http://img1.blogblog.com/img/blank.gif'/></author><thr:in-reply-to href='http://creasywuqiong.blogspot.com/2010/10/why-dont-you-read-readme-file-first.html' ref='tag:blogger.com,1999:blog-2013717245689924924.post-5994249862775469061' source='http://www.blogger.com/feeds/2013717245689924924/posts/default/5994249862775469061' type='text/html'/><gd:extendedProperty name='blogger.itemClass' value='pid-739101007'/><gd:extendedProperty name='blogger.displayTime' value='October 18, 2010 at 4:59 AM'/></entry></feed>