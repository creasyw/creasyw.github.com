<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Work | Qiong Wu]]></title>
  <link href="http://creasyw.github.io/blog/categories/work/atom.xml" rel="self"/>
  <link href="http://creasyw.github.io/"/>
  <updated>2014-09-17T15:46:51-05:00</updated>
  <id>http://creasyw.github.io/</id>
  <author>
    <name><![CDATA[Qiong Wu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[fixed point arithmetic]]></title>
    <link href="http://creasyw.github.io/blog/2011/03/10/fixed-point-arithmetic/"/>
    <updated>2011-03-10T00:00:00-06:00</updated>
    <id>http://creasyw.github.io/blog/2011/03/10/fixed-point-arithmetic</id>
    <content type="html"><![CDATA[<div class="post">
There is a good introduction in <a href="http://en.wikipedia.org/wiki/Fixed-point_arithmetic">wikipedia</a>, which includes several useful external links at the end of the article. The <a href="http://www.mathworks.com/help/toolbox/fixedpoint/ug/f6312.html">MATLAB</a> also has quite a few functions dealing with this kind of problems, as well as a thorough introductory article. Besides, the <a href="http://groups.google.com/group/comp.lang.c/browse_thread/thread/16fc49e7e6efe383?hl=en">comp.lang.c</a> happen to take one inspiring discussion about it. All these things adding together shall definitely let me understand sufficient knowledge about this field of study.<br /><br />In addition, there are other resources from <a href="http://www.edn.com/archives/1996/101096/21df_04.htm">TI</a> and <a href="http://www.eetimes.com/discussion/other/4024639/Fixed-point-math-in-C">article written by Joe Lemieux</a> directly concerning the fixed point C programming.</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Comparing file diff in Ubuntu]]></title>
    <link href="http://creasyw.github.io/blog/2011/03/06/comparing-file-diff-in-ubuntu/"/>
    <updated>2011-03-06T00:00:00-06:00</updated>
    <id>http://creasyw.github.io/blog/2011/03/06/comparing-file-diff-in-ubuntu</id>
    <content type="html"><![CDATA[<div class="post">
I am still familiar with the highlighted view for differences rather than the "diff" command, which produces the results in a "+/-" form. After a easy google, the Meld turns out be one good alternative solution for this purpose. <a href="http://meld.sourceforge.net/">Here</a> is its web page.<br /><br />Just one step to do:<br />$ sudo apt-get install meld<br /><br />Then, you will find the Meld in Application-&gt;Programming directory.<br /><br /><br />Have fun.</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install Click in Ubuntu 10.04]]></title>
    <link href="http://creasyw.github.io/blog/2010/07/05/install-click-in-ubuntu-1004/"/>
    <updated>2010-07-05T00:00:00-05:00</updated>
    <id>http://creasyw.github.io/blog/2010/07/05/install-click-in-ubuntu-1004</id>
    <content type="html"><![CDATA[<div class="post">
GIT is the best way to acquire the code, so it is necessary to install this software first. Besides, there are several packages needed to patch before the click installs. And it is also tricky for the final step of installation.<br /><br />**************<br /><br /># git clone git://git.kernel.org/pub/scm/git/git.git<br /><br /># apt-get install git-core<br /><br /># git clone git://read.cs.ucla.edu/git/click<br /><br /># apt-get install autoconf<br /><br /># apt-get install libgtk2.0-dev<br /><br /># apt-get install libtool<br /><br />To update to the latest version checked in to the public repository, change into your working copy directory DIR and run:<br /><br /># git pull<br /><br />To fetch the Click packages:<br /><br /># git clone git://read.cs.ucla.edu/git/click-packages DIR<br /><br />Installation of Click:<br /><br /># cd CLICKDIR<br /># ./configure --prefix=$HOME --enable-analysis --enable-test<br /># make install<br /><br />The –prefix=$HOME configuration switch causes Click to install into your home directory. To run the Click driver and read its manual pages, you'll need to add $HOME/bin and $HOME/man&nbsp; to your PATH and MANPATH environment variables, respectively. Alternatively, if you have root privilege on your machine, you can install Click in /usr/local, /usr/local/click, or wherever you'd like.<br /><br />The –enable-analysis and –enable-test configuration switches turn on support for two necessary sub-packages, including trace analysis and regression test elements.<br /><br />If you get a bus error when running Click on a Solaris or other non-x86 machine, try running your conﬁguration through click-align: “click-align config.click | click”. <br /><br />Furthermore, make sure your system has the necessary libraries and packages<br />installed.&nbsp; On a Debian or Ubuntu system, this will include automake,<br />autoconf, libtool, libgtk2.0-dev (or libgtk2-dev), and graphviz.&nbsp; Then:<br /><br /># cd CLICKDIR/apps/clicky<br /># autoreconf -i<br /># ./configure [--prefix=PREFIX] --with-click=CLICKPREFIX<br /># make install<br /><br />That's done:)<br /><br />But on the other hand, there are some warning coming out, although they seem to be all right till now.<br /><br />FIRST &amp; SECOND appear in the Click Configuration step.<br /><br />Your Linux kernel header files cause errors when included by a C++ program,<br />so I won't try to compile the linuxmodule driver.<br /><br />There are two common reasons for this error:<br />1. You have not applied the Linux kernel patch that comes with this distribution.&nbsp; Apply the right patch and try again.&nbsp; See the INSTALL file for more information.<br />2. Your Linux configuration enables some functionality that is not yet covered by our patches.&nbsp; Turn off this functionality and try again, or fix the error and tell us how you did it.&nbsp; See the config.log file for more detailed information on the error.<br /><br />==============<br /><br />WARNING: `makeinfo' is missing on your system.&nbsp; You should only need it if you modified a `.texi' or `.texinfo' file, or any other file indirectly affecting the aspect of the manual.&nbsp; The spurious call might also be the consequence of using a buggy `make' (AIX, DU, IRIX).&nbsp; You might want to install the `Texinfo' package or the `GNU make' package.&nbsp; Grab either from any GNU archive site.<br /><br />=============<br /><br />The THIRD comes out when I build the Click install.<br /><br />click-elem2man: warning: category 'devices' begins with a lowercase letter (used in UMLSwitch)<br />click-elem2man: warning: category 'devices' begins with a lowercase letter (used in UMLSwitch)<br />../missing makeinfo ./click.texi<br />WARNING: `makeinfo' is missing on your system.&nbsp; You should only need it if<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; you modified a `.texi' or `.texinfo' file, or any other file<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; indirectly affecting the aspect of the manual.&nbsp; The spurious<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; call might also be the consequence of using a buggy `make' (AIX,<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; DU, IRIX).&nbsp; You might want to install the `Texinfo' package or<br />&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; the `GNU make' package.&nbsp; Grab either from any GNU archive site.<br />make[1]: [click.info] Error 1 (ignored)<br />......<br />install-info: warning: don't call programs like install-info with an absolute path,<br />install-info: warning: /usr/sbin/install-info provided by dpkg is deprecated and will go away soon;<br />install-info: warning: its replacement lives in /usr/bin/.<br />This is not dpkg install-info anymore, but GNU install-info<br />See the man page for ginstall-info for command line arguments<br />install-info: No such file or directory for /root/share/info/click.info<br />make[1]: [install-info] Error 1 (ignored)<br /><br />=============<br /><br />The FINAL one appears when I build the clicky.<br /><br />xcallbacks.c: In function ‘on_cut1_activate’:<br />xcallbacks.c:11: warning: unused parameter ‘menuitem’<br />xcallbacks.c:12: warning: unused parameter ‘user_data’<br />xcallbacks.c: In function ‘on_copy1_activate’:<br />xcallbacks.c:19: warning: unused parameter ‘menuitem’<br />xcallbacks.c:20: warning: unused parameter ‘user_data’<br />xcallbacks.c: In function ‘on_paste1_activate’:<br />xcallbacks.c:27: warning: unused parameter ‘menuitem’<br />xcallbacks.c:28: warning: unused parameter ‘user_data’<br />xcallbacks.c: In function ‘on_clear1_activate’:<br />xcallbacks.c:35: warning: unused parameter ‘menuitem’<br />xcallbacks.c:36: warning: unused parameter ‘user_data’<br />xcallbacks.c: In function ‘on_properties1_activate’:<br />xcallbacks.c:43: warning: unused parameter ‘menuitem’<br />xcallbacks.c:44: warning: unused parameter ‘user_data’<br />xcallbacks.c: In function ‘on_preferences1_activate’:<br />xcallbacks.c:51: warning: unused parameter ‘menuitem’<br />xcallbacks.c:52: warning: unused parameter ‘user_data’<br />xcallbacks.c: In function ‘on_about1_activate’:<br />xcallbacks.c:59: warning: unused parameter ‘menuitem’<br />xcallbacks.c:60: warning: unused parameter ‘user_data’</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install madwifi in UBUNTU 10.04]]></title>
    <link href="http://creasyw.github.io/blog/2010/07/02/install-wireshark-madwifi-and-rt2870/"/>
    <updated>2010-07-02T00:00:00-05:00</updated>
    <id>http://creasyw.github.io/blog/2010/07/02/install-wireshark-madwifi-and-rt2870</id>
    <content type="html"><![CDATA[<div class="post">
When I install the madwifi driver from madwifi.org, the problem appears:<br /><blockquote><br /><pre><code>In file included from /home/user/madwifi/madwifi-hal-0.10.5.6/ath/../net80211/ieee80211_monitor.h:34,<br />from /home/user/madwifi/madwifi-hal-0.10.5.6/ath/if_ath.c:75:<br />/home/user/madwifi/madwifi-hal-0.10.5.6/ath/../ath/if_athvar.h:107: error: conflicting types for 'irqreturn_t'<br />include/linux/irqreturn.h:16: note: previous declaration of 'irqreturn_t' was here<br />/home/user/madwifi/madwifi-hal-0.10.5.6/ath/if_ath.c: In function 'ath_attach':<br />/home/user/madwifi/madwifi-hal-0.10.5.6/ath/if_ath.c:478: error: 'struct net_device' has no member named 'priv'<br />/home/user/madwifi/madwifi-hal-0.10.5.6/ath/if_ath.c:819: error: 'struct net_device' has no member named 'open'<br />/home/user/madwifi/madwifi-hal-0.10.5.6/ath/if_ath.c:820: error: 'struct net_device' has no member named 'stop'<br />/home/user/madwifi/madwifi-hal-0.10.5.6/ath/if_ath.c:821: error: 'struct net_device' has no member named 'hard_start_xmit'<br />/home/user/madwifi/madwifi-hal-0.10.5.6/ath/if_ath.c:822: error: 'struct net_device' has no member named 'tx_timeout'<br />.....<br />.....<br />.....<br />make[3]: *** [/home/user/madwifi/madwifi-hal-0.10.5.6/ath/if_ath.o] Error 1<br />make[2]: *** [/home/user/madwifi/madwifi-hal-0.10.5.6/ath] Error 2<br />make[1]: *** [_module_/home/user/madwifi/madwifi-hal-0.10.5.6] Error 2<br />make[1]: Leaving directory `/usr/src/linux-headers-2.6.31-14-generic'<br />make: *** [modules] Error 2</code></pre></blockquote>This is due to the fact that there was a change in the kernel headers. The new kernels replaced the old net_device structure with a new one called net_device_ops. It looks like this change exists since kernel 2.6.29 and up.<br /><br />There currently is no stable release of the madwifi drivers for the new kernerls. But the madwifi project's latest trunk compiles and works fine (at least for me) and I have not noticed any issues yet. This should work with any Linux distribution with a kernel of 2.6.29 and above. To find out your kernel version run:<br /><blockquote>$uname -r</blockquote>Here is how to get and install it:<br /><br />1. You can either get the latest trunk from the madwifi website at <a href="http://snapshots.madwifi-project.org/madwifi-trunk-current.tar.gz">here</a> or use the one that worked for me (<a href="http://dimitar.me/wp-content/uploads/2009/10/madwifi-trunk-r4099-20090929.tar.gz">click</a>).<br /><br />2. Download and uncompress the files, cd to the directory containing the file. Then gunzip and untar the files:<br /><blockquote>tar -xvzf madwifi-trunk-r4099-20090929.tar.gz</blockquote>3. Cd into the newly created directory and install the drivers. Firstly, make sure you have the kernel headers:<br /><blockquote>sudo apt-get install build-essential</blockquote>Then compile and install:<br /><blockquote>sudo make<br />sudo make install</blockquote>4. Add the ath_pci module to the kernel. You need to add a line to the end of the /etc/modules file. The line should read: ath_pci. You can do this with vi of course, but if you don't know the vi editor then it would be much easier to use gedit. So, do:<br /><blockquote>sudo gedit /etc/modules</blockquote>Add ath_pci to the end of the file. Here is how my file looks:<br /><blockquote><pre><code># /etc/modules: kernel modules to load at boot time.<br />#<br /># This file contains the names of kernel modules that should be loaded<br /># at boot time, one per line. Lines beginning with "#" are ignored.<br /><br />lp<br />sbp2<br />ath_pci</code></pre></blockquote>At this point you can reboot and you should have wireless. You could save yourself a reboot by modprobing the kernel with the ath_pci module like this:<br /><blockquote>sudo modprobe ath_pci</blockquote>That's done:)</div>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Install RT2870 usb wireless adapter  in Ubuntu 10]]></title>
    <link href="http://creasyw.github.io/blog/2010/07/02/install-rt2870-usb-wireless-adapter-in/"/>
    <updated>2010-07-02T00:00:00-05:00</updated>
    <id>http://creasyw.github.io/blog/2010/07/02/install-rt2870-usb-wireless-adapter-in</id>
    <content type="html"><![CDATA[<div class="post">
Step 0 : At terminal, aaa@ubuntu:~$ sudo gedit /etc/modprobe.d/blacklist.conf. Add “blacklist rt2870usb” without quote at the end of the file, then save it.<br /><br />Step 1 : Download the latest rt2870 driver (<a href="http://www.ralinktech.com/support.php?s=2">here</a>) from Ralink.<br /><br />Step 2 : Untar the file and save to your home folder, and name it. (eg. the folder name is rt2870)<br /><br />Step 2.51 : According to the instruction I found in the internet, there should be another three steps done with the dongle: firstly, without plug your wireless usb at this moment, at terminal aaa@ubuntu:~$ type lsusb.<br /><br />Step 2.52 : Then plug in the wireless usb to the computer, type lsusb again, the&nbsp;wireless usb ID (8 digits)&nbsp;will be found. Write it down.<br /><br />Step 2.53 : Check it at aaa@ubuntu:~/rt2870/os/linux$, sudo gedit usb_main_dev.c. If the usb device is not included, add the wireless usb ID. Save the file. For example, the additional two lines are:<br />{USB_DEVICE(0x0B05,0x1761)}, /* Asus */<br />{USB_DEVICE(0x1761,0x0B05)}, /* Asus */<br /><br />Step 3 :&nbsp;In Makefile,&nbsp;set the "MODE = STA" in Makefile and chose the TARGET to Linux by set "TARGET = LINUX". Then, change the directory of RT28XX_DIR in line 7 by "aaa@ubuntu:~$&nbsp;shell pwd". Finally, via the command "aaa@ubuntu:~$&nbsp;shell uname -r",&nbsp;define the linux kernel source include file path LINUX_SRC&nbsp;modify to meet your need.<br /><br />Step 4 : At same terminal , sudo gedit config.mk, and change two settings.<br /># Support Wpa_Supplicant<br />HAS_WPA_SUPPLICANT=n → y<br /># Support Native WpaSupplicant for Network Maganger<br />HAS_NATIVE_WPA_SUPPLICANT_SUPPORT=n → y<br /><br />Step 5 : At aaa@ubuntu:~/rt2870$, sudo gedit Makefile, check the folllowing at the top of the file:<br />RT28xx_MODE = STA<br />TARGET = LINUX<br />CHIPSET = 2870<br />If ok, close the file. If not, change the setting as above.<br /><br />Step 6: rt2870 2.2.00 version do not support kernel 2.6.31-14-generic, so you have to do a patch. The download link is <a href="http://launchpadlibrarian.net/35348337/rt2870-2.6.31.patch">here</a>, and the patch is via "patch -p1 &lt; rt2870-2.6.31.patch".If you get a message of unable to patch, then download and install Patch_2.5.9-5_amd64.deb.<br /><br />Step 7 : At aaa@ubuntu:~/rt2870$, do the compilation.<br />sudo make uninstall<br />sudo make clean<br />sudo make<br />sudo make install<br /><br />Step 8 : At aaa@ubuntu:~$ sudo modprobe rt2870sta<br /><br />Step 9 : At aaa@ubuntu”~$ sudo gedit /etc/rc.local, add following two lines prior to exit0.<br />ifconfig ra0 up<br />pkill NetworkManager<br />save it, then at same terminal, sudo gedit /etc/modules, add rt2870sta, then save the file.<br /><br />Step 10 :At aaa@ubuntu:~$ ifconfig or iwconfig, you will see your wireless is up as ra0 or wlan0.<br /><br />Step 11 : Now configure networkmanager, use wep instead of wpa-psk or wpa2-psk. Your wireless will be able to connect to the internet. If there's no connection, then do step 12.<br /><br />Step 12 : Update networkmanager. Go to System – Software Sources – Other software, add the following line<br />deb http://ppa.launchpad.net/network-manager/trunk/ubuntu karmic main<br /><br />That's the end.</div>
]]></content>
  </entry>
  
</feed>
