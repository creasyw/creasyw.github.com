<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: LISP | Qiong Wu]]></title>
  <link href="http://creasyw.github.io/blog/categories/lisp/atom.xml" rel="self"/>
  <link href="http://creasyw.github.io/"/>
  <updated>2013-09-13T23:02:25-05:00</updated>
  <id>http://creasyw.github.io/</id>
  <author>
    <name><![CDATA[Qiong Wu]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Setup emacs in Mac OS]]></title>
    <link href="http://creasyw.github.io/blog/2013/07/01/setup-emacs-in-mac-os/"/>
    <updated>2013-07-01T00:00:00-05:00</updated>
    <id>http://creasyw.github.io/blog/2013/07/01/setup-emacs-in-mac-os</id>
    <content type="html"><![CDATA[<div class='post'>
<br />The setup is much harder than I thought...<br /><br />1) using homebrew installs the emacs and guile. Then, I also need to add path in the .bash_profile to launch the up-to-date emacs rather than the original version 22.1 shipped with the os.<br /><code>export PATH=/usr/local/Cellar/emacs/24.3/bin:$PATH</code><br />2) Enable the <a href="http://stackoverflow.com/questions/162896/emacs-on-mac-os-x-leopard-key-bindings">Meta key in terminal</a>, or similar position for iterm2.<br /><br />After these two steps, the following is more&nbsp;straightforward.<br /><br />3) I accidentally found this "<a href="https://github.com/technomancy/emacs-starter-kit">emacs-starter-kit</a>", which had 2300+ stared and really saved my day. Just follow the instruction and everything will be fine.<br /><br />In current state, I feel emacs kind of like vim+tmux. Anyway, learning new knowledge is always a pleasure, especially about this kind of "legacy" stuff.<br /><br /><br />cheers,<br /><br />[UPDATE: after changed the loading sequence of bash in <code>/etc/paths/</code> the first step seems unnecessary... actually, that was something I should do as soon as I used homebrew to port packages.&nbsp;<a href="http://bit.ly/IUVl9a">http://bit.ly/IUVl9a</a></div>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Set up Racket for Vim and mac Terminal]]></title>
    <link href="http://creasyw.github.io/blog/2013/02/19/set-up-racket-for-vim-and-mac-terminal/"/>
    <updated>2013-02-19T00:00:00-06:00</updated>
    <id>http://creasyw.github.io/blog/2013/02/19/set-up-racket-for-vim-and-mac-terminal</id>
    <content type="html"><![CDATA[<div class='post'>
&nbsp; &nbsp; <br />Racket is fairly great:), though the setting up procedure is kind of twisted. There is a .dmg installation file in the official website, which makes it quite straightforward to install in the Application folder. And, of course, the DrRacket app is awesome when I accidentally put mouse in one of the variables in the code, and then all its dependencies reveal via arrows.<br /><br />But I am still used to writing code in vim and testing it in a parallel split window of iterm. I googled the solution, but cannot find a comprehensive one. So, I just list my solution here, which come from either stackoverflow or other persons' blogs.<br /><br />1) vim syntax and highlight are <a href="https://github.com/wlangstroth/vim-racket">out there</a> ready for use.<br /><br />2) Adding one command line to ~/.vimrc<br /><code>&nbsp;au BufRead,BufNewFile *.rkt set filetype=racket</code><br />3) Adding the path of executable racket to ~/.bach_profile.<br /><code> export PATH=$PATH:/Applications/Racket\ v5.3.3/bin/</code><br />4) If using the existing file, one should delete the first line of code "#lang racket" if existed.<br /><br />5) Optional. Installing rlwrap to make the repl more user friendly.<br /><br />That is much of it.<br /><br /><br />cheers,</div>

]]></content>
  </entry>
  
</feed>
